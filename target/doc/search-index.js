var searchIndex = new Map(JSON.parse('[["typelang",{"t":"CCCCCCCCPPPPPPFPGPPPGPPPPPFFPPPPPPPFPGPNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOONNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNPPPPIPPPFPPPGONNNNNNNNNNHONNNNHNNNNNNNNNNOOOFNNNNNNNHHHHHNOONNNHNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFGPPNNNNNNNNNNONNNNNNNNOHOONNNNNNNNOFNNNNNHNHNNNNNNCHEHFFFFIFPFPFPFPFPFGFFNNHHHHHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOHNNNNNNNNNOOHNNNNNNNNNNNNNONOONNNHOHOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNHO","n":["ast","errors","evaluator","infer","lexer","parser","repl","typesys","Annot","App","Bin","BinOp","BoolLit","CharLit","Constraint","Dec","Expr","FloatLit","Hex","If","IntBase","IntLit","Lambda","LetIn","ListLit","Oct","Program","SigmaType","StringLit","TEApp","TECon","TEFun","TEList","TETuple","TEVar","TopLevel","TupleLit","TypeExpr","Var","borrow","","","","","","","borrow_mut","","","","","","","classname","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","constraints","decls","eq","","","","","","","expr","fmt","","","","","","","","from","","","","","","","into","","","","","","","name","params","signature","to_owned","","","","","","","to_string","try_from","","","","","","","try_into","","","","","","","type","type_id","","","","","","","typevar","arg","base","bindings","body","","cond","else_branch","expr","func","items","","left","name","op","params","right","then_branch","type_expr","value","","","","","ErrorInfo","EvalError","LexerError","ParseError","TypeError","at","","","","","at_with_snippet","","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","code","col","fmt","","","","","","","","","","from","","","","","into","","","","","line","msg","new","","","","","pos","snippet","to_owned","","","","","to_string","","","","","try_from","","","","","try_into","","","","","type_id","","","","","with_snippet","Bool","Char","Closure","Double","Env","Int","List","Prim1","Prim2","","String","Tuple","Value","a","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","eval_expr","f","fmt","","from","","initial_env","into","","to_owned","","try_from","","try_into","","type_id","","body","env","params","InferState","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","infer_expr","infer_type_str","infer_type_str_with_defaulting","initial_class_env","initial_env","into","subst","supply","to_owned","try_from","try_into","type_from_texpr","type_id","ARROW","BIN","CARET","CHAR","COMMA","CONID","DARROW","DBLSTAR","DCOLON","ELSE","EOF","EQ","EQUAL","FALSE","FLOAT","GE","GT","HEX","IF","IN","INT","LAMBDA","LBRACK","LE","LET","LPAREN","LT","MINUS","NE","OCT","PLUS","QMARK","RBRACK","RPAREN","SEMI","SLASH","STAR","STRING","THEN","TRUE","Token","TokenKind","UNDERSCORE","VARID","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","col","eq","","fmt","","from","","into","","kind","lex","line","pos","to_owned","","try_from","","try_into","","type_id","","value","Parser","borrow","borrow_mut","from","into","new","parse_expr","","parse_program","","parse_sigma_type","parse_type","try_from","try_into","type_id","cmd","load_program_into_env","run_repl","","ClassEnv","Constraint","QualType","Scheme","Subst","TApp","","TCon","","TFun","","TTuple","","TVar","","TVarSupply","Type","TypeEnv","UnifyError","add_class","add_instance","apply_defaulting_simple","apply_subst_c","apply_subst_q","apply_subst_s","apply_subst_t","arg","","bind","borrow","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","classes","classname","clone","","","","","","","","","","","","","clone_env","clone_into","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","code","compose","constraints","default","","","entails","env","eq","","","","","","","","","extend","fmt","","","","","","","","","","","","","fresh","from","","","","","","","","","","","","","ftv","func","generalize","hash","","","","","","","","","id","instances","instantiate","into","","","","","","","","","","","","","items","lookup","message","name","new","","","pretty_qual","qual","qualify","ret","t_list","t_string","to_owned","","","","","","","","","","","","","try_from","","","","","","","","","","","","","try_into","","","","","","","","","","","","","type","","type_id","","","","","","","","","","","","","unify","vars"],"q":[[0,"typelang"],[8,"typelang::ast"],[141,"typelang::ast::Expr"],[164,"typelang::errors"],[258,"typelang::evaluator"],[299,"typelang::evaluator::Value"],[302,"typelang::infer"],[323,"typelang::lexer"],[399,"typelang::parser"],[414,"typelang::repl"],[417,"typelang::repl::cmd"],[418,"typelang::typesys"],[657,"alloc::string"],[658,"alloc::vec"],[659,"core::fmt"],[660,"core::option"],[661,"core::result"],[662,"core::any"],[663,"alloc::boxed"],[664,"core::convert"],[665,"core::iter::traits::collect"],[666,"std::collections::hash::map"],[667,"std::collections::hash::set"],[668,"core::hash"],[669,"typelang::repl::loader"]],"i":"````````j0l111`0`101`11110``1n00000`2`2210fA`AbAd65432103654321065432106543210206543210166543210654321065432101116543210665432106543210265432103BhBlBnC`1Cb0Cd5CfChCjCl161548D`DdDhDj`````E`EdEfEhEj314321043210432104321043210444433221100432104321044432104443210432104321043210432104En000`000`000`El1010101010`01010`1010101010Fd00`Ff000000`````000000`0Gh000000000000000000000000000000000000000``00Gf1010101010010101010`00010101010`Gj0000`0`000000``````````Gd`0`0`0`0````Fj0`````HdHf`HhHn32I`6H`FnHbFhGbHj;87:96<543210;;587:96<543210;287:96<543210;87:96<543210;0`421;;287:96<543287:96<543210;187:96<543210;`:`87:96<5438;`87:96<543210;6207210`3`9``87:96<543210;87:96<543210;87:96<543210;5487:96<543210;`3","f":"```````````````````````````````````````{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}000000{fh}{{{b{j}}}j}{{{b{l}}}l}{{{b{n}}}n}{{{b{f}}}f}{{{b{A`}}}A`}{{{b{Ab}}}Ab}{{{b{Ad}}}Ad}{{b{b{dc}}}Af{}}000000{{bAh}Af}000000{A`Aj}{AdAj}{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{n}}{b{n}}}Al}{{{b{f}}{b{f}}}Al}{{{b{A`}}{b{A`}}}Al}{{{b{Ab}}{b{Ab}}}Al}{{{b{Ad}}{b{Ad}}}Al}{Abj}{{{b{j}}{b{dAn}}}B`}0{{{b{l}}{b{dAn}}}B`}{{{b{n}}{b{dAn}}}B`}{{{b{f}}{b{dAn}}}B`}{{{b{A`}}{b{dAn}}}B`}{{{b{Ab}}{b{dAn}}}B`}{{{b{Ad}}{b{dAn}}}B`}{cc{}}000000{{}c{}}000000{Abh}{AbAj}{AbBb}{bc{}}000000{bh}{c{{Bd{e}}}{}{}}000000{{}{{Bd{c}}}{}}000000{A`n}{bBf}000000{fh}{BhBj}{Bll}{BnAj}{C`Bj}{BnBj}{CbBj}0{CdBj}6{CfAj}{ChAj}{CjBj}{Clh}{Cjh}{C`Aj}37{Cdn}{BlCn}{D`Db}{DdDf}{Dhh}{DjAl}`````{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}E`{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}Ed{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}Ef{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}Eh{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}Ej{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}e}Ed{{Eb{h}}}{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}e}Eh{{Eb{h}}}{{Eb{h}}}}{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{E`}}}E`}{{{b{Ed}}}Ed}{{{b{Ef}}}Ef}{{{b{Eh}}}Eh}{{{b{Ej}}}Ej}{{b{b{dc}}}Af{}}0000{{bAh}Af}0000{E`b}{E`Bb}{{{b{E`}}{b{dAn}}}B`}0{{{b{Ed}}{b{dAn}}}B`}0{{{b{Ef}}{b{dAn}}}B`}0{{{b{Eh}}{b{dAn}}}B`}0{{{b{Ej}}{b{dAn}}}B`}0{cc{}}0000{{}c{}}00007{E`h}{{{b{Dl}}c{Bb{Dn}}}E`{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}}Ed{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}}Ef{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}}Eh{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}}Ej{{Eb{h}}}}=={bc{}}0000{bh}0000{c{{Bd{e}}}{}{}}0000{{}{{Bd{c}}}{}}0000{bBf}0000{{E`c}E`{{Eb{h}}}}`````````````{ElBb}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{En}}}En}{{{b{El}}}El}{{b{b{dc}}}Af{}}0{{bAh}Af}0{{{b{j}}{b{dF`}}}{{Bd{EnEj}}}}{ElFb}{{{b{En}}{b{dAn}}}B`}{{{b{El}}{b{dAn}}}B`}{cc{}}0{{}F`}{{}c{}}0{bc{}}0{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{bBf}0{FdBj}{FdF`}{FdAj}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ff}}}Ff}{{b{b{dc}}}Af{}}{{bAh}Af}{{{b{Ff}}{b{dAn}}}B`}?{{{b{Fh}}{b{Fj}}{b{dFf}}{b{j}}}{{Bd{{G`{FlFn}}Eh}}}}{{{b{j}}}{{Bd{hEh}}}}{{{b{j}}Al}{{Bd{hEh}}}}{{}Fj}{{}Fh}{{}c{}}{FfFl}{FfGb}{bc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{{{b{n}}}Gd}{bBf}````````````````````````````````````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{dc}}}Af{}}0{{bAh}Af}0{GfDn}{{{b{Gf}}{b{Gf}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{Gf}}{b{dAn}}}B`}{{{b{Gh}}{b{dAn}}}B`}{cc{}}0{{}c{}}0{GfGh}{{{b{Dl}}}{{Bd{{Aj{Gf}}Ed}}}}88{bc{}}0{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{bBf}0{Gfh}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}:9{{{Aj{Gf}}}Gj}{{{b{Dl}}}{{Bd{jEf}}}}{{{b{dGj}}}{{Bd{jEf}}}}{{{b{Dl}}}{{Bd{AdEf}}}}{{{b{dGj}}}{{Bd{AdEf}}}}{{{b{dGj}}}{{Bd{A`Ef}}}}{{{b{dGj}}}{{Bd{nEf}}}}<;:`{{{b{Ad}}{b{dFh}}{b{Fj}}{b{dF`}}}{{Bd{{Aj{h}}h}}}}`{{}Af}```````````````````{{{b{dFj}}cg}Af{{Eb{h}}}{{Eb{h}}}{{Gn{}{{Gl{e}}}}}}{{{b{dFj}}ce}Af{{Eb{h}}}{{Eb{h}}}}{{{b{Fn}}}Fn}{{{b{Fl}}{b{H`}}}H`}{{{b{Fl}}{b{Fn}}}Fn}{{{b{Fl}}{b{Hb}}}Hb}{{{b{Fl}}{b{Gd}}}Gd}{HdBj}{HfBj}{{HhGd}{{Bd{FlHj}}}}{b{{b{c}}}{}}000000000000{{{b{d}}}{{b{dc}}}{}}000000000000{FjHl}{H`h}{{{b{Hh}}}Hh}{{{b{Hn}}}Hn}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{I`}}}I`}{{{b{Gd}}}Gd}{{{b{H`}}}H`}{{{b{Fn}}}Fn}{{{b{Hb}}}Hb}{{{b{Fh}}}Fh}{{{b{Gb}}}Gb}{{{b{Hj}}}Hj}{{{b{Fj}}}Fj}3{{b{b{dc}}}Af{}}000000000000{{bAh}Af}000000000000{Hjb}{{{b{Fl}}{b{Fl}}}Fl}{FnAj}{{}Fh}{{}Gb}{{}Fj}{{{b{Fj}}{b{{Ib{H`}}}}}Al}{FhHl}{{{b{Hh}}{b{Hh}}}Al}{{{b{Hn}}{b{Hn}}}Al}{{{b{Hd}}{b{Hd}}}Al}{{{b{Hf}}{b{Hf}}}Al}{{{b{I`}}{b{I`}}}Al}{{{b{Gd}}{b{Gd}}}Al}{{{b{H`}}{b{H`}}}Al}{{{b{Fn}}{b{Fn}}}Al}{{{b{Hb}}{b{Hb}}}Al}{{{b{dFh}}cHb}Af{{Eb{h}}}}{{{b{Hh}}{b{dAn}}}B`}{{{b{Hn}}{b{dAn}}}B`}{{{b{Hd}}{b{dAn}}}B`}{{{b{Hf}}{b{dAn}}}B`}{{{b{I`}}{b{dAn}}}B`}{{{b{Gd}}{b{dAn}}}B`}{{{b{H`}}{b{dAn}}}B`}{{{b{Fn}}{b{dAn}}}B`}{{{b{Hb}}{b{dAn}}}B`}{{{b{Fh}}{b{dAn}}}B`}{{{b{Gb}}{b{dAn}}}B`}{{{b{Hj}}{b{dAn}}}B`}{{{b{Fj}}{b{dAn}}}B`}{{{b{dGb}}}Hh}{cc{}}000000000000{{{b{Gd}}}{{Id{Cn}}}}{HdBj}{{{b{Fh}}Fn}Hb}{{{b{Hh}}{b{dc}}}AfIf}{{{b{Hn}}{b{dc}}}AfIf}{{{b{Hd}}{b{dc}}}AfIf}{{{b{Hf}}{b{dc}}}AfIf}{{{b{I`}}{b{dc}}}AfIf}{{{b{Gd}}{b{dc}}}AfIf}{{{b{H`}}{b{dc}}}AfIf}{{{b{Fn}}{b{dc}}}AfIf}{{{b{Hb}}{b{dc}}}AfIf}{HhCn}{FjId}{{{b{Hb}}{b{dGb}}}Fn}{{}c{}}000000000000{I`Aj}{{{b{Fh}}{b{Dl}}}{{Bb{{b{Hb}}}}}}{Hjh}{Hnh}{{}Fh}{{}Gb}{{{b{Dl}}c}Hj{{Eb{h}}}}{{{b{Fn}}}h}{HbFn}{{Gd{Aj{H`}}}Fn}{HfBj}{GdGd}{{}Gd}{bc{}}000000000000{c{{Bd{e}}}{}{}}000000000000{{}{{Bd{c}}}{}}000000000000{H`Gd}{FnGd}{bBf}000000000000{{GdGd}{{Bd{FlHj}}}}{HbAj}","D":"Il","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Constraint",8],[5,"String",657],[6,"Expr",8],[6,"IntBase",8],[6,"TypeExpr",8],[5,"SigmaType",8],[5,"TopLevel",8],[5,"Program",8],[1,"unit"],[1,"u8"],[5,"Vec",658],[1,"bool"],[5,"Formatter",659],[8,"Result",659],[6,"Option",660,null,1],[6,"Result",661,null,1],[5,"TypeId",662],[15,"App",141],[5,"Box",663,null,1],[15,"IntLit",141],[15,"LetIn",141],[15,"Lambda",141],[15,"If",141],[15,"Annot",141],[15,"ListLit",141],[15,"TupleLit",141],[15,"BinOp",141],[15,"Var",141],[1,"i64"],[15,"FloatLit",141],[1,"f64"],[15,"CharLit",141],[1,"char"],[15,"StringLit",141],[15,"BoolLit",141],[1,"str"],[1,"usize"],[5,"ErrorInfo",164],[10,"Into",664,null,1],[5,"LexerError",164],[5,"ParseError",164],[5,"TypeError",164],[5,"EvalError",164],[5,"Prim2",258],[6,"Value",258],[8,"Env",258],[1,"fn"],[15,"Closure",299],[5,"InferState",302],[5,"TypeEnv",418],[5,"ClassEnv",418],[8,"Subst",418],[5,"QualType",418],[1,"tuple",null,null,1],[5,"TVarSupply",418],[6,"Type",418],[5,"Token",323],[6,"TokenKind",323],[5,"Parser",399],[17,"Item"],[10,"IntoIterator",665],[5,"Constraint",418],[5,"Scheme",418],[5,"TApp",418],[5,"TFun",418],[5,"TVar",418],[5,"UnifyError",418],[5,"HashMap",666],[5,"TCon",418],[5,"TTuple",418],[1,"slice"],[5,"HashSet",667],[10,"Hasher",668]],"r":[[415,669],[416,417]],"b":[[85,"impl-Debug-for-Expr"],[86,"impl-Display-for-Expr"],[203,"impl-Debug-for-ErrorInfo"],[204,"impl-Display-for-ErrorInfo"],[205,"impl-Debug-for-LexerError"],[206,"impl-Display-for-LexerError"],[207,"impl-Display-for-ParseError"],[208,"impl-Debug-for-ParseError"],[209,"impl-Display-for-TypeError"],[210,"impl-Debug-for-TypeError"],[211,"impl-Display-for-EvalError"],[212,"impl-Debug-for-EvalError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEMCEQAJAFQAbABpAOAAPgAhAQAAJAERADcBBAA9AUEAgwEPAJUBAQCYAQAAmgEEAKEBAACjARQAuQFqADECDgBNAgYAVQI8AA==","P":[[39,"T"],[53,""],[61,"T"],[68,""],[93,"T"],[100,"U"],[107,""],[110,"T"],[117,""],[118,"U,T"],[125,"U"],[132,""],[176,"T"],[186,""],[191,"T"],[196,""],[213,"T"],[218,"U"],[223,""],[232,"T"],[237,""],[242,"U,T"],[247,"U"],[252,""],[272,"T"],[276,""],[278,"T"],[280,""],[286,"T"],[288,""],[289,"U"],[291,"T"],[293,"U,T"],[295,"U"],[297,""],[303,"T"],[305,""],[306,"T"],[307,""],[309,"T"],[310,""],[315,"U"],[316,""],[318,"T"],[319,"U,T"],[320,"U"],[321,""],[367,"T"],[371,""],[373,"T"],[375,""],[382,"T"],[384,"U"],[386,""],[390,"T"],[392,"U,T"],[394,"U"],[396,""],[400,"T"],[403,"U"],[404,""],[411,"U,T"],[412,"U"],[413,""],[447,"T"],[473,""],[489,"T"],[502,""],[547,"T"],[560,""],[563,"__H"],[572,""],[575,"U"],[588,""],[601,"T"],[614,"U,T"],[627,"U"],[640,""]]}],["typelang_repl",{"t":"H","n":["main"],"q":[[0,"typelang_repl"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[13016,187]}