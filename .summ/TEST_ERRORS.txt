target/debug/deps/typelang-2e7b82660625e10e.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/libtypelang-2e7b82660625e10e.rmeta: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs Cargo.toml
target/debug/deps/typelang-2e7b82660625e10e.d:7:src/errors.rs:
target/miri/x86_64-unknown-linux-gnu/debug/deps/error_cases-8dbea487e6b948e0:1:{"RunWith":{"args":["--crate-name","error_cases","--edition=2021","tests/error_cases.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=1521937ebcc339a8","-C","extra-filename=-8dbea487e6b948e0","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[101,114,114,111,114,95,99,97,115,101,115]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/llvm-cov/html/coverage/home/hsin4/myproject/typelang-hm-rs/src/lexer.rs.html:1:<!doctype html><html><head><meta name='viewport' content='width=device-width,initial-scale=1'><meta charset='UTF-8'><link rel='stylesheet' type='text/css' href='../../../../../../style.css'><script src='../../../../../../control.js'></script></head><body><h2>Coverage Report</h2><h4>Created: 2025-09-17 18:09</h4><span class='control'><a href='javascript:next_line()'>next uncovered line (L)</a>, <a href='javascript:next_region()'>next uncovered region (R)</a>, <a href='javascript:next_branch()'>next uncovered branch (B)</a></span><div class='centered'><table><div class='source-name-title'><pre>/home/hsin4/myproject/typelang-hm-rs/src/lexer.rs</pre></div><tr><td><pre>Line</pre></td><td><pre>Count</pre></td><td><pre>Source</pre></td></tr><tr><td class='line-number'><a name='L1' href='#L1'><pre>1</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! 字句解析（lexer）</pre></td></tr><tr><td class='line-number'><a name='L2' href='#L2'><pre>2</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//!</pre></td></tr><tr><td class='line-number'><a name='L3' href='#L3'><pre>3</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! 目的:</pre></td></tr><tr><td class='line-number'><a name='L4' href='#L4'><pre>4</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! - EBNFに従ってソース文字列をトークン列に変換する。</pre></td></tr><tr><td class='line-number'><a name='L5' href='#L5'><pre>5</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//!</pre></td></tr><tr><td class='line-number'><a name='L6' href='#L6'><pre>6</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! 方針/制約:</pre></td></tr><tr><td class='line-number'><a name='L7' href='#L7'><pre>7</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! - 標準ライブラリのみ（正規表現ライブラリは不使用）。</pre></td></tr><tr><td class='line-number'><a name='L8' href='#L8'><pre>8</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! - UTF-8 前提。コードポイント単位で走査し、2文字演算子やコメント終端を安全に検出。</pre></td></tr><tr><td class='line-number'><a name='L9' href='#L9'><pre>9</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! - エラーは一意なコード（`LEX***`）と位置（バイトオフセット）で報告。</pre></td></tr><tr><td class='line-number'><a name='L10' href='#L10'><pre>10</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L11' href='#L11'><pre>11</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use crate::errors::LexerError;</pre></td></tr><tr><td class='line-number'><a name='L12' href='#L12'><pre>12</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L13' href='#L13'><pre>13</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[derive(Debug, Clone, PartialEq, Eq)]</pre></td></tr><tr><td class='line-number'><a name='L14' href='#L14'><pre>14</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub struct Token {</pre></td></tr><tr><td class='line-number'><a name='L15' href='#L15'><pre>15</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub kind: TokenKind,</pre></td></tr><tr><td class='line-number'><a name='L16' href='#L16'><pre>16</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub value: String,</pre></td></tr><tr><td class='line-number'><a name='L17' href='#L17'><pre>17</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub pos: usize,</pre></td></tr><tr><td class='line-number'><a name='L18' href='#L18'><pre>18</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub line: usize,</pre></td></tr><tr><td class='line-number'><a name='L19' href='#L19'><pre>19</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub col: usize,</pre></td></tr><tr><td class='line-number'><a name='L20' href='#L20'><pre>20</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L21' href='#L21'><pre>21</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L22' href='#L22'><pre>22</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[derive(Debug, Clone, PartialEq, Eq)]</pre></td></tr><tr><td class='line-number'><a name='L23' href='#L23'><pre>23</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub enum TokenKind {</pre></td></tr><tr><td class='line-number'><a name='L24' href='#L24'><pre>24</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    EOF,</pre></td></tr><tr><td class='line-number'><a name='L25' href='#L25'><pre>25</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // 記号/演算子</pre></td></tr><tr><td class='line-number'><a name='L26' href='#L26'><pre>26</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    LAMBDA, // &apos;\\&apos;</pre></td></tr><tr><td class='line-number'><a name='L27' href='#L27'><pre>27</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    ARROW,  // &apos;-&gt;&apos;</pre></td></tr><tr><td class='line-number'><a name='L28' href='#L28'><pre>28</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    DCOLON, // &apos;::&apos;</pre></td></tr><tr><td class='line-number'><a name='L29' href='#L29'><pre>29</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    DARROW, // &apos;=&gt;&apos;</pre></td></tr><tr><td class='line-number'><a name='L30' href='#L30'><pre>30</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    LE,</pre></td></tr><tr><td class='line-number'><a name='L31' href='#L31'><pre>31</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    GE,</pre></td></tr><tr><td class='line-number'><a name='L32' href='#L32'><pre>32</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    EQ,</pre></td></tr><tr><td class='line-number'><a name='L33' href='#L33'><pre>33</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    NE,</pre></td></tr><tr><td class='line-number'><a name='L34' href='#L34'><pre>34</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    LT,</pre></td></tr><tr><td class='line-number'><a name='L35' href='#L35'><pre>35</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    GT,</pre></td></tr><tr><td class='line-number'><a name='L36' href='#L36'><pre>36</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    PLUS,</pre></td></tr><tr><td class='line-number'><a name='L37' href='#L37'><pre>37</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    MINUS,</pre></td></tr><tr><td class='line-number'><a name='L38' href='#L38'><pre>38</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    DBLSTAR,</pre></td></tr><tr><td class='line-number'><a name='L39' href='#L39'><pre>39</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    STAR,</pre></td></tr><tr><td class='line-number'><a name='L40' href='#L40'><pre>40</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    SLASH,</pre></td></tr><tr><td class='line-number'><a name='L41' href='#L41'><pre>41</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    CARET,</pre></td></tr><tr><td class='line-number'><a name='L42' href='#L42'><pre>42</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    LPAREN,</pre></td></tr><tr><td class='line-number'><a name='L43' href='#L43'><pre>43</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    RPAREN,</pre></td></tr><tr><td class='line-number'><a name='L44' href='#L44'><pre>44</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    LBRACK,</pre></td></tr><tr><td class='line-number'><a name='L45' href='#L45'><pre>45</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    RBRACK,</pre></td></tr><tr><td class='line-number'><a name='L46' href='#L46'><pre>46</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    COMMA,</pre></td></tr><tr><td class='line-number'><a name='L47' href='#L47'><pre>47</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    SEMI,</pre></td></tr><tr><td class='line-number'><a name='L48' href='#L48'><pre>48</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    EQUAL,</pre></td></tr><tr><td class='line-number'><a name='L49' href='#L49'><pre>49</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    QMARK,</pre></td></tr><tr><td class='line-number'><a name='L50' href='#L50'><pre>50</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    UNDERSCORE,</pre></td></tr><tr><td class='line-number'><a name='L51' href='#L51'><pre>51</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // リテラル</pre></td></tr><tr><td class='line-number'><a name='L52' href='#L52'><pre>52</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    CHAR,</pre></td></tr><tr><td class='line-number'><a name='L53' href='#L53'><pre>53</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    STRING,</pre></td></tr><tr><td class='line-number'><a name='L54' href='#L54'><pre>54</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    HEX,</pre></td></tr><tr><td class='line-number'><a name='L55' href='#L55'><pre>55</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    OCT,</pre></td></tr><tr><td class='line-number'><a name='L56' href='#L56'><pre>56</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    BIN,</pre></td></tr><tr><td class='line-number'><a name='L57' href='#L57'><pre>57</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    FLOAT,</pre></td></tr><tr><td class='line-number'><a name='L58' href='#L58'><pre>58</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    INT,</pre></td></tr><tr><td class='line-number'><a name='L59' href='#L59'><pre>59</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // 識別子</pre></td></tr><tr><td class='line-number'><a name='L60' href='#L60'><pre>60</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    CONID,</pre></td></tr><tr><td class='line-number'><a name='L61' href='#L61'><pre>61</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    VARID,</pre></td></tr><tr><td class='line-number'><a name='L62' href='#L62'><pre>62</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // キーワード</pre></td></tr><tr><td class='line-number'><a name='L63' href='#L63'><pre>63</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    LET,</pre></td></tr><tr><td class='line-number'><a name='L64' href='#L64'><pre>64</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    IN,</pre></td></tr><tr><td class='line-number'><a name='L65' href='#L65'><pre>65</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    IF,</pre></td></tr><tr><td class='line-number'><a name='L66' href='#L66'><pre>66</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    THEN,</pre></td></tr><tr><td class='line-number'><a name='L67' href='#L67'><pre>67</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    ELSE,</pre></td></tr><tr><td class='line-number'><a name='L68' href='#L68'><pre>68</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    TRUE,</pre></td></tr><tr><td class='line-number'><a name='L69' href='#L69'><pre>69</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    FALSE,</pre></td></tr><tr><td class='line-number'><a name='L70' href='#L70'><pre>70</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L71' href='#L71'><pre>71</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L72' href='#L72'><pre>72</pre></a></td><td class='covered-line'><pre>1.48k</pre></td><td class='code'><pre>fn is_whitespace(c: char) -&gt; bool {</pre></td></tr><tr><td class='line-number'><a name='L73' href='#L73'><pre>73</pre></a></td><td class='covered-line'><pre>1.48k</pre></td><td class='code'><pre>    <div class='tooltip'>matches!<span class='tooltip-content'>912</span></div>(c, &apos; &apos; | &apos;\t&apos; | &apos;\r&apos; | &apos;\n&apos;)</pre></td></tr><tr><td class='line-number'><a name='L74' href='#L74'><pre>74</pre></a></td><td class='covered-line'><pre>1.48k</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L75' href='#L75'><pre>75</pre></a></td><td class='covered-line'><pre>780</pre></td><td class='code'><pre>fn is_digit(c: char) -&gt; bool {</pre></td></tr><tr><td class='line-number'><a name='L76' href='#L76'><pre>76</pre></a></td><td class='covered-line'><pre>780</pre></td><td class='code'><pre>    c.is_ascii_digit()</pre></td></tr><tr><td class='line-number'><a name='L77' href='#L77'><pre>77</pre></a></td><td class='covered-line'><pre>780</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L78' href='#L78'><pre>78</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>fn is_hexdigit(c: char) -&gt; bool {</pre></td></tr><tr><td class='line-number'><a name='L79' href='#L79'><pre>79</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>    c.is_ascii_hexdigit()</pre></td></tr><tr><td class='line-number'><a name='L80' href='#L80'><pre>80</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L81' href='#L81'><pre>81</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>fn is_octdigit(c: char) -&gt; bool {</pre></td></tr><tr><td class='line-number'><a name='L82' href='#L82'><pre>82</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>    <div class='tooltip'>matches!<span class='tooltip-content'>2</span></div>(c, &apos;0&apos;..=&apos;7&apos;)</pre></td></tr><tr><td class='line-number'><a name='L83' href='#L83'><pre>83</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L84' href='#L84'><pre>84</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>fn is_bindigit(c: char) -&gt; bool {</pre></td></tr><tr><td class='line-number'><a name='L85' href='#L85'><pre>85</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    <div class='tooltip'>matches!<span class='tooltip-content'>2</span></div>(c, &apos;0&apos; | &apos;1&apos;)</pre></td></tr><tr><td class='line-number'><a name='L86' href='#L86'><pre>86</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L87' href='#L87'><pre>87</pre></a></td><td class='covered-line'><pre>303</pre></td><td class='code'><pre>fn is_letter(c: char) -&gt; bool {</pre></td></tr><tr><td class='line-number'><a name='L88' href='#L88'><pre>88</pre></a></td><td class='covered-line'><pre>303</pre></td><td class='code'><pre>    c.is_ascii_alphabetic() || <div class='tooltip'>c == &apos;_&apos;<span class='tooltip-content'>1</span></div></pre></td></tr><tr><td class='line-number'><a name='L89' href='#L89'><pre>89</pre></a></td><td class='covered-line'><pre>303</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L90' href='#L90'><pre>90</pre></a></td><td class='covered-line'><pre>805</pre></td><td class='code'><pre>fn is_ident_rest(c: char) -&gt; bool {</pre></td></tr><tr><td class='line-number'><a name='L91' href='#L91'><pre>91</pre></a></td><td class='covered-line'><pre>805</pre></td><td class='code'><pre>    c.is_ascii_alphanumeric() || <div class='tooltip'>c == &apos;_&apos;<span class='tooltip-content'>294</span></div> || <div class='tooltip'>c == &apos;\&apos;&apos;<span class='tooltip-content'>292</span></div></pre></td></tr><tr><td class='line-number'><a name='L92' href='#L92'><pre>92</pre></a></td><td class='covered-line'><pre>805</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L93' href='#L93'><pre>93</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L94' href='#L94'><pre>94</pre></a></td><td class='covered-line'><pre>75</pre></td><td class='code'><pre>pub fn lex(src: &amp;str) -&gt; Result&lt;Vec&lt;Token&gt;, LexerError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L95' href='#L95'><pre>95</pre></a></td><td class='covered-line'><pre>75</pre></td><td class='code'><pre>    let mut toks: Vec&lt;Token&gt; = Vec::new();</pre></td></tr><tr><td class='line-number'><a name='L96' href='#L96'><pre>96</pre></a></td><td class='covered-line'><pre>75</pre></td><td class='code'><pre>    let mut i = 0usize;</pre></td></tr><tr><td class='line-number'><a name='L97' href='#L97'><pre>97</pre></a></td><td class='covered-line'><pre>75</pre></td><td class='code'><pre>    let bytes = src.as_bytes();</pre></td></tr><tr><td class='line-number'><a name='L98' href='#L98'><pre>98</pre></a></td><td class='covered-line'><pre>75</pre></td><td class='code'><pre>    let n = bytes.len();</pre></td></tr><tr><td class='line-number'><a name='L99' href='#L99'><pre>99</pre></a></td><td class='covered-line'><pre>9.29k</pre></td><td class='code'><pre>    let <div class='tooltip'>next_char<span class='tooltip-content'>75</span></div> = |i: usize| -&gt; Option&lt;char&gt; { src[i..].chars().next() };</pre></td></tr><tr><td class='line-number'><a name='L100' href='#L100'><pre>100</pre></a></td><td class='covered-line'><pre>1.25k</pre></td><td class='code'><pre>    fn line_col_at(src: &amp;str, pos: usize) -&gt; (usize, usize) {</pre></td></tr><tr><td class='line-number'><a name='L101' href='#L101'><pre>101</pre></a></td><td class='covered-line'><pre>1.25k</pre></td><td class='code'><pre>        let mut line = 1usize;</pre></td></tr><tr><td class='line-number'><a name='L102' href='#L102'><pre>102</pre></a></td><td class='covered-line'><pre>1.25k</pre></td><td class='code'><pre>        let mut col = 1usize;</pre></td></tr><tr><td class='line-number'><a name='L103' href='#L103'><pre>103</pre></a></td><td class='covered-line'><pre>169k</pre></td><td class='code'><pre>        for (bpos, ch) in <div class='tooltip'>src<span class='tooltip-content'>1.25k</span></div>.<div class='tooltip'>char_indices<span class='tooltip-content'>1.25k</span></div>() {</pre></td></tr><tr><td class='line-number'><a name='L104' href='#L104'><pre>104</pre></a></td><td class='covered-line'><pre>169k</pre></td><td class='code'><pre>            if bpos &gt;= pos {</pre></td></tr><tr><td class='line-number'><a name='L105' href='#L105'><pre>105</pre></a></td><td class='covered-line'><pre>1.18k</pre></td><td class='code'><pre>                break;</pre></td></tr><tr><td class='line-number'><a name='L106' href='#L106'><pre>106</pre></a></td><td class='covered-line'><pre>168k</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L107' href='#L107'><pre>107</pre></a></td><td class='covered-line'><pre>168k</pre></td><td class='code'><pre>            if ch == &apos;\n&apos; {</pre></td></tr><tr><td class='line-number'><a name='L108' href='#L108'><pre>108</pre></a></td><td class='covered-line'><pre>7.42k</pre></td><td class='code'><pre>                line += 1;</pre></td></tr><tr><td class='line-number'><a name='L109' href='#L109'><pre>109</pre></a></td><td class='covered-line'><pre>7.42k</pre></td><td class='code'><pre>                col = 1;</pre></td></tr><tr><td class='line-number'><a name='L110' href='#L110'><pre>110</pre></a></td><td class='covered-line'><pre>161k</pre></td><td class='code'><pre>            } else {</pre></td></tr><tr><td class='line-number'><a name='L111' href='#L111'><pre>111</pre></a></td><td class='covered-line'><pre>161k</pre></td><td class='code'><pre>                col += 1;</pre></td></tr><tr><td class='line-number'><a name='L112' href='#L112'><pre>112</pre></a></td><td class='covered-line'><pre>161k</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L113' href='#L113'><pre>113</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L114' href='#L114'><pre>114</pre></a></td><td class='covered-line'><pre>1.25k</pre></td><td class='code'><pre>        (line, col)</pre></td></tr><tr><td class='line-number'><a name='L115' href='#L115'><pre>115</pre></a></td><td class='covered-line'><pre>1.25k</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L116' href='#L116'><pre>116</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>    fn line_text_at(src: &amp;str, line: usize) -&gt; String {</pre></td></tr><tr><td class='line-number'><a name='L117' href='#L117'><pre>117</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>        src.lines()</pre></td></tr><tr><td class='line-number'><a name='L118' href='#L118'><pre>118</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>            .nth(line.saturating_sub(1))</pre></td></tr><tr><td class='line-number'><a name='L119' href='#L119'><pre>119</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>            .unwrap_or(&quot;&quot;)</pre></td></tr><tr><td class='line-number'><a name='L120' href='#L120'><pre>120</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>            .to_string()</pre></td></tr><tr><td class='line-number'><a name='L121' href='#L121'><pre>121</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L122' href='#L122'><pre>122</pre></a></td><td class='covered-line'><pre>1.55k</pre></td><td class='code'><pre>    while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L123' href='#L123'><pre>123</pre></a></td><td class='covered-line'><pre>1.48k</pre></td><td class='code'><pre>        let Some(c) = next_char(i) else { <div class='tooltip'><span class='region red'>break</span><span class='tooltip-content'>0</span></div> };</pre></td></tr><tr><td class='line-number'><a name='L124' href='#L124'><pre>124</pre></a></td><td class='covered-line'><pre>1.48k</pre></td><td class='code'><pre>        let c_next_idx = i + c.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L125' href='#L125'><pre>125</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 空白</pre></td></tr><tr><td class='line-number'><a name='L126' href='#L126'><pre>126</pre></a></td><td class='covered-line'><pre>1.48k</pre></td><td class='code'><pre>        if is_whitespace(c) {</pre></td></tr><tr><td class='line-number'><a name='L127' href='#L127'><pre>127</pre></a></td><td class='covered-line'><pre>573</pre></td><td class='code'><pre>            i += c.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L128' href='#L128'><pre>128</pre></a></td><td class='covered-line'><pre>573</pre></td><td class='code'><pre>            continue;</pre></td></tr><tr><td class='line-number'><a name='L129' href='#L129'><pre>129</pre></a></td><td class='covered-line'><pre>912</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L130' href='#L130'><pre>130</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L131' href='#L131'><pre>131</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // ブロックコメント &quot;{-&quot; ... &quot;-}&quot;（入れ子は非対応）</pre></td></tr><tr><td class='line-number'><a name='L132' href='#L132'><pre>132</pre></a></td><td class='covered-line'><pre>912</pre></td><td class='code'><pre>        if c == &apos;{&apos; {</pre></td></tr><tr><td class='line-number'><a name='L133' href='#L133'><pre>133</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            if let Some(&apos;-&apos;) = next_char(c_next_idx) {</pre></td></tr><tr><td class='line-number'><a name='L134' href='#L134'><pre>134</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // 注意: これは UTF-8 長を厳密に扱わないが、ASCII のみ</pre></td></tr><tr><td class='line-number'><a name='L135' href='#L135'><pre>135</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // 先頭の &quot;{-&quot;</pre></td></tr><tr><td class='line-number'><a name='L136' href='#L136'><pre>136</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                i = c_next_idx + &apos;-&apos;.len_utf8(); // &apos;{&apos; と &apos;-&apos;</pre></td></tr><tr><td class='line-number'><a name='L137' href='#L137'><pre>137</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                                                 // 終了トークン &quot;-}&quot;</pre></td></tr><tr><td class='line-number'><a name='L138' href='#L138'><pre>138</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                let mut closed = false;</pre></td></tr><tr><td class='line-number'><a name='L139' href='#L139'><pre>139</pre></a></td><td class='covered-line'><pre>36</pre></td><td class='code'><pre>                while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L140' href='#L140'><pre>140</pre></a></td><td class='covered-line'><pre>34</pre></td><td class='code'><pre>                    if let Some(&apos;-&apos;) = next_char(i) {</pre></td></tr><tr><td class='line-number'><a name='L141' href='#L141'><pre>141</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        let dash_next = i + &apos;-&apos;.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L142' href='#L142'><pre>142</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        if let Some(&apos;}&apos;) = next_char(dash_next) {</pre></td></tr><tr><td class='line-number'><a name='L143' href='#L143'><pre>143</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            i = dash_next + &apos;}&apos;.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L144' href='#L144'><pre>144</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            closed = true;</pre></td></tr><tr><td class='line-number'><a name='L145' href='#L145'><pre>145</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            break;</pre></td></tr><tr><td class='line-number'><a name='L146' href='#L146'><pre>146</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L147' href='#L147'><pre>147</pre></a></td><td class='covered-line'><pre>33</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L148' href='#L148'><pre>148</pre></a></td><td class='covered-line'><pre>33</pre></td><td class='code'><pre>                    i += next_char(i).map(|ch| ch.len_utf8()).unwrap_or(1);</pre></td></tr><tr><td class='line-number'><a name='L149' href='#L149'><pre>149</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L150' href='#L150'><pre>150</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                if !closed {</pre></td></tr><tr><td class='line-number'><a name='L151' href='#L151'><pre>151</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L152' href='#L152'><pre>152</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    return Err(LexerError::at_with_snippet(</pre></td></tr><tr><td class='line-number'><a name='L153' href='#L153'><pre>153</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        &quot;LEX001&quot;,</pre></td></tr><tr><td class='line-number'><a name='L154' href='#L154'><pre>154</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        &quot;ブロックコメントが閉じていません&quot;,</pre></td></tr><tr><td class='line-number'><a name='L155' href='#L155'><pre>155</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        Some(i),</pre></td></tr><tr><td class='line-number'><a name='L156' href='#L156'><pre>156</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        Some(l),</pre></td></tr><tr><td class='line-number'><a name='L157' href='#L157'><pre>157</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        Some(c),</pre></td></tr><tr><td class='line-number'><a name='L158' href='#L158'><pre>158</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        line_text_at(src, l),</pre></td></tr><tr><td class='line-number'><a name='L159' href='#L159'><pre>159</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    ));</pre></td></tr><tr><td class='line-number'><a name='L160' href='#L160'><pre>160</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L161' href='#L161'><pre>161</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L162' href='#L162'><pre>162</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L163' href='#L163'><pre>163</pre></a></td><td class='covered-line'><pre>909</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L164' href='#L164'><pre>164</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L165' href='#L165'><pre>165</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 行コメント &quot;-- ... \n&quot;</pre></td></tr><tr><td class='line-number'><a name='L166' href='#L166'><pre>166</pre></a></td><td class='covered-line'><pre>909</pre></td><td class='code'><pre>        if c == &apos;-&apos; {</pre></td></tr><tr><td class='line-number'><a name='L167' href='#L167'><pre>167</pre></a></td><td class='covered-line'><pre>52</pre></td><td class='code'><pre>            if let Some(&apos;-&apos;) = next_char(c_next_idx) {</pre></td></tr><tr><td class='line-number'><a name='L168' href='#L168'><pre>168</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // &quot;--&quot;</pre></td></tr><tr><td class='line-number'><a name='L169' href='#L169'><pre>169</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // 改行まで飛ばす</pre></td></tr><tr><td class='line-number'><a name='L170' href='#L170'><pre>170</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                i = c_next_idx + &apos;-&apos;.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L171' href='#L171'><pre>171</pre></a></td><td class='covered-line'><pre>325</pre></td><td class='code'><pre>                while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L172' href='#L172'><pre>172</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L173' href='#L173'><pre>173</pre></a></td><td class='covered-line'><pre>325</pre></td><td class='code'><pre>                    let ch =</pre></td></tr><tr><td class='line-number'><a name='L174' href='#L174'><pre>174</pre></a></td><td class='covered-line'><pre>325</pre></td><td class='code'><pre>                        next_char(i).expect(&quot;内部不変違反: 行コメント走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L175' href='#L175'><pre>175</pre></a></td><td class='covered-line'><pre>325</pre></td><td class='code'><pre>                    i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L176' href='#L176'><pre>176</pre></a></td><td class='covered-line'><pre>325</pre></td><td class='code'><pre>                    if ch == &apos;\n&apos; {</pre></td></tr><tr><td class='line-number'><a name='L177' href='#L177'><pre>177</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                        break;</pre></td></tr><tr><td class='line-number'><a name='L178' href='#L178'><pre>178</pre></a></td><td class='covered-line'><pre>302</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L179' href='#L179'><pre>179</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L180' href='#L180'><pre>180</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L181' href='#L181'><pre>181</pre></a></td><td class='covered-line'><pre>29</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L182' href='#L182'><pre>182</pre></a></td><td class='covered-line'><pre>857</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L183' href='#L183'><pre>183</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L184' href='#L184'><pre>184</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 2文字記号（UTF-8安全）</pre></td></tr><tr><td class='line-number'><a name='L185' href='#L185'><pre>185</pre></a></td><td class='covered-line'><pre>886</pre></td><td class='code'><pre>        if c_next_idx &lt;= n {</pre></td></tr><tr><td class='line-number'><a name='L186' href='#L186'><pre>186</pre></a></td><td class='covered-line'><pre>886</pre></td><td class='code'><pre>            if let Some(<div class='tooltip'>c2<span class='tooltip-content'>834</span></div>) = next_char(c_next_idx) {</pre></td></tr><tr><td class='line-number'><a name='L187' href='#L187'><pre>187</pre></a></td><td class='covered-line'><pre>834</pre></td><td class='code'><pre>                match (c, c2) {</pre></td></tr><tr><td class='line-number'><a name='L188' href='#L188'><pre>188</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    (&apos;-&apos;, &apos;&gt;&apos;) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L189' href='#L189'><pre>189</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L190' href='#L190'><pre>190</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                        toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L191' href='#L191'><pre>191</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                            kind: TokenKind::ARROW,</pre></td></tr><tr><td class='line-number'><a name='L192' href='#L192'><pre>192</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                            value: &quot;-&gt;&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L193' href='#L193'><pre>193</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                            pos: i,</pre></td></tr><tr><td class='line-number'><a name='L194' href='#L194'><pre>194</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                            line: l,</pre></td></tr><tr><td class='line-number'><a name='L195' href='#L195'><pre>195</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                            col: c,</pre></td></tr><tr><td class='line-number'><a name='L196' href='#L196'><pre>196</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                        });</pre></td></tr><tr><td class='line-number'><a name='L197' href='#L197'><pre>197</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                        i = c_next_idx + c2.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L198' href='#L198'><pre>198</pre></a></td><td class='covered-line'><pre>17</pre></td><td class='code'><pre>                        continue;</pre></td></tr><tr><td class='line-number'><a name='L199' href='#L199'><pre>199</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L200' href='#L200'><pre>200</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    (&apos;:&apos;, &apos;:&apos;) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L201' href='#L201'><pre>201</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L202' href='#L202'><pre>202</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                        toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L203' href='#L203'><pre>203</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                            kind: TokenKind::DCOLON,</pre></td></tr><tr><td class='line-number'><a name='L204' href='#L204'><pre>204</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                            value: &quot;::&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L205' href='#L205'><pre>205</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                            pos: i,</pre></td></tr><tr><td class='line-number'><a name='L206' href='#L206'><pre>206</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                            line: l,</pre></td></tr><tr><td class='line-number'><a name='L207' href='#L207'><pre>207</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                            col: c,</pre></td></tr><tr><td class='line-number'><a name='L208' href='#L208'><pre>208</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                        });</pre></td></tr><tr><td class='line-number'><a name='L209' href='#L209'><pre>209</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                        i = c_next_idx + c2.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L210' href='#L210'><pre>210</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                        continue;</pre></td></tr><tr><td class='line-number'><a name='L211' href='#L211'><pre>211</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L212' href='#L212'><pre>212</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    (&apos;=&apos;, &apos;&gt;&apos;) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L213' href='#L213'><pre>213</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L214' href='#L214'><pre>214</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L215' href='#L215'><pre>215</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            kind: TokenKind::DARROW,</pre></td></tr><tr><td class='line-number'><a name='L216' href='#L216'><pre>216</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            value: &quot;=&gt;&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L217' href='#L217'><pre>217</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            pos: i,</pre></td></tr><tr><td class='line-number'><a name='L218' href='#L218'><pre>218</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            line: l,</pre></td></tr><tr><td class='line-number'><a name='L219' href='#L219'><pre>219</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            col: c,</pre></td></tr><tr><td class='line-number'><a name='L220' href='#L220'><pre>220</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        });</pre></td></tr><tr><td class='line-number'><a name='L221' href='#L221'><pre>221</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        i = c_next_idx + c2.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L222' href='#L222'><pre>222</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        continue;</pre></td></tr><tr><td class='line-number'><a name='L223' href='#L223'><pre>223</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L224' href='#L224'><pre>224</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    (&apos;&lt;&apos;, &apos;=&apos;) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L225' href='#L225'><pre>225</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        let (<span class='region red'>l</span>, <span class='region red'>c</span>) = <span class='region red'>line_col_at</span><span class='region red'>(src, i)</span>;</pre></td></tr><tr><td class='line-number'><a name='L226' href='#L226'><pre>226</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>toks</span>.<span class='region red'>push</span>(<span class='region red'>Token {</span></pre></td></tr><tr><td class='line-number'><a name='L227' href='#L227'><pre>227</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            kind: </span><span class='region red'>TokenKind::LE</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L228' href='#L228'><pre>228</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            value: </span><span class='region red'>&quot;&lt;=&quot;</span><span class='region red'>.</span><span class='region red'>into</span><span class='region red'>(),</span></pre></td></tr><tr><td class='line-number'><a name='L229' href='#L229'><pre>229</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            pos: </span><span class='region red'>i</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L230' href='#L230'><pre>230</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            line: l,</span></pre></td></tr><tr><td class='line-number'><a name='L231' href='#L231'><pre>231</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            col: c,</span></pre></td></tr><tr><td class='line-number'><a name='L232' href='#L232'><pre>232</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        }</span>);</pre></td></tr><tr><td class='line-number'><a name='L233' href='#L233'><pre>233</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>i = </span><span class='region red'>c_next_idx</span><span class='region red'> + c2.len_utf8()</span>;</pre></td></tr><tr><td class='line-number'><a name='L234' href='#L234'><pre>234</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>continue</span>;</pre></td></tr><tr><td class='line-number'><a name='L235' href='#L235'><pre>235</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L236' href='#L236'><pre>236</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    (&apos;&gt;&apos;, &apos;=&apos;) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L237' href='#L237'><pre>237</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L238' href='#L238'><pre>238</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L239' href='#L239'><pre>239</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            kind: TokenKind::GE,</pre></td></tr><tr><td class='line-number'><a name='L240' href='#L240'><pre>240</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            value: &quot;&gt;=&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L241' href='#L241'><pre>241</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            pos: i,</pre></td></tr><tr><td class='line-number'><a name='L242' href='#L242'><pre>242</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            line: l,</pre></td></tr><tr><td class='line-number'><a name='L243' href='#L243'><pre>243</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            col: c,</pre></td></tr><tr><td class='line-number'><a name='L244' href='#L244'><pre>244</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        });</pre></td></tr><tr><td class='line-number'><a name='L245' href='#L245'><pre>245</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        i = c_next_idx + c2.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L246' href='#L246'><pre>246</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        continue;</pre></td></tr><tr><td class='line-number'><a name='L247' href='#L247'><pre>247</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L248' href='#L248'><pre>248</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    (&apos;=&apos;, &apos;=&apos;) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L249' href='#L249'><pre>249</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L250' href='#L250'><pre>250</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                        toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L251' href='#L251'><pre>251</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                            kind: TokenKind::EQ,</pre></td></tr><tr><td class='line-number'><a name='L252' href='#L252'><pre>252</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                            value: &quot;==&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L253' href='#L253'><pre>253</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                            pos: i,</pre></td></tr><tr><td class='line-number'><a name='L254' href='#L254'><pre>254</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                            line: l,</pre></td></tr><tr><td class='line-number'><a name='L255' href='#L255'><pre>255</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                            col: c,</pre></td></tr><tr><td class='line-number'><a name='L256' href='#L256'><pre>256</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                        });</pre></td></tr><tr><td class='line-number'><a name='L257' href='#L257'><pre>257</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                        i = c_next_idx + c2.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L258' href='#L258'><pre>258</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                        continue;</pre></td></tr><tr><td class='line-number'><a name='L259' href='#L259'><pre>259</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L260' href='#L260'><pre>260</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    (&apos;/&apos;, &apos;=&apos;) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L261' href='#L261'><pre>261</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        let (<span class='region red'>l</span>, <span class='region red'>c</span>) = <span class='region red'>line_col_at</span><span class='region red'>(src, i)</span>;</pre></td></tr><tr><td class='line-number'><a name='L262' href='#L262'><pre>262</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>toks</span>.<span class='region red'>push</span>(<span class='region red'>Token {</span></pre></td></tr><tr><td class='line-number'><a name='L263' href='#L263'><pre>263</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            kind: </span><span class='region red'>TokenKind::NE</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L264' href='#L264'><pre>264</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            value: </span><span class='region red'>&quot;/=&quot;</span><span class='region red'>.</span><span class='region red'>into</span><span class='region red'>(),</span></pre></td></tr><tr><td class='line-number'><a name='L265' href='#L265'><pre>265</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            pos: </span><span class='region red'>i</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L266' href='#L266'><pre>266</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            line: l,</span></pre></td></tr><tr><td class='line-number'><a name='L267' href='#L267'><pre>267</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            col: c,</span></pre></td></tr><tr><td class='line-number'><a name='L268' href='#L268'><pre>268</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        }</span>);</pre></td></tr><tr><td class='line-number'><a name='L269' href='#L269'><pre>269</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>i = </span><span class='region red'>c_next_idx</span><span class='region red'> + c2.len_utf8()</span>;</pre></td></tr><tr><td class='line-number'><a name='L270' href='#L270'><pre>270</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>continue</span>;</pre></td></tr><tr><td class='line-number'><a name='L271' href='#L271'><pre>271</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L272' href='#L272'><pre>272</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    (&apos;*&apos;, &apos;*&apos;) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L273' href='#L273'><pre>273</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L274' href='#L274'><pre>274</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                        toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L275' href='#L275'><pre>275</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                            kind: TokenKind::DBLSTAR,</pre></td></tr><tr><td class='line-number'><a name='L276' href='#L276'><pre>276</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                            value: &quot;**&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L277' href='#L277'><pre>277</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                            pos: i,</pre></td></tr><tr><td class='line-number'><a name='L278' href='#L278'><pre>278</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                            line: l,</pre></td></tr><tr><td class='line-number'><a name='L279' href='#L279'><pre>279</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                            col: c,</pre></td></tr><tr><td class='line-number'><a name='L280' href='#L280'><pre>280</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                        });</pre></td></tr><tr><td class='line-number'><a name='L281' href='#L281'><pre>281</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                        i = c_next_idx + c2.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L282' href='#L282'><pre>282</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                        continue;</pre></td></tr><tr><td class='line-number'><a name='L283' href='#L283'><pre>283</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L284' href='#L284'><pre>284</pre></a></td><td class='covered-line'><pre>790</pre></td><td class='code'><pre>                    _ =&gt; {}</pre></td></tr><tr><td class='line-number'><a name='L285' href='#L285'><pre>285</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L286' href='#L286'><pre>286</pre></a></td><td class='covered-line'><pre>52</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L287' href='#L287'><pre>287</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L288' href='#L288'><pre>288</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L289' href='#L289'><pre>289</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 1 文字記号</pre></td></tr><tr><td class='line-number'><a name='L290' href='#L290'><pre>290</pre></a></td><td class='covered-line'><pre>842</pre></td><td class='code'><pre>        match c {</pre></td></tr><tr><td class='line-number'><a name='L291' href='#L291'><pre>291</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;\\&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L292' href='#L292'><pre>292</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L293' href='#L293'><pre>293</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L294' href='#L294'><pre>294</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    kind: TokenKind::LAMBDA,</pre></td></tr><tr><td class='line-number'><a name='L295' href='#L295'><pre>295</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    value: &quot;\\&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L296' href='#L296'><pre>296</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L297' href='#L297'><pre>297</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L298' href='#L298'><pre>298</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L299' href='#L299'><pre>299</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L300' href='#L300'><pre>300</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L301' href='#L301'><pre>301</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L302' href='#L302'><pre>302</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L303' href='#L303'><pre>303</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;&lt;&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L304' href='#L304'><pre>304</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L305' href='#L305'><pre>305</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L306' href='#L306'><pre>306</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    kind: TokenKind::LT,</pre></td></tr><tr><td class='line-number'><a name='L307' href='#L307'><pre>307</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    value: &quot;&lt;&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L308' href='#L308'><pre>308</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L309' href='#L309'><pre>309</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L310' href='#L310'><pre>310</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L311' href='#L311'><pre>311</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L312' href='#L312'><pre>312</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L313' href='#L313'><pre>313</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L314' href='#L314'><pre>314</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L315' href='#L315'><pre>315</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;&gt;&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L316' href='#L316'><pre>316</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let (<span class='region red'>l</span>, <span class='region red'>c</span>) = <span class='region red'>line_col_at</span><span class='region red'>(src, i)</span>;</pre></td></tr><tr><td class='line-number'><a name='L317' href='#L317'><pre>317</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>toks</span>.<span class='region red'>push</span>(<span class='region red'>Token {</span></pre></td></tr><tr><td class='line-number'><a name='L318' href='#L318'><pre>318</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    kind: </span><span class='region red'>TokenKind::GT</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L319' href='#L319'><pre>319</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    value: </span><span class='region red'>&quot;&gt;&quot;</span><span class='region red'>.</span><span class='region red'>into</span><span class='region red'>(),</span></pre></td></tr><tr><td class='line-number'><a name='L320' href='#L320'><pre>320</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    pos: </span><span class='region red'>i</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L321' href='#L321'><pre>321</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    line: l,</span></pre></td></tr><tr><td class='line-number'><a name='L322' href='#L322'><pre>322</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    col: c,</span></pre></td></tr><tr><td class='line-number'><a name='L323' href='#L323'><pre>323</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                }</span>);</pre></td></tr><tr><td class='line-number'><a name='L324' href='#L324'><pre>324</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>i += 1</span>;</pre></td></tr><tr><td class='line-number'><a name='L325' href='#L325'><pre>325</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>continue</span>;</pre></td></tr><tr><td class='line-number'><a name='L326' href='#L326'><pre>326</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L327' href='#L327'><pre>327</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;+&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L328' href='#L328'><pre>328</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L329' href='#L329'><pre>329</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L330' href='#L330'><pre>330</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    kind: TokenKind::PLUS,</pre></td></tr><tr><td class='line-number'><a name='L331' href='#L331'><pre>331</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    value: &quot;+&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L332' href='#L332'><pre>332</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L333' href='#L333'><pre>333</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L334' href='#L334'><pre>334</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L335' href='#L335'><pre>335</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L336' href='#L336'><pre>336</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L337' href='#L337'><pre>337</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L338' href='#L338'><pre>338</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L339' href='#L339'><pre>339</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;-&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L340' href='#L340'><pre>340</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L341' href='#L341'><pre>341</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L342' href='#L342'><pre>342</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                    kind: TokenKind::MINUS,</pre></td></tr><tr><td class='line-number'><a name='L343' href='#L343'><pre>343</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                    value: &quot;-&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L344' href='#L344'><pre>344</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L345' href='#L345'><pre>345</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L346' href='#L346'><pre>346</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L347' href='#L347'><pre>347</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L348' href='#L348'><pre>348</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L349' href='#L349'><pre>349</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L350' href='#L350'><pre>350</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L351' href='#L351'><pre>351</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;*&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L352' href='#L352'><pre>352</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L353' href='#L353'><pre>353</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L354' href='#L354'><pre>354</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    kind: TokenKind::STAR,</pre></td></tr><tr><td class='line-number'><a name='L355' href='#L355'><pre>355</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    value: &quot;*&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L356' href='#L356'><pre>356</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L357' href='#L357'><pre>357</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L358' href='#L358'><pre>358</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L359' href='#L359'><pre>359</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L360' href='#L360'><pre>360</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L361' href='#L361'><pre>361</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L362' href='#L362'><pre>362</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L363' href='#L363'><pre>363</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;/&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L364' href='#L364'><pre>364</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L365' href='#L365'><pre>365</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L366' href='#L366'><pre>366</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    kind: TokenKind::SLASH,</pre></td></tr><tr><td class='line-number'><a name='L367' href='#L367'><pre>367</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    value: &quot;/&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L368' href='#L368'><pre>368</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L369' href='#L369'><pre>369</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L370' href='#L370'><pre>370</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L371' href='#L371'><pre>371</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L372' href='#L372'><pre>372</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L373' href='#L373'><pre>373</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L374' href='#L374'><pre>374</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L375' href='#L375'><pre>375</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;^&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L376' href='#L376'><pre>376</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L377' href='#L377'><pre>377</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L378' href='#L378'><pre>378</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                    kind: TokenKind::CARET,</pre></td></tr><tr><td class='line-number'><a name='L379' href='#L379'><pre>379</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                    value: &quot;^&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L380' href='#L380'><pre>380</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L381' href='#L381'><pre>381</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L382' href='#L382'><pre>382</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L383' href='#L383'><pre>383</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L384' href='#L384'><pre>384</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L385' href='#L385'><pre>385</pre></a></td><td class='covered-line'><pre>16</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L386' href='#L386'><pre>386</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L387' href='#L387'><pre>387</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;(&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L388' href='#L388'><pre>388</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L389' href='#L389'><pre>389</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L390' href='#L390'><pre>390</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                    kind: TokenKind::LPAREN,</pre></td></tr><tr><td class='line-number'><a name='L391' href='#L391'><pre>391</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                    value: &quot;(&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L392' href='#L392'><pre>392</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L393' href='#L393'><pre>393</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L394' href='#L394'><pre>394</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L395' href='#L395'><pre>395</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L396' href='#L396'><pre>396</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L397' href='#L397'><pre>397</pre></a></td><td class='covered-line'><pre>84</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L398' href='#L398'><pre>398</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L399' href='#L399'><pre>399</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;)&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L400' href='#L400'><pre>400</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L401' href='#L401'><pre>401</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L402' href='#L402'><pre>402</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                    kind: TokenKind::RPAREN,</pre></td></tr><tr><td class='line-number'><a name='L403' href='#L403'><pre>403</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                    value: &quot;)&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L404' href='#L404'><pre>404</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L405' href='#L405'><pre>405</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L406' href='#L406'><pre>406</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L407' href='#L407'><pre>407</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L408' href='#L408'><pre>408</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L409' href='#L409'><pre>409</pre></a></td><td class='covered-line'><pre>83</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L410' href='#L410'><pre>410</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L411' href='#L411'><pre>411</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;[&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L412' href='#L412'><pre>412</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L413' href='#L413'><pre>413</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L414' href='#L414'><pre>414</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                    kind: TokenKind::LBRACK,</pre></td></tr><tr><td class='line-number'><a name='L415' href='#L415'><pre>415</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                    value: &quot;[&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L416' href='#L416'><pre>416</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L417' href='#L417'><pre>417</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L418' href='#L418'><pre>418</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L419' href='#L419'><pre>419</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L420' href='#L420'><pre>420</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L421' href='#L421'><pre>421</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L422' href='#L422'><pre>422</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L423' href='#L423'><pre>423</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;]&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L424' href='#L424'><pre>424</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L425' href='#L425'><pre>425</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L426' href='#L426'><pre>426</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                    kind: TokenKind::RBRACK,</pre></td></tr><tr><td class='line-number'><a name='L427' href='#L427'><pre>427</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                    value: &quot;]&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L428' href='#L428'><pre>428</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L429' href='#L429'><pre>429</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L430' href='#L430'><pre>430</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L431' href='#L431'><pre>431</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L432' href='#L432'><pre>432</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L433' href='#L433'><pre>433</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L434' href='#L434'><pre>434</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L435' href='#L435'><pre>435</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;,&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L436' href='#L436'><pre>436</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L437' href='#L437'><pre>437</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L438' href='#L438'><pre>438</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                    kind: TokenKind::COMMA,</pre></td></tr><tr><td class='line-number'><a name='L439' href='#L439'><pre>439</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                    value: &quot;,&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L440' href='#L440'><pre>440</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L441' href='#L441'><pre>441</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L442' href='#L442'><pre>442</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L443' href='#L443'><pre>443</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L444' href='#L444'><pre>444</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L445' href='#L445'><pre>445</pre></a></td><td class='covered-line'><pre>23</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L446' href='#L446'><pre>446</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L447' href='#L447'><pre>447</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;;&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L448' href='#L448'><pre>448</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L449' href='#L449'><pre>449</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L450' href='#L450'><pre>450</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                    kind: TokenKind::SEMI,</pre></td></tr><tr><td class='line-number'><a name='L451' href='#L451'><pre>451</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                    value: &quot;;&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L452' href='#L452'><pre>452</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L453' href='#L453'><pre>453</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L454' href='#L454'><pre>454</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L455' href='#L455'><pre>455</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L456' href='#L456'><pre>456</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L457' href='#L457'><pre>457</pre></a></td><td class='covered-line'><pre>61</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L458' href='#L458'><pre>458</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L459' href='#L459'><pre>459</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;=&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L460' href='#L460'><pre>460</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L461' href='#L461'><pre>461</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L462' href='#L462'><pre>462</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                    kind: TokenKind::EQUAL,</pre></td></tr><tr><td class='line-number'><a name='L463' href='#L463'><pre>463</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                    value: &quot;=&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L464' href='#L464'><pre>464</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L465' href='#L465'><pre>465</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L466' href='#L466'><pre>466</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L467' href='#L467'><pre>467</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L468' href='#L468'><pre>468</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L469' href='#L469'><pre>469</pre></a></td><td class='covered-line'><pre>64</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L470' href='#L470'><pre>470</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L471' href='#L471'><pre>471</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;?&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L472' href='#L472'><pre>472</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L473' href='#L473'><pre>473</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L474' href='#L474'><pre>474</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    kind: TokenKind::QMARK,</pre></td></tr><tr><td class='line-number'><a name='L475' href='#L475'><pre>475</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    value: &quot;?&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L476' href='#L476'><pre>476</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    pos: i,</pre></td></tr><tr><td class='line-number'><a name='L477' href='#L477'><pre>477</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L478' href='#L478'><pre>478</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L479' href='#L479'><pre>479</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L480' href='#L480'><pre>480</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L481' href='#L481'><pre>481</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L482' href='#L482'><pre>482</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L483' href='#L483'><pre>483</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;_&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L484' href='#L484'><pre>484</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let (<span class='region red'>l</span>, <span class='region red'>c</span>) = <span class='region red'>line_col_at</span><span class='region red'>(src, i)</span>;</pre></td></tr><tr><td class='line-number'><a name='L485' href='#L485'><pre>485</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>toks</span>.<span class='region red'>push</span>(<span class='region red'>Token {</span></pre></td></tr><tr><td class='line-number'><a name='L486' href='#L486'><pre>486</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    kind: </span><span class='region red'>TokenKind::UNDERSCORE</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L487' href='#L487'><pre>487</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    value: </span><span class='region red'>&quot;_&quot;</span><span class='region red'>.</span><span class='region red'>into</span><span class='region red'>(),</span></pre></td></tr><tr><td class='line-number'><a name='L488' href='#L488'><pre>488</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    pos: </span><span class='region red'>i</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L489' href='#L489'><pre>489</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    line: l,</span></pre></td></tr><tr><td class='line-number'><a name='L490' href='#L490'><pre>490</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    col: c,</span></pre></td></tr><tr><td class='line-number'><a name='L491' href='#L491'><pre>491</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                }</span>);</pre></td></tr><tr><td class='line-number'><a name='L492' href='#L492'><pre>492</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>i += 1</span>;</pre></td></tr><tr><td class='line-number'><a name='L493' href='#L493'><pre>493</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>continue</span>;</pre></td></tr><tr><td class='line-number'><a name='L494' href='#L494'><pre>494</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L495' href='#L495'><pre>495</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;\&apos;&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L496' href='#L496'><pre>496</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // 文字リテラル（単一文字 or エスケープ）</pre></td></tr><tr><td class='line-number'><a name='L497' href='#L497'><pre>497</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                let start = i;</pre></td></tr><tr><td class='line-number'><a name='L498' href='#L498'><pre>498</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                i += 1; // opening &apos;</pre></td></tr><tr><td class='line-number'><a name='L499' href='#L499'><pre>499</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                let mut escaped = false;</pre></td></tr><tr><td class='line-number'><a name='L500' href='#L500'><pre>500</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                let mut ok = false;</pre></td></tr><tr><td class='line-number'><a name='L501' href='#L501'><pre>501</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L502' href='#L502'><pre>502</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L503' href='#L503'><pre>503</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    let ch =</pre></td></tr><tr><td class='line-number'><a name='L504' href='#L504'><pre>504</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                        next_char(i).expect(&quot;内部不変違反: 文字リテラル走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L505' href='#L505'><pre>505</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L506' href='#L506'><pre>506</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    if !escaped {</pre></td></tr><tr><td class='line-number'><a name='L507' href='#L507'><pre>507</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>                        if ch == &apos;\\&apos; {</pre></td></tr><tr><td class='line-number'><a name='L508' href='#L508'><pre>508</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            escaped = true;</pre></td></tr><tr><td class='line-number'><a name='L509' href='#L509'><pre>509</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            continue;</pre></td></tr><tr><td class='line-number'><a name='L510' href='#L510'><pre>510</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L511' href='#L511'><pre>511</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                        if ch == &apos;\&apos;&apos; {</pre></td></tr><tr><td class='line-number'><a name='L512' href='#L512'><pre>512</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                            ok = true;</pre></td></tr><tr><td class='line-number'><a name='L513' href='#L513'><pre>513</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                            break;</pre></td></tr><tr><td class='line-number'><a name='L514' href='#L514'><pre>514</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L515' href='#L515'><pre>515</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        if ch == &apos;\n&apos; {</pre></td></tr><tr><td class='line-number'><a name='L516' href='#L516'><pre>516</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            <span class='region red'>break</span>;</pre></td></tr><tr><td class='line-number'><a name='L517' href='#L517'><pre>517</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L518' href='#L518'><pre>518</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    } else {</pre></td></tr><tr><td class='line-number'><a name='L519' href='#L519'><pre>519</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        // 1 文字エスケープを許容</pre></td></tr><tr><td class='line-number'><a name='L520' href='#L520'><pre>520</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        escaped = false;</pre></td></tr><tr><td class='line-number'><a name='L521' href='#L521'><pre>521</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L522' href='#L522'><pre>522</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L523' href='#L523'><pre>523</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                if !ok {</pre></td></tr><tr><td class='line-number'><a name='L524' href='#L524'><pre>524</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    let (<span class='region red'>l</span>, <span class='region red'>c</span>) = <span class='region red'>line_col_at</span><span class='region red'>(src, start)</span>;</pre></td></tr><tr><td class='line-number'><a name='L525' href='#L525'><pre>525</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    return <span class='region red'>Err(</span><span class='region red'>LexerError::at_with_snippet</span><span class='region red'>(</span></pre></td></tr><tr><td class='line-number'><a name='L526' href='#L526'><pre>526</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        &quot;LEX002&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L527' href='#L527'><pre>527</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        &quot;文字リテラルが閉じていません&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L528' href='#L528'><pre>528</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        </span><span class='region red'>Some(start)</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L529' href='#L529'><pre>529</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        </span><span class='region red'>Some(l)</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L530' href='#L530'><pre>530</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        </span><span class='region red'>Some(c)</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L531' href='#L531'><pre>531</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        </span><span class='region red'>line_text_at</span><span class='region red'>(src, l),</span></pre></td></tr><tr><td class='line-number'><a name='L532' href='#L532'><pre>532</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    ))</span>;</pre></td></tr><tr><td class='line-number'><a name='L533' href='#L533'><pre>533</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L534' href='#L534'><pre>534</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                let s = &amp;src[start..i];</pre></td></tr><tr><td class='line-number'><a name='L535' href='#L535'><pre>535</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L536' href='#L536'><pre>536</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L537' href='#L537'><pre>537</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    kind: TokenKind::CHAR,</pre></td></tr><tr><td class='line-number'><a name='L538' href='#L538'><pre>538</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L539' href='#L539'><pre>539</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L540' href='#L540'><pre>540</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L541' href='#L541'><pre>541</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L542' href='#L542'><pre>542</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L543' href='#L543'><pre>543</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L544' href='#L544'><pre>544</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L545' href='#L545'><pre>545</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &apos;&quot;&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L546' href='#L546'><pre>546</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // 文字列リテラル</pre></td></tr><tr><td class='line-number'><a name='L547' href='#L547'><pre>547</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                let start = i;</pre></td></tr><tr><td class='line-number'><a name='L548' href='#L548'><pre>548</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                i += 1;</pre></td></tr><tr><td class='line-number'><a name='L549' href='#L549'><pre>549</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                let mut escaped = false;</pre></td></tr><tr><td class='line-number'><a name='L550' href='#L550'><pre>550</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                let mut ok = false;</pre></td></tr><tr><td class='line-number'><a name='L551' href='#L551'><pre>551</pre></a></td><td class='covered-line'><pre>5.05k</pre></td><td class='code'><pre>                while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L552' href='#L552'><pre>552</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L553' href='#L553'><pre>553</pre></a></td><td class='covered-line'><pre>5.05k</pre></td><td class='code'><pre>                    let ch = next_char(i)</pre></td></tr><tr><td class='line-number'><a name='L554' href='#L554'><pre>554</pre></a></td><td class='covered-line'><pre>5.05k</pre></td><td class='code'><pre>                        .expect(&quot;内部不変違反: 文字列リテラル走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L555' href='#L555'><pre>555</pre></a></td><td class='covered-line'><pre>5.05k</pre></td><td class='code'><pre>                    i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L556' href='#L556'><pre>556</pre></a></td><td class='covered-line'><pre>5.05k</pre></td><td class='code'><pre>                    if !escaped {</pre></td></tr><tr><td class='line-number'><a name='L557' href='#L557'><pre>557</pre></a></td><td class='covered-line'><pre>5.04k</pre></td><td class='code'><pre>                        if ch == &apos;\\&apos; {</pre></td></tr><tr><td class='line-number'><a name='L558' href='#L558'><pre>558</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            escaped = true;</pre></td></tr><tr><td class='line-number'><a name='L559' href='#L559'><pre>559</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            continue;</pre></td></tr><tr><td class='line-number'><a name='L560' href='#L560'><pre>560</pre></a></td><td class='covered-line'><pre>5.04k</pre></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L561' href='#L561'><pre>561</pre></a></td><td class='covered-line'><pre>5.04k</pre></td><td class='code'><pre>                        if ch == &apos;&quot;&apos; {</pre></td></tr><tr><td class='line-number'><a name='L562' href='#L562'><pre>562</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                            ok = true;</pre></td></tr><tr><td class='line-number'><a name='L563' href='#L563'><pre>563</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                            break;</pre></td></tr><tr><td class='line-number'><a name='L564' href='#L564'><pre>564</pre></a></td><td class='covered-line'><pre>5.03k</pre></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L565' href='#L565'><pre>565</pre></a></td><td class='covered-line'><pre>5.03k</pre></td><td class='code'><pre>                        if ch == &apos;\n&apos; {</pre></td></tr><tr><td class='line-number'><a name='L566' href='#L566'><pre>566</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            <span class='region red'>break</span>;</pre></td></tr><tr><td class='line-number'><a name='L567' href='#L567'><pre>567</pre></a></td><td class='covered-line'><pre>5.03k</pre></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L568' href='#L568'><pre>568</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    } else {</pre></td></tr><tr><td class='line-number'><a name='L569' href='#L569'><pre>569</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        escaped = false;</pre></td></tr><tr><td class='line-number'><a name='L570' href='#L570'><pre>570</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L571' href='#L571'><pre>571</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L572' href='#L572'><pre>572</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                if !ok {</pre></td></tr><tr><td class='line-number'><a name='L573' href='#L573'><pre>573</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L574' href='#L574'><pre>574</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    return Err(LexerError::at_with_snippet(</pre></td></tr><tr><td class='line-number'><a name='L575' href='#L575'><pre>575</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        &quot;LEX003&quot;,</pre></td></tr><tr><td class='line-number'><a name='L576' href='#L576'><pre>576</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        &quot;文字列リテラルが閉じていません&quot;,</pre></td></tr><tr><td class='line-number'><a name='L577' href='#L577'><pre>577</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        Some(start),</pre></td></tr><tr><td class='line-number'><a name='L578' href='#L578'><pre>578</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        Some(l),</pre></td></tr><tr><td class='line-number'><a name='L579' href='#L579'><pre>579</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        Some(c),</pre></td></tr><tr><td class='line-number'><a name='L580' href='#L580'><pre>580</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        line_text_at(src, l),</pre></td></tr><tr><td class='line-number'><a name='L581' href='#L581'><pre>581</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    ));</pre></td></tr><tr><td class='line-number'><a name='L582' href='#L582'><pre>582</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L583' href='#L583'><pre>583</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                let s = &amp;src[start..i];</pre></td></tr><tr><td class='line-number'><a name='L584' href='#L584'><pre>584</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L585' href='#L585'><pre>585</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L586' href='#L586'><pre>586</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    kind: TokenKind::STRING,</pre></td></tr><tr><td class='line-number'><a name='L587' href='#L587'><pre>587</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L588' href='#L588'><pre>588</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L589' href='#L589'><pre>589</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    line: l,</pre></td></tr><tr><td class='line-number'><a name='L590' href='#L590'><pre>590</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    col: c,</pre></td></tr><tr><td class='line-number'><a name='L591' href='#L591'><pre>591</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                });</pre></td></tr><tr><td class='line-number'><a name='L592' href='#L592'><pre>592</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L593' href='#L593'><pre>593</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L594' href='#L594'><pre>594</pre></a></td><td class='covered-line'><pre>434</pre></td><td class='code'><pre>            _ =&gt; {}</pre></td></tr><tr><td class='line-number'><a name='L595' href='#L595'><pre>595</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L596' href='#L596'><pre>596</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L597' href='#L597'><pre>597</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 数値: 0x, 0o, 0b, 浮動小数, 整数</pre></td></tr><tr><td class='line-number'><a name='L598' href='#L598'><pre>598</pre></a></td><td class='covered-line'><pre>434</pre></td><td class='code'><pre>        if is_digit(c) {</pre></td></tr><tr><td class='line-number'><a name='L599' href='#L599'><pre>599</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            // 進数接頭辞</pre></td></tr><tr><td class='line-number'><a name='L600' href='#L600'><pre>600</pre></a></td><td class='covered-line'><pre>131</pre></td><td class='code'><pre>            if c == &apos;0&apos; {</pre></td></tr><tr><td class='line-number'><a name='L601' href='#L601'><pre>601</pre></a></td><td class='covered-line'><pre>14</pre></td><td class='code'><pre>                if let Some(&apos;x&apos;) | Some(&apos;X&apos;) = next_char(c_next_idx) {</pre></td></tr><tr><td class='line-number'><a name='L602' href='#L602'><pre>602</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    let start = i;</pre></td></tr><tr><td class='line-number'><a name='L603' href='#L603'><pre>603</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    i = c_next_idx + &apos;x&apos;.len_utf8(); // 0x</pre></td></tr><tr><td class='line-number'><a name='L604' href='#L604'><pre>604</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    let mut cnt = 0;</pre></td></tr><tr><td class='line-number'><a name='L605' href='#L605'><pre>605</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L606' href='#L606'><pre>606</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L607' href='#L607'><pre>607</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                        let ch = next_char(i)</pre></td></tr><tr><td class='line-number'><a name='L608' href='#L608'><pre>608</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                            .expect(&quot;内部不変違反: 16進リテラル走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L609' href='#L609'><pre>609</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                        if is_hexdigit(ch) {</pre></td></tr><tr><td class='line-number'><a name='L610' href='#L610'><pre>610</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L611' href='#L611'><pre>611</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            cnt += 1;</pre></td></tr><tr><td class='line-number'><a name='L612' href='#L612'><pre>612</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        } else {</pre></td></tr><tr><td class='line-number'><a name='L613' href='#L613'><pre>613</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                            break;</pre></td></tr><tr><td class='line-number'><a name='L614' href='#L614'><pre>614</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L615' href='#L615'><pre>615</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L616' href='#L616'><pre>616</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    if cnt == 0 {</pre></td></tr><tr><td class='line-number'><a name='L617' href='#L617'><pre>617</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L618' href='#L618'><pre>618</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        return Err(LexerError::at_with_snippet(</pre></td></tr><tr><td class='line-number'><a name='L619' href='#L619'><pre>619</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            &quot;LEX010&quot;,</pre></td></tr><tr><td class='line-number'><a name='L620' href='#L620'><pre>620</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            &quot;16進数の桁がありません&quot;,</pre></td></tr><tr><td class='line-number'><a name='L621' href='#L621'><pre>621</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(start),</pre></td></tr><tr><td class='line-number'><a name='L622' href='#L622'><pre>622</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(l),</pre></td></tr><tr><td class='line-number'><a name='L623' href='#L623'><pre>623</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(c),</pre></td></tr><tr><td class='line-number'><a name='L624' href='#L624'><pre>624</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            line_text_at(src, l),</pre></td></tr><tr><td class='line-number'><a name='L625' href='#L625'><pre>625</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        ));</pre></td></tr><tr><td class='line-number'><a name='L626' href='#L626'><pre>626</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L627' href='#L627'><pre>627</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L628' href='#L628'><pre>628</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L629' href='#L629'><pre>629</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        kind: TokenKind::HEX,</pre></td></tr><tr><td class='line-number'><a name='L630' href='#L630'><pre>630</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        value: src[start..i].into(),</pre></td></tr><tr><td class='line-number'><a name='L631' href='#L631'><pre>631</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        pos: start,</pre></td></tr><tr><td class='line-number'><a name='L632' href='#L632'><pre>632</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        line: l,</pre></td></tr><tr><td class='line-number'><a name='L633' href='#L633'><pre>633</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        col: c,</pre></td></tr><tr><td class='line-number'><a name='L634' href='#L634'><pre>634</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    });</pre></td></tr><tr><td class='line-number'><a name='L635' href='#L635'><pre>635</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    continue;</pre></td></tr><tr><td class='line-number'><a name='L636' href='#L636'><pre>636</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L637' href='#L637'><pre>637</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                if let Some(&apos;o&apos;) | Some(&apos;O&apos;) = next_char(c_next_idx) {</pre></td></tr><tr><td class='line-number'><a name='L638' href='#L638'><pre>638</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let start = i;</pre></td></tr><tr><td class='line-number'><a name='L639' href='#L639'><pre>639</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    i = c_next_idx + &apos;o&apos;.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L640' href='#L640'><pre>640</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let mut cnt = 0;</pre></td></tr><tr><td class='line-number'><a name='L641' href='#L641'><pre>641</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L642' href='#L642'><pre>642</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L643' href='#L643'><pre>643</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        let ch = next_char(i)</pre></td></tr><tr><td class='line-number'><a name='L644' href='#L644'><pre>644</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            .expect(&quot;内部不変違反: 8進リテラル走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L645' href='#L645'><pre>645</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        if is_octdigit(ch) {</pre></td></tr><tr><td class='line-number'><a name='L646' href='#L646'><pre>646</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                            i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L647' href='#L647'><pre>647</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                            cnt += 1;</pre></td></tr><tr><td class='line-number'><a name='L648' href='#L648'><pre>648</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        } else {</pre></td></tr><tr><td class='line-number'><a name='L649' href='#L649'><pre>649</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                            break;</pre></td></tr><tr><td class='line-number'><a name='L650' href='#L650'><pre>650</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L651' href='#L651'><pre>651</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L652' href='#L652'><pre>652</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    if cnt == 0 {</pre></td></tr><tr><td class='line-number'><a name='L653' href='#L653'><pre>653</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L654' href='#L654'><pre>654</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        return Err(LexerError::at_with_snippet(</pre></td></tr><tr><td class='line-number'><a name='L655' href='#L655'><pre>655</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            &quot;LEX011&quot;,</pre></td></tr><tr><td class='line-number'><a name='L656' href='#L656'><pre>656</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            &quot;8進数の桁がありません&quot;,</pre></td></tr><tr><td class='line-number'><a name='L657' href='#L657'><pre>657</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(start),</pre></td></tr><tr><td class='line-number'><a name='L658' href='#L658'><pre>658</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(l),</pre></td></tr><tr><td class='line-number'><a name='L659' href='#L659'><pre>659</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(c),</pre></td></tr><tr><td class='line-number'><a name='L660' href='#L660'><pre>660</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            line_text_at(src, l),</pre></td></tr><tr><td class='line-number'><a name='L661' href='#L661'><pre>661</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        ));</pre></td></tr><tr><td class='line-number'><a name='L662' href='#L662'><pre>662</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L663' href='#L663'><pre>663</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L664' href='#L664'><pre>664</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L665' href='#L665'><pre>665</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        kind: TokenKind::OCT,</pre></td></tr><tr><td class='line-number'><a name='L666' href='#L666'><pre>666</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        value: src[start..i].into(),</pre></td></tr><tr><td class='line-number'><a name='L667' href='#L667'><pre>667</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        pos: start,</pre></td></tr><tr><td class='line-number'><a name='L668' href='#L668'><pre>668</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        line: l,</pre></td></tr><tr><td class='line-number'><a name='L669' href='#L669'><pre>669</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        col: c,</pre></td></tr><tr><td class='line-number'><a name='L670' href='#L670'><pre>670</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    });</pre></td></tr><tr><td class='line-number'><a name='L671' href='#L671'><pre>671</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    continue;</pre></td></tr><tr><td class='line-number'><a name='L672' href='#L672'><pre>672</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L673' href='#L673'><pre>673</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                if let Some(&apos;b&apos;) | Some(&apos;B&apos;) = next_char(c_next_idx) {</pre></td></tr><tr><td class='line-number'><a name='L674' href='#L674'><pre>674</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    let start = i;</pre></td></tr><tr><td class='line-number'><a name='L675' href='#L675'><pre>675</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    i = c_next_idx + &apos;b&apos;.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L676' href='#L676'><pre>676</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    let mut cnt = 0;</pre></td></tr><tr><td class='line-number'><a name='L677' href='#L677'><pre>677</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>                    while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L678' href='#L678'><pre>678</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L679' href='#L679'><pre>679</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                        let ch = next_char(i)</pre></td></tr><tr><td class='line-number'><a name='L680' href='#L680'><pre>680</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                            .expect(&quot;内部不変違反: 2進リテラル走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L681' href='#L681'><pre>681</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>                        if is_bindigit(ch) {</pre></td></tr><tr><td class='line-number'><a name='L682' href='#L682'><pre>682</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                            i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L683' href='#L683'><pre>683</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                            cnt += 1;</pre></td></tr><tr><td class='line-number'><a name='L684' href='#L684'><pre>684</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                        } else {</pre></td></tr><tr><td class='line-number'><a name='L685' href='#L685'><pre>685</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                            break;</pre></td></tr><tr><td class='line-number'><a name='L686' href='#L686'><pre>686</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L687' href='#L687'><pre>687</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L688' href='#L688'><pre>688</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    if cnt == 0 {</pre></td></tr><tr><td class='line-number'><a name='L689' href='#L689'><pre>689</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L690' href='#L690'><pre>690</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        return Err(LexerError::at_with_snippet(</pre></td></tr><tr><td class='line-number'><a name='L691' href='#L691'><pre>691</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            &quot;LEX012&quot;,</pre></td></tr><tr><td class='line-number'><a name='L692' href='#L692'><pre>692</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            &quot;2進数の桁がありません&quot;,</pre></td></tr><tr><td class='line-number'><a name='L693' href='#L693'><pre>693</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(start),</pre></td></tr><tr><td class='line-number'><a name='L694' href='#L694'><pre>694</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(l),</pre></td></tr><tr><td class='line-number'><a name='L695' href='#L695'><pre>695</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Some(c),</pre></td></tr><tr><td class='line-number'><a name='L696' href='#L696'><pre>696</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            line_text_at(src, l),</pre></td></tr><tr><td class='line-number'><a name='L697' href='#L697'><pre>697</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        ));</pre></td></tr><tr><td class='line-number'><a name='L698' href='#L698'><pre>698</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L699' href='#L699'><pre>699</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L700' href='#L700'><pre>700</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L701' href='#L701'><pre>701</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        kind: TokenKind::BIN,</pre></td></tr><tr><td class='line-number'><a name='L702' href='#L702'><pre>702</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        value: src[start..i].into(),</pre></td></tr><tr><td class='line-number'><a name='L703' href='#L703'><pre>703</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        pos: start,</pre></td></tr><tr><td class='line-number'><a name='L704' href='#L704'><pre>704</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        line: l,</pre></td></tr><tr><td class='line-number'><a name='L705' href='#L705'><pre>705</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        col: c,</pre></td></tr><tr><td class='line-number'><a name='L706' href='#L706'><pre>706</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    });</pre></td></tr><tr><td class='line-number'><a name='L707' href='#L707'><pre>707</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    continue;</pre></td></tr><tr><td class='line-number'><a name='L708' href='#L708'><pre>708</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L709' href='#L709'><pre>709</pre></a></td><td class='covered-line'><pre>117</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L710' href='#L710'><pre>710</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            // 10進: 浮動小数/指数 or 整数</pre></td></tr><tr><td class='line-number'><a name='L711' href='#L711'><pre>711</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            let start = i;</pre></td></tr><tr><td class='line-number'><a name='L712' href='#L712'><pre>712</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            // 整数部</pre></td></tr><tr><td class='line-number'><a name='L713' href='#L713'><pre>713</pre></a></td><td class='covered-line'><pre>347</pre></td><td class='code'><pre>            while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L714' href='#L714'><pre>714</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L715' href='#L715'><pre>715</pre></a></td><td class='covered-line'><pre>321</pre></td><td class='code'><pre>                let ch = next_char(i).expect(&quot;内部不変違反: 10進整数部走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L716' href='#L716'><pre>716</pre></a></td><td class='covered-line'><pre>321</pre></td><td class='code'><pre>                if is_digit(ch) {</pre></td></tr><tr><td class='line-number'><a name='L717' href='#L717'><pre>717</pre></a></td><td class='covered-line'><pre>224</pre></td><td class='code'><pre>                    i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L718' href='#L718'><pre>718</pre></a></td><td class='covered-line'><pre>224</pre></td><td class='code'><pre>                } else {</pre></td></tr><tr><td class='line-number'><a name='L719' href='#L719'><pre>719</pre></a></td><td class='covered-line'><pre>97</pre></td><td class='code'><pre>                    break;</pre></td></tr><tr><td class='line-number'><a name='L720' href='#L720'><pre>720</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L721' href='#L721'><pre>721</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L722' href='#L722'><pre>722</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            // 小数/指数の判定</pre></td></tr><tr><td class='line-number'><a name='L723' href='#L723'><pre>723</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            let mut is_float = false;</pre></td></tr><tr><td class='line-number'><a name='L724' href='#L724'><pre>724</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            if i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L725' href='#L725'><pre>725</pre></a></td><td class='covered-line'><pre>97</pre></td><td class='code'><pre>                if let Some(&apos;.&apos;) = next_char(i) {</pre></td></tr><tr><td class='line-number'><a name='L726' href='#L726'><pre>726</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    let dot_next = i + &apos;.&apos;.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L727' href='#L727'><pre>727</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                    if let Some(d2) = next_char(dot_next) {</pre></td></tr><tr><td class='line-number'><a name='L728' href='#L728'><pre>728</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                        if d2.is_ascii_digit() {</pre></td></tr><tr><td class='line-number'><a name='L729' href='#L729'><pre>729</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                            // &quot;d.d&quot;</pre></td></tr><tr><td class='line-number'><a name='L730' href='#L730'><pre>730</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                            is_float = true;</pre></td></tr><tr><td class='line-number'><a name='L731' href='#L731'><pre>731</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                            i = dot_next; // &apos;.&apos;</pre></td></tr><tr><td class='line-number'><a name='L732' href='#L732'><pre>732</pre></a></td><td class='covered-line'><pre>22</pre></td><td class='code'><pre>                            while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L733' href='#L733'><pre>733</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                                // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L734' href='#L734'><pre>734</pre></a></td><td class='covered-line'><pre>21</pre></td><td class='code'><pre>                                let ch = next_char(i).expect(</pre></td></tr><tr><td class='line-number'><a name='L735' href='#L735'><pre>735</pre></a></td><td class='covered-line'><pre>21</pre></td><td class='code'><pre>                                    &quot;内部不変違反: 浮動小数点の小数部走査中にEOFに到達しました&quot;,</pre></td></tr><tr><td class='line-number'><a name='L736' href='#L736'><pre>736</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                                );</pre></td></tr><tr><td class='line-number'><a name='L737' href='#L737'><pre>737</pre></a></td><td class='covered-line'><pre>21</pre></td><td class='code'><pre>                                if is_digit(ch) {</pre></td></tr><tr><td class='line-number'><a name='L738' href='#L738'><pre>738</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                                    i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L739' href='#L739'><pre>739</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>                                } else {</pre></td></tr><tr><td class='line-number'><a name='L740' href='#L740'><pre>740</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>                                    break;</pre></td></tr><tr><td class='line-number'><a name='L741' href='#L741'><pre>741</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                                }</pre></td></tr><tr><td class='line-number'><a name='L742' href='#L742'><pre>742</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                            }</pre></td></tr><tr><td class='line-number'><a name='L743' href='#L743'><pre>743</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L744' href='#L744'><pre>744</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L745' href='#L745'><pre>745</pre></a></td><td class='covered-line'><pre>86</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L746' href='#L746'><pre>746</pre></a></td><td class='covered-line'><pre>26</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L747' href='#L747'><pre>747</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            // 指数部</pre></td></tr><tr><td class='line-number'><a name='L748' href='#L748'><pre>748</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            if i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L749' href='#L749'><pre>749</pre></a></td><td class='covered-line'><pre>96</pre></td><td class='code'><pre>                if let Some(&apos;e&apos;) | Some(&apos;E&apos;) = next_char(i) {</pre></td></tr><tr><td class='line-number'><a name='L750' href='#L750'><pre>750</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let mut j = i + &apos;e&apos;.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L751' href='#L751'><pre>751</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    if let Some(&apos;+&apos;) | Some(&apos;-&apos;) = next_char(j) {</pre></td></tr><tr><td class='line-number'><a name='L752' href='#L752'><pre>752</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        j += &apos;+&apos;.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L753' href='#L753'><pre>753</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L754' href='#L754'><pre>754</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let mut cnt = 0;</pre></td></tr><tr><td class='line-number'><a name='L755' href='#L755'><pre>755</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    while j &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L756' href='#L756'><pre>756</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        // 内部不変: j &lt; n のため next_char(j) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L757' href='#L757'><pre>757</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        let ch =</pre></td></tr><tr><td class='line-number'><a name='L758' href='#L758'><pre>758</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                            next_char(j).expect(&quot;内部不変違反: 指数部走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L759' href='#L759'><pre>759</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                        if is_digit(ch) {</pre></td></tr><tr><td class='line-number'><a name='L760' href='#L760'><pre>760</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                            j += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L761' href='#L761'><pre>761</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                            cnt += 1;</pre></td></tr><tr><td class='line-number'><a name='L762' href='#L762'><pre>762</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        } else {</pre></td></tr><tr><td class='line-number'><a name='L763' href='#L763'><pre>763</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                            break;</pre></td></tr><tr><td class='line-number'><a name='L764' href='#L764'><pre>764</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L765' href='#L765'><pre>765</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L766' href='#L766'><pre>766</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    if cnt &gt; 0 {</pre></td></tr><tr><td class='line-number'><a name='L767' href='#L767'><pre>767</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        i = j;</pre></td></tr><tr><td class='line-number'><a name='L768' href='#L768'><pre>768</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        is_float = true;</pre></td></tr><tr><td class='line-number'><a name='L769' href='#L769'><pre>769</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    } else <span class='region red'>{ /* 例: 1e -&gt; ここでは指数を解釈しない */</span></pre></td></tr><tr><td class='line-number'><a name='L770' href='#L770'><pre>770</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    }</span></pre></td></tr><tr><td class='line-number'><a name='L771' href='#L771'><pre>771</pre></a></td><td class='covered-line'><pre>94</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L772' href='#L772'><pre>772</pre></a></td><td class='covered-line'><pre>27</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L773' href='#L773'><pre>773</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            let s = &amp;src[start..i];</pre></td></tr><tr><td class='line-number'><a name='L774' href='#L774'><pre>774</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            let kind = if is_float {</pre></td></tr><tr><td class='line-number'><a name='L775' href='#L775'><pre>775</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>                TokenKind::FLOAT</pre></td></tr><tr><td class='line-number'><a name='L776' href='#L776'><pre>776</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            } else {</pre></td></tr><tr><td class='line-number'><a name='L777' href='#L777'><pre>777</pre></a></td><td class='covered-line'><pre>111</pre></td><td class='code'><pre>                TokenKind::INT</pre></td></tr><tr><td class='line-number'><a name='L778' href='#L778'><pre>778</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            };</pre></td></tr><tr><td class='line-number'><a name='L779' href='#L779'><pre>779</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            let (l, c) = line_col_at(src, start);</pre></td></tr><tr><td class='line-number'><a name='L780' href='#L780'><pre>780</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L781' href='#L781'><pre>781</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>                kind,</pre></td></tr><tr><td class='line-number'><a name='L782' href='#L782'><pre>782</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>                value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L783' href='#L783'><pre>783</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>                pos: start,</pre></td></tr><tr><td class='line-number'><a name='L784' href='#L784'><pre>784</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>                line: l,</pre></td></tr><tr><td class='line-number'><a name='L785' href='#L785'><pre>785</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>                col: c,</pre></td></tr><tr><td class='line-number'><a name='L786' href='#L786'><pre>786</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            });</pre></td></tr><tr><td class='line-number'><a name='L787' href='#L787'><pre>787</pre></a></td><td class='covered-line'><pre>123</pre></td><td class='code'><pre>            continue;</pre></td></tr><tr><td class='line-number'><a name='L788' href='#L788'><pre>788</pre></a></td><td class='covered-line'><pre>303</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L789' href='#L789'><pre>789</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L790' href='#L790'><pre>790</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 識別子（CONID/VARID）</pre></td></tr><tr><td class='line-number'><a name='L791' href='#L791'><pre>791</pre></a></td><td class='covered-line'><pre>303</pre></td><td class='code'><pre>        if is_letter(c) {</pre></td></tr><tr><td class='line-number'><a name='L792' href='#L792'><pre>792</pre></a></td><td class='covered-line'><pre>302</pre></td><td class='code'><pre>            let start = i;</pre></td></tr><tr><td class='line-number'><a name='L793' href='#L793'><pre>793</pre></a></td><td class='covered-line'><pre>302</pre></td><td class='code'><pre>            i += c.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L794' href='#L794'><pre>794</pre></a></td><td class='covered-line'><pre>815</pre></td><td class='code'><pre>            while i &lt; n {</pre></td></tr><tr><td class='line-number'><a name='L795' href='#L795'><pre>795</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // 内部不変: i &lt; n のため next_char(i) は必ず存在する</pre></td></tr><tr><td class='line-number'><a name='L796' href='#L796'><pre>796</pre></a></td><td class='covered-line'><pre>805</pre></td><td class='code'><pre>                let ch = next_char(i).expect(&quot;内部不変違反: 識別子走査中にEOFに到達しました&quot;);</pre></td></tr><tr><td class='line-number'><a name='L797' href='#L797'><pre>797</pre></a></td><td class='covered-line'><pre>805</pre></td><td class='code'><pre>                if is_ident_rest(ch) {</pre></td></tr><tr><td class='line-number'><a name='L798' href='#L798'><pre>798</pre></a></td><td class='covered-line'><pre>513</pre></td><td class='code'><pre>                    i += ch.len_utf8();</pre></td></tr><tr><td class='line-number'><a name='L799' href='#L799'><pre>799</pre></a></td><td class='covered-line'><pre>513</pre></td><td class='code'><pre>                } else {</pre></td></tr><tr><td class='line-number'><a name='L800' href='#L800'><pre>800</pre></a></td><td class='covered-line'><pre>292</pre></td><td class='code'><pre>                    break;</pre></td></tr><tr><td class='line-number'><a name='L801' href='#L801'><pre>801</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L802' href='#L802'><pre>802</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L803' href='#L803'><pre>803</pre></a></td><td class='covered-line'><pre>302</pre></td><td class='code'><pre>            let s = &amp;src[start..i];</pre></td></tr><tr><td class='line-number'><a name='L804' href='#L804'><pre>804</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            // 予約語判定</pre></td></tr><tr><td class='line-number'><a name='L805' href='#L805'><pre>805</pre></a></td><td class='covered-line'><pre>302</pre></td><td class='code'><pre>            let token = match s {</pre></td></tr><tr><td class='line-number'><a name='L806' href='#L806'><pre>806</pre></a></td><td class='covered-line'><pre>302</pre></td><td class='code'><pre>                &quot;let&quot; =&gt; Token {</pre></td></tr><tr><td class='line-number'><a name='L807' href='#L807'><pre>807</pre></a></td><td class='covered-line'><pre>60</pre></td><td class='code'><pre>                    kind: TokenKind::LET,</pre></td></tr><tr><td class='line-number'><a name='L808' href='#L808'><pre>808</pre></a></td><td class='covered-line'><pre>60</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L809' href='#L809'><pre>809</pre></a></td><td class='covered-line'><pre>60</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L810' href='#L810'><pre>810</pre></a></td><td class='covered-line'><pre>60</pre></td><td class='code'><pre>                    line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L811' href='#L811'><pre>811</pre></a></td><td class='covered-line'><pre>60</pre></td><td class='code'><pre>                    col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L812' href='#L812'><pre>812</pre></a></td><td class='covered-line'><pre>60</pre></td><td class='code'><pre>                },</pre></td></tr><tr><td class='line-number'><a name='L813' href='#L813'><pre>813</pre></a></td><td class='covered-line'><pre>242</pre></td><td class='code'><pre>                &quot;in&quot; =&gt; Token {</pre></td></tr><tr><td class='line-number'><a name='L814' href='#L814'><pre>814</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    kind: TokenKind::IN,</pre></td></tr><tr><td class='line-number'><a name='L815' href='#L815'><pre>815</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L816' href='#L816'><pre>816</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L817' href='#L817'><pre>817</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L818' href='#L818'><pre>818</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                    col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L819' href='#L819'><pre>819</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                },</pre></td></tr><tr><td class='line-number'><a name='L820' href='#L820'><pre>820</pre></a></td><td class='covered-line'><pre>238</pre></td><td class='code'><pre>                &quot;if&quot; =&gt; Token {</pre></td></tr><tr><td class='line-number'><a name='L821' href='#L821'><pre>821</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    kind: TokenKind::IF,</pre></td></tr><tr><td class='line-number'><a name='L822' href='#L822'><pre>822</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L823' href='#L823'><pre>823</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L824' href='#L824'><pre>824</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L825' href='#L825'><pre>825</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L826' href='#L826'><pre>826</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                },</pre></td></tr><tr><td class='line-number'><a name='L827' href='#L827'><pre>827</pre></a></td><td class='covered-line'><pre>231</pre></td><td class='code'><pre>                &quot;then&quot; =&gt; Token {</pre></td></tr><tr><td class='line-number'><a name='L828' href='#L828'><pre>828</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    kind: TokenKind::THEN,</pre></td></tr><tr><td class='line-number'><a name='L829' href='#L829'><pre>829</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L830' href='#L830'><pre>830</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L831' href='#L831'><pre>831</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L832' href='#L832'><pre>832</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L833' href='#L833'><pre>833</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                },</pre></td></tr><tr><td class='line-number'><a name='L834' href='#L834'><pre>834</pre></a></td><td class='covered-line'><pre>224</pre></td><td class='code'><pre>                &quot;else&quot; =&gt; Token {</pre></td></tr><tr><td class='line-number'><a name='L835' href='#L835'><pre>835</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    kind: TokenKind::ELSE,</pre></td></tr><tr><td class='line-number'><a name='L836' href='#L836'><pre>836</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L837' href='#L837'><pre>837</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L838' href='#L838'><pre>838</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L839' href='#L839'><pre>839</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L840' href='#L840'><pre>840</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                },</pre></td></tr><tr><td class='line-number'><a name='L841' href='#L841'><pre>841</pre></a></td><td class='covered-line'><pre>218</pre></td><td class='code'><pre>                &quot;True&quot; =&gt; Token {</pre></td></tr><tr><td class='line-number'><a name='L842' href='#L842'><pre>842</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    kind: TokenKind::TRUE,</pre></td></tr><tr><td class='line-number'><a name='L843' href='#L843'><pre>843</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L844' href='#L844'><pre>844</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L845' href='#L845'><pre>845</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L846' href='#L846'><pre>846</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                    col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L847' href='#L847'><pre>847</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>                },</pre></td></tr><tr><td class='line-number'><a name='L848' href='#L848'><pre>848</pre></a></td><td class='covered-line'><pre>212</pre></td><td class='code'><pre>                &quot;False&quot; =&gt; Token {</pre></td></tr><tr><td class='line-number'><a name='L849' href='#L849'><pre>849</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    kind: TokenKind::FALSE,</pre></td></tr><tr><td class='line-number'><a name='L850' href='#L850'><pre>850</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L851' href='#L851'><pre>851</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    pos: start,</pre></td></tr><tr><td class='line-number'><a name='L852' href='#L852'><pre>852</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L853' href='#L853'><pre>853</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L854' href='#L854'><pre>854</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                },</pre></td></tr><tr><td class='line-number'><a name='L855' href='#L855'><pre>855</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                _ =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L856' href='#L856'><pre>856</pre></a></td><td class='covered-line'><pre>210</pre></td><td class='code'><pre>                    let first = s</pre></td></tr><tr><td class='line-number'><a name='L857' href='#L857'><pre>857</pre></a></td><td class='covered-line'><pre>210</pre></td><td class='code'><pre>                        .chars()</pre></td></tr><tr><td class='line-number'><a name='L858' href='#L858'><pre>858</pre></a></td><td class='covered-line'><pre>210</pre></td><td class='code'><pre>                        .next()</pre></td></tr><tr><td class='line-number'><a name='L859' href='#L859'><pre>859</pre></a></td><td class='covered-line'><pre>210</pre></td><td class='code'><pre>                        .expect(&quot;識別子は少なくとも1文字である必要があります&quot;);</pre></td></tr><tr><td class='line-number'><a name='L860' href='#L860'><pre>860</pre></a></td><td class='covered-line'><pre>210</pre></td><td class='code'><pre>                    if first.is_ascii_uppercase() {</pre></td></tr><tr><td class='line-number'><a name='L861' href='#L861'><pre>861</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                        Token {</pre></td></tr><tr><td class='line-number'><a name='L862' href='#L862'><pre>862</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                            kind: TokenKind::CONID,</pre></td></tr><tr><td class='line-number'><a name='L863' href='#L863'><pre>863</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                            value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L864' href='#L864'><pre>864</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                            pos: start,</pre></td></tr><tr><td class='line-number'><a name='L865' href='#L865'><pre>865</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                            line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L866' href='#L866'><pre>866</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                            col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L867' href='#L867'><pre>867</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L868' href='#L868'><pre>868</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    } else {</pre></td></tr><tr><td class='line-number'><a name='L869' href='#L869'><pre>869</pre></a></td><td class='covered-line'><pre>202</pre></td><td class='code'><pre>                        Token {</pre></td></tr><tr><td class='line-number'><a name='L870' href='#L870'><pre>870</pre></a></td><td class='covered-line'><pre>202</pre></td><td class='code'><pre>                            kind: TokenKind::VARID,</pre></td></tr><tr><td class='line-number'><a name='L871' href='#L871'><pre>871</pre></a></td><td class='covered-line'><pre>202</pre></td><td class='code'><pre>                            value: s.into(),</pre></td></tr><tr><td class='line-number'><a name='L872' href='#L872'><pre>872</pre></a></td><td class='covered-line'><pre>202</pre></td><td class='code'><pre>                            pos: start,</pre></td></tr><tr><td class='line-number'><a name='L873' href='#L873'><pre>873</pre></a></td><td class='covered-line'><pre>202</pre></td><td class='code'><pre>                            line: line_col_at(src, start).0,</pre></td></tr><tr><td class='line-number'><a name='L874' href='#L874'><pre>874</pre></a></td><td class='covered-line'><pre>202</pre></td><td class='code'><pre>                            col: line_col_at(src, start).1,</pre></td></tr><tr><td class='line-number'><a name='L875' href='#L875'><pre>875</pre></a></td><td class='covered-line'><pre>202</pre></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L876' href='#L876'><pre>876</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L877' href='#L877'><pre>877</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L878' href='#L878'><pre>878</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            };</pre></td></tr><tr><td class='line-number'><a name='L879' href='#L879'><pre>879</pre></a></td><td class='covered-line'><pre>302</pre></td><td class='code'><pre>            toks.push(token);</pre></td></tr><tr><td class='line-number'><a name='L880' href='#L880'><pre>880</pre></a></td><td class='covered-line'><pre>302</pre></td><td class='code'><pre>            continue;</pre></td></tr><tr><td class='line-number'><a name='L881' href='#L881'><pre>881</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L882' href='#L882'><pre>882</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L883' href='#L883'><pre>883</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let (l, c2) = line_col_at(src, i);</pre></td></tr><tr><td class='line-number'><a name='L884' href='#L884'><pre>884</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        return Err(LexerError::at_with_snippet(</pre></td></tr><tr><td class='line-number'><a name='L885' href='#L885'><pre>885</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            &quot;LEX090&quot;,</pre></td></tr><tr><td class='line-number'><a name='L886' href='#L886'><pre>886</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            format!(&quot;字句解析に失敗: {:?}&quot;, c),</pre></td></tr><tr><td class='line-number'><a name='L887' href='#L887'><pre>887</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            Some(i),</pre></td></tr><tr><td class='line-number'><a name='L888' href='#L888'><pre>888</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            Some(l),</pre></td></tr><tr><td class='line-number'><a name='L889' href='#L889'><pre>889</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            Some(c2),</pre></td></tr><tr><td class='line-number'><a name='L890' href='#L890'><pre>890</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            line_text_at(src, l),</pre></td></tr><tr><td class='line-number'><a name='L891' href='#L891'><pre>891</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        ));</pre></td></tr><tr><td class='line-number'><a name='L892' href='#L892'><pre>892</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L893' href='#L893'><pre>893</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>    let (l, c) = line_col_at(src, n);</pre></td></tr><tr><td class='line-number'><a name='L894' href='#L894'><pre>894</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>    toks.push(Token {</pre></td></tr><tr><td class='line-number'><a name='L895' href='#L895'><pre>895</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>        kind: TokenKind::EOF,</pre></td></tr><tr><td class='line-number'><a name='L896' href='#L896'><pre>896</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>        value: String::new(),</pre></td></tr><tr><td class='line-number'><a name='L897' href='#L897'><pre>897</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>        pos: n,</pre></td></tr><tr><td class='line-number'><a name='L898' href='#L898'><pre>898</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>        line: l,</pre></td></tr><tr><td class='line-number'><a name='L899' href='#L899'><pre>899</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>        col: c,</pre></td></tr><tr><td class='line-number'><a name='L900' href='#L900'><pre>900</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>    });</pre></td></tr><tr><td class='line-number'><a name='L901' href='#L901'><pre>901</pre></a></td><td class='covered-line'><pre>67</pre></td><td class='code'><pre>    Ok(toks)</pre></td></tr><tr><td class='line-number'><a name='L902' href='#L902'><pre>902</pre></a></td><td class='covered-line'><pre>75</pre></td><td class='code'><pre>}</pre></td></tr></table></div></body></html>
target/llvm-cov-target/debug/deps/error_cases-23394c14b7b96804.d:1:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/error_cases-23394c14b7b96804.d: tests/error_cases.rs /home/hsin4/myproject/typelang-hm-rs/examples/basics.tl
target/llvm-cov-target/debug/deps/error_cases-23394c14b7b96804.d:3:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/error_cases-23394c14b7b96804: tests/error_cases.rs /home/hsin4/myproject/typelang-hm-rs/examples/basics.tl
target/llvm-cov-target/debug/deps/error_cases-23394c14b7b96804.d:5:tests/error_cases.rs:
target/miri/x86_64-unknown-linux-gnu/debug/deps/typelang_repl-767cea657cf6d236:1:{"RunWith":{"args":["--crate-name","typelang_repl","--edition=2021","src/bin/typelang.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=a43af023e14e39f2","-C","extra-filename=-767cea657cf6d236","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,95,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/llvm-cov/html/coverage/home/hsin4/myproject/typelang-hm-rs/src/evaluator.rs.html:1:<!doctype html><html><head><meta name='viewport' content='width=device-width,initial-scale=1'><meta charset='UTF-8'><link rel='stylesheet' type='text/css' href='../../../../../../style.css'><script src='../../../../../../control.js'></script></head><body><h2>Coverage Report</h2><h4>Created: 2025-09-17 18:09</h4><span class='control'><a href='javascript:next_line()'>next uncovered line (L)</a>, <a href='javascript:next_region()'>next uncovered region (R)</a>, <a href='javascript:next_branch()'>next uncovered branch (B)</a></span><div class='centered'><table><div class='source-name-title'><pre>/home/hsin4/myproject/typelang-hm-rs/src/evaluator.rs</pre></div><tr><td><pre>Line</pre></td><td><pre>Count</pre></td><td><pre>Source</pre></td></tr><tr><td class='line-number'><a name='L1' href='#L1'><pre>1</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! 評価器（evaluator）</pre></td></tr><tr><td class='line-number'><a name='L2' href='#L2'><pre>2</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//!</pre></td></tr><tr><td class='line-number'><a name='L3' href='#L3'><pre>3</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! 目的:</pre></td></tr><tr><td class='line-number'><a name='L4' href='#L4'><pre>4</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! - 正格・副作用なしの簡易評価器。</pre></td></tr><tr><td class='line-number'><a name='L5' href='#L5'><pre>5</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! - プリミティブは二項演算をカリー化して提供し、REPL/テストで扱いやすくする。</pre></td></tr><tr><td class='line-number'><a name='L6' href='#L6'><pre>6</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//!</pre></td></tr><tr><td class='line-number'><a name='L7' href='#L7'><pre>7</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! 仕様要点:</pre></td></tr><tr><td class='line-number'><a name='L8' href='#L8'><pre>8</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! - `(^)` は非負整数指数で整数計算、それ以外は `Double` にフォールバック。</pre></td></tr><tr><td class='line-number'><a name='L9' href='#L9'><pre>9</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! - 比較は辞書式（リスト/タプル）をサポート。</pre></td></tr><tr><td class='line-number'><a name='L10' href='#L10'><pre>10</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L11' href='#L11'><pre>11</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use std::collections::HashMap;</pre></td></tr><tr><td class='line-number'><a name='L12' href='#L12'><pre>12</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L13' href='#L13'><pre>13</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use crate::ast as A;</pre></td></tr><tr><td class='line-number'><a name='L14' href='#L14'><pre>14</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use crate::errors::EvalError;</pre></td></tr><tr><td class='line-number'><a name='L15' href='#L15'><pre>15</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L16' href='#L16'><pre>16</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[derive(Clone, Debug)]</pre></td></tr><tr><td class='line-number'><a name='L17' href='#L17'><pre>17</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub enum Value {</pre></td></tr><tr><td class='line-number'><a name='L18' href='#L18'><pre>18</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Int(i64),</pre></td></tr><tr><td class='line-number'><a name='L19' href='#L19'><pre>19</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Double(f64),</pre></td></tr><tr><td class='line-number'><a name='L20' href='#L20'><pre>20</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Bool(bool),</pre></td></tr><tr><td class='line-number'><a name='L21' href='#L21'><pre>21</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Char(char),</pre></td></tr><tr><td class='line-number'><a name='L22' href='#L22'><pre>22</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    String(String),</pre></td></tr><tr><td class='line-number'><a name='L23' href='#L23'><pre>23</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    List(Vec&lt;Value&gt;),</pre></td></tr><tr><td class='line-number'><a name='L24' href='#L24'><pre>24</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Tuple(Vec&lt;Value&gt;),</pre></td></tr><tr><td class='line-number'><a name='L25' href='#L25'><pre>25</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Closure {</pre></td></tr><tr><td class='line-number'><a name='L26' href='#L26'><pre>26</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        params: Vec&lt;String&gt;,</pre></td></tr><tr><td class='line-number'><a name='L27' href='#L27'><pre>27</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        body: Box&lt;A::Expr&gt;,</pre></td></tr><tr><td class='line-number'><a name='L28' href='#L28'><pre>28</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        env: Env,</pre></td></tr><tr><td class='line-number'><a name='L29' href='#L29'><pre>29</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    },</pre></td></tr><tr><td class='line-number'><a name='L30' href='#L30'><pre>30</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Prim1(fn(Value) -&gt; Result&lt;Value, EvalError&gt;),</pre></td></tr><tr><td class='line-number'><a name='L31' href='#L31'><pre>31</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Prim2(Prim2),</pre></td></tr><tr><td class='line-number'><a name='L32' href='#L32'><pre>32</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L33' href='#L33'><pre>33</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L34' href='#L34'><pre>34</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[derive(Clone, Debug)]</pre></td></tr><tr><td class='line-number'><a name='L35' href='#L35'><pre>35</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub struct Prim2 {</pre></td></tr><tr><td class='line-number'><a name='L36' href='#L36'><pre>36</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub f: fn(Value, Value) -&gt; Result&lt;Value, EvalError&gt;,</pre></td></tr><tr><td class='line-number'><a name='L37' href='#L37'><pre>37</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub a: Option&lt;Box&lt;Value&gt;&gt;,</pre></td></tr><tr><td class='line-number'><a name='L38' href='#L38'><pre>38</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L39' href='#L39'><pre>39</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L40' href='#L40'><pre>40</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub type Env = HashMap&lt;String, Value&gt;;</pre></td></tr><tr><td class='line-number'><a name='L41' href='#L41'><pre>41</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L42' href='#L42'><pre>42</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>pub fn initial_env() -&gt; Env {</pre></td></tr><tr><td class='line-number'><a name='L43' href='#L43'><pre>43</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    let mut env: Env = HashMap::new();</pre></td></tr><tr><td class='line-number'><a name='L44' href='#L44'><pre>44</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // show</pre></td></tr><tr><td class='line-number'><a name='L45' href='#L45'><pre>45</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn py_show(v: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L46' href='#L46'><pre>46</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        Ok(Value::String(match v {</pre></td></tr><tr><td class='line-number'><a name='L47' href='#L47'><pre>47</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Value::Int(<span class='region red'>i</span>) =&gt; <span class='region red'>i</span>.<span class='region red'>to_string</span>(),</pre></td></tr><tr><td class='line-number'><a name='L48' href='#L48'><pre>48</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Value::Double(<span class='region red'>d</span>) =&gt; <span class='region red'>format!</span>(<span class='region red'>&quot;{}&quot;</span>, d),</pre></td></tr><tr><td class='line-number'><a name='L49' href='#L49'><pre>49</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Value::Bool(<span class='region red'>b</span>) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L50' href='#L50'><pre>50</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                if <span class='region red'>b</span> {</pre></td></tr><tr><td class='line-number'><a name='L51' href='#L51'><pre>51</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>&quot;True&quot;</span>.<span class='region red'>into</span>()</pre></td></tr><tr><td class='line-number'><a name='L52' href='#L52'><pre>52</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                } else {</pre></td></tr><tr><td class='line-number'><a name='L53' href='#L53'><pre>53</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>&quot;False&quot;</span>.<span class='region red'>into</span>()</pre></td></tr><tr><td class='line-number'><a name='L54' href='#L54'><pre>54</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L55' href='#L55'><pre>55</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L56' href='#L56'><pre>56</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Value::Char(<span class='region red'>c</span>) =&gt; <span class='region red'>c</span>.<span class='region red'>to_string</span>(),</pre></td></tr><tr><td class='line-number'><a name='L57' href='#L57'><pre>57</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Value::String(<span class='region red'>s</span>) =&gt; <span class='region red'>s</span>,</pre></td></tr><tr><td class='line-number'><a name='L58' href='#L58'><pre>58</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            _ =&gt; return Err(EvalError::new(&quot;EVAL050&quot;, &quot;show: 未対応の値&quot;, None)),</pre></td></tr><tr><td class='line-number'><a name='L59' href='#L59'><pre>59</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }))</pre></td></tr><tr><td class='line-number'><a name='L60' href='#L60'><pre>60</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L61' href='#L61'><pre>61</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(&quot;show&quot;.into(), Value::Prim1(py_show));</pre></td></tr><tr><td class='line-number'><a name='L62' href='#L62'><pre>62</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L63' href='#L63'><pre>63</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // 二項演算（カリー化）</pre></td></tr><tr><td class='line-number'><a name='L64' href='#L64'><pre>64</pre></a></td><td class='covered-line'><pre>375</pre></td><td class='code'><pre>    fn prim2(f: fn(Value, Value) -&gt; Result&lt;Value, EvalError&gt;) -&gt; Value {</pre></td></tr><tr><td class='line-number'><a name='L65' href='#L65'><pre>65</pre></a></td><td class='covered-line'><pre>375</pre></td><td class='code'><pre>        Value::Prim2(Prim2 { f, a: None })</pre></td></tr><tr><td class='line-number'><a name='L66' href='#L66'><pre>66</pre></a></td><td class='covered-line'><pre>375</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L67' href='#L67'><pre>67</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(</pre></td></tr><tr><td class='line-number'><a name='L68' href='#L68'><pre>68</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        &quot;+&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L69' href='#L69'><pre>69</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        prim2(|a, b| Ok(Value::Int(<div class='tooltip'>to_int<span class='tooltip-content'>12</span></div>(<div class='tooltip'>&amp;a<span class='tooltip-content'>12</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div> + <div class='tooltip'>to_int<span class='tooltip-content'>12</span></div>(<div class='tooltip'>&amp;b<span class='tooltip-content'>12</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>))),</pre></td></tr><tr><td class='line-number'><a name='L70' href='#L70'><pre>70</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    );</pre></td></tr><tr><td class='line-number'><a name='L71' href='#L71'><pre>71</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(</pre></td></tr><tr><td class='line-number'><a name='L72' href='#L72'><pre>72</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        &quot;-&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L73' href='#L73'><pre>73</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        prim2(|a, b| Ok(Value::Int(<div class='tooltip'>to_int<span class='tooltip-content'>6</span></div>(<div class='tooltip'>&amp;a<span class='tooltip-content'>6</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div> - <div class='tooltip'>to_int<span class='tooltip-content'>6</span></div>(<div class='tooltip'>&amp;b<span class='tooltip-content'>6</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>))),</pre></td></tr><tr><td class='line-number'><a name='L74' href='#L74'><pre>74</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    );</pre></td></tr><tr><td class='line-number'><a name='L75' href='#L75'><pre>75</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(</pre></td></tr><tr><td class='line-number'><a name='L76' href='#L76'><pre>76</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        &quot;*&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L77' href='#L77'><pre>77</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        prim2(|a, b| Ok(Value::Int(<div class='tooltip'>to_int<span class='tooltip-content'>1</span></div>(<div class='tooltip'>&amp;a<span class='tooltip-content'>1</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div> * <div class='tooltip'>to_int<span class='tooltip-content'>1</span></div>(<div class='tooltip'>&amp;b<span class='tooltip-content'>1</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>))),</pre></td></tr><tr><td class='line-number'><a name='L78' href='#L78'><pre>78</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    );</pre></td></tr><tr><td class='line-number'><a name='L79' href='#L79'><pre>79</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(</pre></td></tr><tr><td class='line-number'><a name='L80' href='#L80'><pre>80</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        &quot;/&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L81' href='#L81'><pre>81</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        prim2(|a, b| Ok(Value::Double(<div class='tooltip'>to_double<span class='tooltip-content'>2</span></div>(<div class='tooltip'>&amp;a<span class='tooltip-content'>2</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div> / <div class='tooltip'>to_double<span class='tooltip-content'>2</span></div>(<div class='tooltip'>&amp;b<span class='tooltip-content'>2</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>))),</pre></td></tr><tr><td class='line-number'><a name='L82' href='#L82'><pre>82</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    );</pre></td></tr><tr><td class='line-number'><a name='L83' href='#L83'><pre>83</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // (^) と (**) の仕様</pre></td></tr><tr><td class='line-number'><a name='L84' href='#L84'><pre>84</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    fn powi(a: Value, b: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L85' href='#L85'><pre>85</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>        match (a, b) {</pre></td></tr><tr><td class='line-number'><a name='L86' href='#L86'><pre>86</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>            (Value::Int(<div class='tooltip'>x<span class='tooltip-content'>8</span></div>), Value::Int(<div class='tooltip'>y<span class='tooltip-content'>8</span></div>)) if y &gt;= <div class='tooltip'>0<span class='tooltip-content'>8</span></div> =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L87' href='#L87'><pre>87</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                if y &gt; u32::MAX as i64 {</pre></td></tr><tr><td class='line-number'><a name='L88' href='#L88'><pre>88</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    return <span class='region red'>Err(EvalError::new(&quot;EVAL060&quot;, &quot;(^) の指数が大きすぎます&quot;, None))</span>;</pre></td></tr><tr><td class='line-number'><a name='L89' href='#L89'><pre>89</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L90' href='#L90'><pre>90</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // オーバーフローは利用者へ明示的なエラーとして返す</pre></td></tr><tr><td class='line-number'><a name='L91' href='#L91'><pre>91</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                x.checked_pow(y as u32).map(Value::Int).ok_or_else(|| <div class='tooltip'>{<span class='tooltip-content'>1</span></div></pre></td></tr><tr><td class='line-number'><a name='L92' href='#L92'><pre>92</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    EvalError::new(&quot;EVAL060&quot;, &quot;(^) の結果が Int の範囲を超えました&quot;, None)</pre></td></tr><tr><td class='line-number'><a name='L93' href='#L93'><pre>93</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                })</pre></td></tr><tr><td class='line-number'><a name='L94' href='#L94'><pre>94</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L95' href='#L95'><pre>95</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            (x, y) =&gt; Ok(Value::Double(to_double(&amp;x)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>.powf(to_double(&amp;y)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>))),</pre></td></tr><tr><td class='line-number'><a name='L96' href='#L96'><pre>96</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L97' href='#L97'><pre>97</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L98' href='#L98'><pre>98</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>    fn powf(a: Value, b: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L99' href='#L99'><pre>99</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>        Ok(Value::Double(to_double(&amp;a)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>.powf(to_double(&amp;b)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>)))</pre></td></tr><tr><td class='line-number'><a name='L100' href='#L100'><pre>100</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L101' href='#L101'><pre>101</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(&quot;^&quot;.into(), prim2(powi));</pre></td></tr><tr><td class='line-number'><a name='L102' href='#L102'><pre>102</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(&quot;**&quot;.into(), prim2(powf));</pre></td></tr><tr><td class='line-number'><a name='L103' href='#L103'><pre>103</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // 比較演算（Eq/Ord 相当）</pre></td></tr><tr><td class='line-number'><a name='L104' href='#L104'><pre>104</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>    fn eqv(a: &amp;Value, b: &amp;Value) -&gt; Result&lt;bool, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L105' href='#L105'><pre>105</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>        Ok(match (a, b) {</pre></td></tr><tr><td class='line-number'><a name='L106' href='#L106'><pre>106</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>            (Value::Int(x), Value::Int(y)) =&gt; x == y,</pre></td></tr><tr><td class='line-number'><a name='L107' href='#L107'><pre>107</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::Double(<span class='region red'>x</span>), Value::Double(<span class='region red'>y</span>)) =&gt; <span class='region red'>x == y</span>,</pre></td></tr><tr><td class='line-number'><a name='L108' href='#L108'><pre>108</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::Int(<span class='region red'>x</span>), Value::Double(<span class='region red'>y</span>)) =&gt; <span class='region red'>(*x as f64) == *y</span>,</pre></td></tr><tr><td class='line-number'><a name='L109' href='#L109'><pre>109</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::Double(<span class='region red'>x</span>), Value::Int(<span class='region red'>y</span>)) =&gt; <span class='region red'>*x == (*y as f64)</span>,</pre></td></tr><tr><td class='line-number'><a name='L110' href='#L110'><pre>110</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::Bool(<span class='region red'>x</span>), Value::Bool(<span class='region red'>y</span>)) =&gt; <span class='region red'>x == y</span>,</pre></td></tr><tr><td class='line-number'><a name='L111' href='#L111'><pre>111</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::Char(<span class='region red'>x</span>), Value::Char(<span class='region red'>y</span>)) =&gt; <span class='region red'>x == y</span>,</pre></td></tr><tr><td class='line-number'><a name='L112' href='#L112'><pre>112</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::String(<span class='region red'>x</span>), Value::String(<span class='region red'>y</span>)) =&gt; <span class='region red'>x == y</span>,</pre></td></tr><tr><td class='line-number'><a name='L113' href='#L113'><pre>113</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            (Value::List(xs), Value::List(ys)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L114' href='#L114'><pre>114</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                if xs.len() != ys.len() {</pre></td></tr><tr><td class='line-number'><a name='L115' href='#L115'><pre>115</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    return <span class='region red'>Ok(false)</span>;</pre></td></tr><tr><td class='line-number'><a name='L116' href='#L116'><pre>116</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L117' href='#L117'><pre>117</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                for (vx, vy) in <div class='tooltip'>xs.iter()<span class='tooltip-content'>1</span></div>.<div class='tooltip'>zip<span class='tooltip-content'>1</span></div>(<div class='tooltip'>ys.iter()<span class='tooltip-content'>1</span></div>) {</pre></td></tr><tr><td class='line-number'><a name='L118' href='#L118'><pre>118</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    if !eqv(vx, vy)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div> {</pre></td></tr><tr><td class='line-number'><a name='L119' href='#L119'><pre>119</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        return <span class='region red'>Ok(false)</span>;</pre></td></tr><tr><td class='line-number'><a name='L120' href='#L120'><pre>120</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L121' href='#L121'><pre>121</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L122' href='#L122'><pre>122</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                true</pre></td></tr><tr><td class='line-number'><a name='L123' href='#L123'><pre>123</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L124' href='#L124'><pre>124</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            (Value::Tuple(xs), Value::Tuple(ys)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L125' href='#L125'><pre>125</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                if xs.len() != ys.len() {</pre></td></tr><tr><td class='line-number'><a name='L126' href='#L126'><pre>126</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    return <span class='region red'>Ok(false)</span>;</pre></td></tr><tr><td class='line-number'><a name='L127' href='#L127'><pre>127</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L128' href='#L128'><pre>128</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                let mut ok = true;</pre></td></tr><tr><td class='line-number'><a name='L129' href='#L129'><pre>129</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                for (vx, vy) in <div class='tooltip'>xs.iter()<span class='tooltip-content'>1</span></div>.<div class='tooltip'>zip<span class='tooltip-content'>1</span></div>(<div class='tooltip'>ys.iter()<span class='tooltip-content'>1</span></div>) {</pre></td></tr><tr><td class='line-number'><a name='L130' href='#L130'><pre>130</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    if !eqv(vx, vy)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div> {</pre></td></tr><tr><td class='line-number'><a name='L131' href='#L131'><pre>131</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>ok = false</span>;</pre></td></tr><tr><td class='line-number'><a name='L132' href='#L132'><pre>132</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>break</span>;</pre></td></tr><tr><td class='line-number'><a name='L133' href='#L133'><pre>133</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L134' href='#L134'><pre>134</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L135' href='#L135'><pre>135</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                ok</pre></td></tr><tr><td class='line-number'><a name='L136' href='#L136'><pre>136</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L137' href='#L137'><pre>137</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            _ =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L138' href='#L138'><pre>138</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                return <span class='region red'>Err(EvalError::new(</span></pre></td></tr><tr><td class='line-number'><a name='L139' href='#L139'><pre>139</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    &quot;EVAL050&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L140' href='#L140'><pre>140</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    &quot;==: 未対応の型の組み合わせ&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L141' href='#L141'><pre>141</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    None,</span></pre></td></tr><tr><td class='line-number'><a name='L142' href='#L142'><pre>142</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                ))</span></pre></td></tr><tr><td class='line-number'><a name='L143' href='#L143'><pre>143</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L144' href='#L144'><pre>144</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        })</pre></td></tr><tr><td class='line-number'><a name='L145' href='#L145'><pre>145</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L146' href='#L146'><pre>146</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    use std::cmp::Ordering;</pre></td></tr><tr><td class='line-number'><a name='L147' href='#L147'><pre>147</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    fn compare(a: &amp;Value, b: &amp;Value) -&gt; Result&lt;Ordering, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L148' href='#L148'><pre>148</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>        match (a, b) {</pre></td></tr><tr><td class='line-number'><a name='L149' href='#L149'><pre>149</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>            (Value::Int(x), Value::Int(y)) =&gt; Ok(x.cmp(y)),</pre></td></tr><tr><td class='line-number'><a name='L150' href='#L150'><pre>150</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            (Value::Double(x), Value::Double(y)) =&gt; x</pre></td></tr><tr><td class='line-number'><a name='L151' href='#L151'><pre>151</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                .partial_cmp(y)</pre></td></tr><tr><td class='line-number'><a name='L152' href='#L152'><pre>152</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                .ok_or_else(|| EvalError::new(&quot;EVAL090&quot;, &quot;NaN 比較&quot;, None)),</pre></td></tr><tr><td class='line-number'><a name='L153' href='#L153'><pre>153</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::Int(<span class='region red'>x</span>), Value::Double(<span class='region red'>y</span>)) =&gt; <span class='region red'>(*x as f64)</span></pre></td></tr><tr><td class='line-number'><a name='L154' href='#L154'><pre>154</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                .<span class='region red'>partial_cmp</span>(<span class='region red'>y</span>)</pre></td></tr><tr><td class='line-number'><a name='L155' href='#L155'><pre>155</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                .<span class='region red'>ok_or_else</span>(|| <span class='region red'>EvalError::new</span>(&quot;EVAL090&quot;, &quot;NaN 比較&quot;, <span class='region red'>None</span>)),</pre></td></tr><tr><td class='line-number'><a name='L156' href='#L156'><pre>156</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            (Value::Double(x), Value::Int(y)) =&gt; x</pre></td></tr><tr><td class='line-number'><a name='L157' href='#L157'><pre>157</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                .partial_cmp(&amp;(*y as f64))</pre></td></tr><tr><td class='line-number'><a name='L158' href='#L158'><pre>158</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                .ok_or_else(|| <div class='tooltip'><span class='region red'>EvalError::new</span><span class='tooltip-content'>0</span></div>(&quot;EVAL090&quot;, &quot;NaN 比較&quot;, <div class='tooltip'><span class='region red'>None</span><span class='tooltip-content'>0</span></div>)),</pre></td></tr><tr><td class='line-number'><a name='L159' href='#L159'><pre>159</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::Bool(<span class='region red'>x</span>), Value::Bool(<span class='region red'>y</span>)) =&gt; <span class='region red'>Ok(</span><span class='region red'>x</span><span class='region red'>.cmp(y))</span>,</pre></td></tr><tr><td class='line-number'><a name='L160' href='#L160'><pre>160</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::Char(<span class='region red'>x</span>), Value::Char(<span class='region red'>y</span>)) =&gt; <span class='region red'>Ok(</span><span class='region red'>x</span><span class='region red'>.cmp(y))</span>,</pre></td></tr><tr><td class='line-number'><a name='L161' href='#L161'><pre>161</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            (Value::String(<span class='region red'>x</span>), Value::String(<span class='region red'>y</span>)) =&gt; <span class='region red'>Ok(</span><span class='region red'>x</span><span class='region red'>.cmp(y))</span>,</pre></td></tr><tr><td class='line-number'><a name='L162' href='#L162'><pre>162</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            (Value::List(xs), Value::List(ys)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L163' href='#L163'><pre>163</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                let n = xs.len().min(ys.len());</pre></td></tr><tr><td class='line-number'><a name='L164' href='#L164'><pre>164</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                for i in 0..<div class='tooltip'>n<span class='tooltip-content'>1</span></div> {</pre></td></tr><tr><td class='line-number'><a name='L165' href='#L165'><pre>165</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let ord = compare(&amp;xs[i], &amp;ys[i])<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L166' href='#L166'><pre>166</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    if ord != Ordering::Equal {</pre></td></tr><tr><td class='line-number'><a name='L167' href='#L167'><pre>167</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        return Ok(ord);</pre></td></tr><tr><td class='line-number'><a name='L168' href='#L168'><pre>168</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L169' href='#L169'><pre>169</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L170' href='#L170'><pre>170</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>Ok(</span><span class='region red'>xs.len()</span><span class='region red'>.</span><span class='region red'>cmp</span><span class='region red'>(&amp;ys.len()))</span></pre></td></tr><tr><td class='line-number'><a name='L171' href='#L171'><pre>171</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L172' href='#L172'><pre>172</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            (Value::Tuple(xs), Value::Tuple(ys)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L173' href='#L173'><pre>173</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                let n = xs.len().min(ys.len());</pre></td></tr><tr><td class='line-number'><a name='L174' href='#L174'><pre>174</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                for i in 0..<div class='tooltip'>n<span class='tooltip-content'>1</span></div> {</pre></td></tr><tr><td class='line-number'><a name='L175' href='#L175'><pre>175</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    let ord = compare(&amp;xs[i], &amp;ys[i])<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L176' href='#L176'><pre>176</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    if ord != Ordering::Equal {</pre></td></tr><tr><td class='line-number'><a name='L177' href='#L177'><pre>177</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        return Ok(ord);</pre></td></tr><tr><td class='line-number'><a name='L178' href='#L178'><pre>178</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L179' href='#L179'><pre>179</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L180' href='#L180'><pre>180</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>Ok(</span><span class='region red'>xs.len()</span><span class='region red'>.</span><span class='region red'>cmp</span><span class='region red'>(&amp;ys.len()))</span></pre></td></tr><tr><td class='line-number'><a name='L181' href='#L181'><pre>181</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L182' href='#L182'><pre>182</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            _ =&gt; <span class='region red'>Err(EvalError::new(</span></pre></td></tr><tr><td class='line-number'><a name='L183' href='#L183'><pre>183</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                &quot;EVAL050&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L184' href='#L184'><pre>184</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                &quot;比較演算: 未対応の型の組み合わせ&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L185' href='#L185'><pre>185</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                None,</span></pre></td></tr><tr><td class='line-number'><a name='L186' href='#L186'><pre>186</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            ))</span>,</pre></td></tr><tr><td class='line-number'><a name='L187' href='#L187'><pre>187</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L188' href='#L188'><pre>188</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L189' href='#L189'><pre>189</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(&quot;==&quot;.into(), prim2(|a, b| Ok(Value::Bool(<div class='tooltip'>eqv<span class='tooltip-content'>3</span></div>(<div class='tooltip'>&amp;a<span class='tooltip-content'>3</span></div>, <div class='tooltip'>&amp;b<span class='tooltip-content'>3</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>))));</pre></td></tr><tr><td class='line-number'><a name='L190' href='#L190'><pre>190</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(&quot;/=&quot;.into(), prim2(|a, b| Ok(Value::Bool(!<div class='tooltip'><span class='region red'>eqv</span><span class='tooltip-content'>0</span></div>(<div class='tooltip'><span class='region red'>&amp;a</span><span class='tooltip-content'>0</span></div>, <div class='tooltip'><span class='region red'>&amp;b</span><span class='tooltip-content'>0</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>))));</pre></td></tr><tr><td class='line-number'><a name='L191' href='#L191'><pre>191</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(</pre></td></tr><tr><td class='line-number'><a name='L192' href='#L192'><pre>192</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        &quot;&lt;&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L193' href='#L193'><pre>193</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        prim2(|a, b| Ok(Value::Bool(<div class='tooltip'>compare<span class='tooltip-content'>4</span></div>(<div class='tooltip'>&amp;a<span class='tooltip-content'>4</span></div>, <div class='tooltip'>&amp;b<span class='tooltip-content'>4</span></div>)<div class='tooltip'>?<span class='tooltip-content'>1</span></div> == <div class='tooltip'>std::cmp::Ordering::Less<span class='tooltip-content'>3</span></div>))),</pre></td></tr><tr><td class='line-number'><a name='L194' href='#L194'><pre>194</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    );</pre></td></tr><tr><td class='line-number'><a name='L195' href='#L195'><pre>195</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(</pre></td></tr><tr><td class='line-number'><a name='L196' href='#L196'><pre>196</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        &quot;&lt;=&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L197' href='#L197'><pre>197</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        prim2(|a, b| <div class='tooltip'><span class='region red'>{</span><span class='tooltip-content'>0</span></div></pre></td></tr><tr><td class='line-number'><a name='L198' href='#L198'><pre>198</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            Ok(Value::Bool({</pre></td></tr><tr><td class='line-number'><a name='L199' href='#L199'><pre>199</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let <span class='region red'>o</span> = <span class='region red'>compare</span>(<span class='region red'>&amp;a</span>, <span class='region red'>&amp;b</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L200' href='#L200'><pre>200</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>o == std::cmp::Ordering::Less</span> || <span class='region red'>o == std::cmp::Ordering::Equal</span></pre></td></tr><tr><td class='line-number'><a name='L201' href='#L201'><pre>201</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }))</pre></td></tr><tr><td class='line-number'><a name='L202' href='#L202'><pre>202</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span>),</pre></td></tr><tr><td class='line-number'><a name='L203' href='#L203'><pre>203</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    );</pre></td></tr><tr><td class='line-number'><a name='L204' href='#L204'><pre>204</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(</pre></td></tr><tr><td class='line-number'><a name='L205' href='#L205'><pre>205</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        &quot;&gt;&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L206' href='#L206'><pre>206</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        prim2(|a, b| Ok(Value::Bool(<div class='tooltip'><span class='region red'>compare</span><span class='tooltip-content'>0</span></div>(<div class='tooltip'><span class='region red'>&amp;a</span><span class='tooltip-content'>0</span></div>, <div class='tooltip'><span class='region red'>&amp;b</span><span class='tooltip-content'>0</span></div>)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div> == <div class='tooltip'><span class='region red'>std::cmp::Ordering::Greater</span><span class='tooltip-content'>0</span></div>))),</pre></td></tr><tr><td class='line-number'><a name='L207' href='#L207'><pre>207</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    );</pre></td></tr><tr><td class='line-number'><a name='L208' href='#L208'><pre>208</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(</pre></td></tr><tr><td class='line-number'><a name='L209' href='#L209'><pre>209</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        &quot;&gt;=&quot;.into(),</pre></td></tr><tr><td class='line-number'><a name='L210' href='#L210'><pre>210</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>        prim2(|a, b| <div class='tooltip'>{<span class='tooltip-content'>1</span></div></pre></td></tr><tr><td class='line-number'><a name='L211' href='#L211'><pre>211</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            Ok(Value::Bool({</pre></td></tr><tr><td class='line-number'><a name='L212' href='#L212'><pre>212</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                let o = compare(&amp;a, &amp;b)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L213' href='#L213'><pre>213</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                o == std::cmp::Ordering::Greater || <div class='tooltip'><span class='region red'>o == std::cmp::Ordering::Equal</span><span class='tooltip-content'>0</span></div></pre></td></tr><tr><td class='line-number'><a name='L214' href='#L214'><pre>214</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }))</pre></td></tr><tr><td class='line-number'><a name='L215' href='#L215'><pre>215</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        }),</pre></td></tr><tr><td class='line-number'><a name='L216' href='#L216'><pre>216</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    );</pre></td></tr><tr><td class='line-number'><a name='L217' href='#L217'><pre>217</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(&quot;map&quot;.into(), prim2(map_prim));</pre></td></tr><tr><td class='line-number'><a name='L218' href='#L218'><pre>218</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(&quot;foldl&quot;.into(), prim2(foldl_impl));</pre></td></tr><tr><td class='line-number'><a name='L219' href='#L219'><pre>219</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env.insert(&quot;foldr&quot;.into(), prim2(foldr_impl));</pre></td></tr><tr><td class='line-number'><a name='L220' href='#L220'><pre>220</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>    env</pre></td></tr><tr><td class='line-number'><a name='L221' href='#L221'><pre>221</pre></a></td><td class='covered-line'><pre>25</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L222' href='#L222'><pre>222</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L223' href='#L223'><pre>223</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>fn map_prim(fun: Value, xs: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L224' href='#L224'><pre>224</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>    match xs {</pre></td></tr><tr><td class='line-number'><a name='L225' href='#L225'><pre>225</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        Value::List(items) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L226' href='#L226'><pre>226</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            let mut out = Vec::with_capacity(items.len());</pre></td></tr><tr><td class='line-number'><a name='L227' href='#L227'><pre>227</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>            for <div class='tooltip'>item<span class='tooltip-content'>3</span></div> in items {</pre></td></tr><tr><td class='line-number'><a name='L228' href='#L228'><pre>228</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                let mapped = apply(&amp;fun, item)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L229' href='#L229'><pre>229</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                out.push(mapped);</pre></td></tr><tr><td class='line-number'><a name='L230' href='#L230'><pre>230</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L231' href='#L231'><pre>231</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            Ok(Value::List(out))</pre></td></tr><tr><td class='line-number'><a name='L232' href='#L232'><pre>232</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L233' href='#L233'><pre>233</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        _ =&gt; Err(EvalError::new(</pre></td></tr><tr><td class='line-number'><a name='L234' href='#L234'><pre>234</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            &quot;EVAL050&quot;,</pre></td></tr><tr><td class='line-number'><a name='L235' href='#L235'><pre>235</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            &quot;map: リスト以外に適用できません&quot;,</pre></td></tr><tr><td class='line-number'><a name='L236' href='#L236'><pre>236</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            None,</pre></td></tr><tr><td class='line-number'><a name='L237' href='#L237'><pre>237</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        )),</pre></td></tr><tr><td class='line-number'><a name='L238' href='#L238'><pre>238</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L239' href='#L239'><pre>239</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L240' href='#L240'><pre>240</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L241' href='#L241'><pre>241</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>fn foldl_impl(fun: Value, acc: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L242' href='#L242'><pre>242</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    Ok(Value::Prim2(Prim2 {</pre></td></tr><tr><td class='line-number'><a name='L243' href='#L243'><pre>243</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        f: foldl_finish,</pre></td></tr><tr><td class='line-number'><a name='L244' href='#L244'><pre>244</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        a: Some(Box::new(Value::Tuple(vec![fun, acc]))),</pre></td></tr><tr><td class='line-number'><a name='L245' href='#L245'><pre>245</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }))</pre></td></tr><tr><td class='line-number'><a name='L246' href='#L246'><pre>246</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L247' href='#L247'><pre>247</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L248' href='#L248'><pre>248</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>fn foldl_finish(state: Value, xs: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L249' href='#L249'><pre>249</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    let (fun, acc0) = unpack_pair(state, &quot;foldl&quot;);</pre></td></tr><tr><td class='line-number'><a name='L250' href='#L250'><pre>250</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    match xs {</pre></td></tr><tr><td class='line-number'><a name='L251' href='#L251'><pre>251</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        Value::List(items) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L252' href='#L252'><pre>252</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            let mut acc = acc0;</pre></td></tr><tr><td class='line-number'><a name='L253' href='#L253'><pre>253</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>            for <div class='tooltip'>item<span class='tooltip-content'>4</span></div> in items {</pre></td></tr><tr><td class='line-number'><a name='L254' href='#L254'><pre>254</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                let next = apply(&amp;fun, acc)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L255' href='#L255'><pre>255</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                acc = apply(&amp;next, item)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L256' href='#L256'><pre>256</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L257' href='#L257'><pre>257</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            Ok(acc)</pre></td></tr><tr><td class='line-number'><a name='L258' href='#L258'><pre>258</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L259' href='#L259'><pre>259</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        _ =&gt; <span class='region red'>Err(EvalError::new(</span></pre></td></tr><tr><td class='line-number'><a name='L260' href='#L260'><pre>260</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            &quot;EVAL050&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L261' href='#L261'><pre>261</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            &quot;foldl: リスト以外に適用できません&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L262' href='#L262'><pre>262</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            None,</span></pre></td></tr><tr><td class='line-number'><a name='L263' href='#L263'><pre>263</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        ))</span>,</pre></td></tr><tr><td class='line-number'><a name='L264' href='#L264'><pre>264</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L265' href='#L265'><pre>265</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L266' href='#L266'><pre>266</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L267' href='#L267'><pre>267</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>fn foldr_impl(fun: Value, acc: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L268' href='#L268'><pre>268</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    Ok(Value::Prim2(Prim2 {</pre></td></tr><tr><td class='line-number'><a name='L269' href='#L269'><pre>269</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        f: foldr_finish,</pre></td></tr><tr><td class='line-number'><a name='L270' href='#L270'><pre>270</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        a: Some(Box::new(Value::Tuple(vec![fun, acc]))),</pre></td></tr><tr><td class='line-number'><a name='L271' href='#L271'><pre>271</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }))</pre></td></tr><tr><td class='line-number'><a name='L272' href='#L272'><pre>272</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L273' href='#L273'><pre>273</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L274' href='#L274'><pre>274</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>fn foldr_finish(state: Value, xs: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L275' href='#L275'><pre>275</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    let (fun, acc0) = unpack_pair(state, &quot;foldr&quot;);</pre></td></tr><tr><td class='line-number'><a name='L276' href='#L276'><pre>276</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    match xs {</pre></td></tr><tr><td class='line-number'><a name='L277' href='#L277'><pre>277</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        Value::List(items) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L278' href='#L278'><pre>278</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            let mut acc = acc0;</pre></td></tr><tr><td class='line-number'><a name='L279' href='#L279'><pre>279</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            for item in <div class='tooltip'>items<span class='tooltip-content'>1</span></div>.<div class='tooltip'>into_iter<span class='tooltip-content'>1</span></div>().<div class='tooltip'>rev<span class='tooltip-content'>1</span></div>() {</pre></td></tr><tr><td class='line-number'><a name='L280' href='#L280'><pre>280</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                let step = apply(&amp;fun, item)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L281' href='#L281'><pre>281</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                acc = apply(&amp;step, acc)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L282' href='#L282'><pre>282</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L283' href='#L283'><pre>283</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            Ok(acc)</pre></td></tr><tr><td class='line-number'><a name='L284' href='#L284'><pre>284</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L285' href='#L285'><pre>285</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        _ =&gt; <span class='region red'>Err(EvalError::new(</span></pre></td></tr><tr><td class='line-number'><a name='L286' href='#L286'><pre>286</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            &quot;EVAL050&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L287' href='#L287'><pre>287</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            &quot;foldr: リスト以外に適用できません&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L288' href='#L288'><pre>288</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            None,</span></pre></td></tr><tr><td class='line-number'><a name='L289' href='#L289'><pre>289</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        ))</span>,</pre></td></tr><tr><td class='line-number'><a name='L290' href='#L290'><pre>290</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L291' href='#L291'><pre>291</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L292' href='#L292'><pre>292</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L293' href='#L293'><pre>293</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>fn unpack_pair(state: Value, label: &amp;str) -&gt; (Value, Value) {</pre></td></tr><tr><td class='line-number'><a name='L294' href='#L294'><pre>294</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>    if let Value::Tuple(items) = state {</pre></td></tr><tr><td class='line-number'><a name='L295' href='#L295'><pre>295</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        if items.len() == 2 {</pre></td></tr><tr><td class='line-number'><a name='L296' href='#L296'><pre>296</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            let mut iter = items.into_iter();</pre></td></tr><tr><td class='line-number'><a name='L297' href='#L297'><pre>297</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            let first = iter.next().expect(&quot;内部タプルが存在する必要があります&quot;);</pre></td></tr><tr><td class='line-number'><a name='L298' href='#L298'><pre>298</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            let second = iter.next().expect(&quot;内部タプルが存在する必要があります&quot;);</pre></td></tr><tr><td class='line-number'><a name='L299' href='#L299'><pre>299</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            return (first, second);</pre></td></tr><tr><td class='line-number'><a name='L300' href='#L300'><pre>300</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L301' href='#L301'><pre>301</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L302' href='#L302'><pre>302</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>panic!</span>(<span class='region red'>&quot;{}: 内部状態が不正です&quot;</span>, label);</pre></td></tr><tr><td class='line-number'><a name='L303' href='#L303'><pre>303</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L304' href='#L304'><pre>304</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L305' href='#L305'><pre>305</pre></a></td><td class='covered-line'><pre>120</pre></td><td class='code'><pre>fn apply(f: &amp;Value, x: Value) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L306' href='#L306'><pre>306</pre></a></td><td class='covered-line'><pre>120</pre></td><td class='code'><pre>    match f {</pre></td></tr><tr><td class='line-number'><a name='L307' href='#L307'><pre>307</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        Value::Prim1(g) =&gt; g(x),</pre></td></tr><tr><td class='line-number'><a name='L308' href='#L308'><pre>308</pre></a></td><td class='covered-line'><pre>98</pre></td><td class='code'><pre>        Value::Prim2(p) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L309' href='#L309'><pre>309</pre></a></td><td class='covered-line'><pre>98</pre></td><td class='code'><pre>            if let Some(<div class='tooltip'>a<span class='tooltip-content'>50</span></div>) = &amp;p.a {</pre></td></tr><tr><td class='line-number'><a name='L310' href='#L310'><pre>310</pre></a></td><td class='covered-line'><pre>50</pre></td><td class='code'><pre>                (p.f)((*a.clone()).clone(), x)</pre></td></tr><tr><td class='line-number'><a name='L311' href='#L311'><pre>311</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            } else {</pre></td></tr><tr><td class='line-number'><a name='L312' href='#L312'><pre>312</pre></a></td><td class='covered-line'><pre>48</pre></td><td class='code'><pre>                Ok(Value::Prim2(Prim2 {</pre></td></tr><tr><td class='line-number'><a name='L313' href='#L313'><pre>313</pre></a></td><td class='covered-line'><pre>48</pre></td><td class='code'><pre>                    f: p.f,</pre></td></tr><tr><td class='line-number'><a name='L314' href='#L314'><pre>314</pre></a></td><td class='covered-line'><pre>48</pre></td><td class='code'><pre>                    a: Some(Box::new(x)),</pre></td></tr><tr><td class='line-number'><a name='L315' href='#L315'><pre>315</pre></a></td><td class='covered-line'><pre>48</pre></td><td class='code'><pre>                }))</pre></td></tr><tr><td class='line-number'><a name='L316' href='#L316'><pre>316</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L317' href='#L317'><pre>317</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L318' href='#L318'><pre>318</pre></a></td><td class='covered-line'><pre>20</pre></td><td class='code'><pre>        Value::Closure { params, body, env } =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L319' href='#L319'><pre>319</pre></a></td><td class='covered-line'><pre>20</pre></td><td class='code'><pre>            if params.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L320' href='#L320'><pre>320</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                return <span class='region red'>Err(EvalError::new(&quot;EVAL090&quot;, &quot;関数に引数がありません&quot;, None))</span>;</pre></td></tr><tr><td class='line-number'><a name='L321' href='#L321'><pre>321</pre></a></td><td class='covered-line'><pre>20</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L322' href='#L322'><pre>322</pre></a></td><td class='covered-line'><pre>20</pre></td><td class='code'><pre>            let mut env2 = env.clone();</pre></td></tr><tr><td class='line-number'><a name='L323' href='#L323'><pre>323</pre></a></td><td class='covered-line'><pre>20</pre></td><td class='code'><pre>            env2.insert(params[0].clone(), x);</pre></td></tr><tr><td class='line-number'><a name='L324' href='#L324'><pre>324</pre></a></td><td class='covered-line'><pre>20</pre></td><td class='code'><pre>            if params.len() == 1 {</pre></td></tr><tr><td class='line-number'><a name='L325' href='#L325'><pre>325</pre></a></td><td class='covered-line'><pre>13</pre></td><td class='code'><pre>                eval_expr(body, &amp;mut env2)</pre></td></tr><tr><td class='line-number'><a name='L326' href='#L326'><pre>326</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            } else {</pre></td></tr><tr><td class='line-number'><a name='L327' href='#L327'><pre>327</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                Ok(Value::Closure {</pre></td></tr><tr><td class='line-number'><a name='L328' href='#L328'><pre>328</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    params: params[1..].to_vec(),</pre></td></tr><tr><td class='line-number'><a name='L329' href='#L329'><pre>329</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    body: body.clone(),</pre></td></tr><tr><td class='line-number'><a name='L330' href='#L330'><pre>330</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                    env: env2,</pre></td></tr><tr><td class='line-number'><a name='L331' href='#L331'><pre>331</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>                })</pre></td></tr><tr><td class='line-number'><a name='L332' href='#L332'><pre>332</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L333' href='#L333'><pre>333</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L334' href='#L334'><pre>334</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        _ =&gt; Err(EvalError::new(</pre></td></tr><tr><td class='line-number'><a name='L335' href='#L335'><pre>335</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            &quot;EVAL020&quot;,</pre></td></tr><tr><td class='line-number'><a name='L336' href='#L336'><pre>336</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            &quot;関数適用対象が関数ではありません&quot;,</pre></td></tr><tr><td class='line-number'><a name='L337' href='#L337'><pre>337</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            None,</pre></td></tr><tr><td class='line-number'><a name='L338' href='#L338'><pre>338</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        )),</pre></td></tr><tr><td class='line-number'><a name='L339' href='#L339'><pre>339</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L340' href='#L340'><pre>340</pre></a></td><td class='covered-line'><pre>120</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L341' href='#L341'><pre>341</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L342' href='#L342'><pre>342</pre></a></td><td class='covered-line'><pre>38</pre></td><td class='code'><pre>fn to_int(v: &amp;Value) -&gt; Result&lt;i64, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L343' href='#L343'><pre>343</pre></a></td><td class='covered-line'><pre>38</pre></td><td class='code'><pre>    match v {</pre></td></tr><tr><td class='line-number'><a name='L344' href='#L344'><pre>344</pre></a></td><td class='covered-line'><pre>34</pre></td><td class='code'><pre>        Value::Int(i) =&gt; Ok(*i),</pre></td></tr><tr><td class='line-number'><a name='L345' href='#L345'><pre>345</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>        Value::Double(d) =&gt; Ok(*d as i64),</pre></td></tr><tr><td class='line-number'><a name='L346' href='#L346'><pre>346</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        _ =&gt; <span class='region red'>Err(EvalError::new(&quot;EVAL050&quot;, &quot;Int 変換に失敗&quot;, None))</span>,</pre></td></tr><tr><td class='line-number'><a name='L347' href='#L347'><pre>347</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L348' href='#L348'><pre>348</pre></a></td><td class='covered-line'><pre>38</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L349' href='#L349'><pre>349</pre></a></td><td class='covered-line'><pre>18</pre></td><td class='code'><pre>fn to_double(v: &amp;Value) -&gt; Result&lt;f64, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L350' href='#L350'><pre>350</pre></a></td><td class='covered-line'><pre>18</pre></td><td class='code'><pre>    match v {</pre></td></tr><tr><td class='line-number'><a name='L351' href='#L351'><pre>351</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>        Value::Double(d) =&gt; Ok(*d),</pre></td></tr><tr><td class='line-number'><a name='L352' href='#L352'><pre>352</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>        Value::Int(i) =&gt; Ok(*i as f64),</pre></td></tr><tr><td class='line-number'><a name='L353' href='#L353'><pre>353</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        _ =&gt; <span class='region red'>Err(EvalError::new(&quot;EVAL050&quot;, &quot;Double 変換に失敗&quot;, None))</span>,</pre></td></tr><tr><td class='line-number'><a name='L354' href='#L354'><pre>354</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L355' href='#L355'><pre>355</pre></a></td><td class='covered-line'><pre>18</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L356' href='#L356'><pre>356</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L357' href='#L357'><pre>357</pre></a></td><td class='covered-line'><pre>277</pre></td><td class='code'><pre>pub fn eval_expr(e: &amp;A::Expr, env: &amp;mut Env) -&gt; Result&lt;Value, EvalError&gt; {</pre></td></tr><tr><td class='line-number'><a name='L358' href='#L358'><pre>358</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    use A::Expr::*;</pre></td></tr><tr><td class='line-number'><a name='L359' href='#L359'><pre>359</pre></a></td><td class='covered-line'><pre>277</pre></td><td class='code'><pre>    match e {</pre></td></tr><tr><td class='line-number'><a name='L360' href='#L360'><pre>360</pre></a></td><td class='covered-line'><pre>80</pre></td><td class='code'><pre>        Var { name } =&gt; env</pre></td></tr><tr><td class='line-number'><a name='L361' href='#L361'><pre>361</pre></a></td><td class='covered-line'><pre>80</pre></td><td class='code'><pre>            .get(name)</pre></td></tr><tr><td class='line-number'><a name='L362' href='#L362'><pre>362</pre></a></td><td class='covered-line'><pre>80</pre></td><td class='code'><pre>            .cloned()</pre></td></tr><tr><td class='line-number'><a name='L363' href='#L363'><pre>363</pre></a></td><td class='covered-line'><pre>80</pre></td><td class='code'><pre>            .ok_or_else(|| <div class='tooltip'>EvalError::new<span class='tooltip-content'>1</span></div>(&quot;EVAL010&quot;, <div class='tooltip'>format!<span class='tooltip-content'>1</span></div>(<div class='tooltip'>&quot;未束縛変数: {name}&quot;<span class='tooltip-content'>1</span></div>), <div class='tooltip'>None<span class='tooltip-content'>1</span></div>)),</pre></td></tr><tr><td class='line-number'><a name='L364' href='#L364'><pre>364</pre></a></td><td class='covered-line'><pre>80</pre></td><td class='code'><pre>        IntLit { value, .. } =&gt; Ok(Value::Int(*value)),</pre></td></tr><tr><td class='line-number'><a name='L365' href='#L365'><pre>365</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>        FloatLit { value } =&gt; Ok(Value::Double(*value)),</pre></td></tr><tr><td class='line-number'><a name='L366' href='#L366'><pre>366</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        CharLit { value } =&gt; Ok(Value::Char(*value)),</pre></td></tr><tr><td class='line-number'><a name='L367' href='#L367'><pre>367</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        StringLit { value } =&gt; Ok(Value::String(value.clone())),</pre></td></tr><tr><td class='line-number'><a name='L368' href='#L368'><pre>368</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        BoolLit { value } =&gt; Ok(Value::Bool(*value)),</pre></td></tr><tr><td class='line-number'><a name='L369' href='#L369'><pre>369</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>        ListLit { items } =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L370' href='#L370'><pre>370</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>            let mut vs = Vec::new();</pre></td></tr><tr><td class='line-number'><a name='L371' href='#L371'><pre>371</pre></a></td><td class='covered-line'><pre>30</pre></td><td class='code'><pre>            for <div class='tooltip'>it<span class='tooltip-content'>22</span></div> in items {</pre></td></tr><tr><td class='line-number'><a name='L372' href='#L372'><pre>372</pre></a></td><td class='covered-line'><pre>22</pre></td><td class='code'><pre>                vs.push(eval_expr(it, env)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>);</pre></td></tr><tr><td class='line-number'><a name='L373' href='#L373'><pre>373</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L374' href='#L374'><pre>374</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>            Ok(Value::List(vs))</pre></td></tr><tr><td class='line-number'><a name='L375' href='#L375'><pre>375</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L376' href='#L376'><pre>376</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>        TupleLit { items } =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L377' href='#L377'><pre>377</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>            let mut vs = Vec::new();</pre></td></tr><tr><td class='line-number'><a name='L378' href='#L378'><pre>378</pre></a></td><td class='covered-line'><pre>19</pre></td><td class='code'><pre>            for <div class='tooltip'>it<span class='tooltip-content'>13</span></div> in items {</pre></td></tr><tr><td class='line-number'><a name='L379' href='#L379'><pre>379</pre></a></td><td class='covered-line'><pre>13</pre></td><td class='code'><pre>                vs.push(eval_expr(it, env)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>);</pre></td></tr><tr><td class='line-number'><a name='L380' href='#L380'><pre>380</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L381' href='#L381'><pre>381</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>            Ok(Value::Tuple(vs))</pre></td></tr><tr><td class='line-number'><a name='L382' href='#L382'><pre>382</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L383' href='#L383'><pre>383</pre></a></td><td class='covered-line'><pre>24</pre></td><td class='code'><pre>        Lambda { params, body } =&gt; Ok(Value::Closure {</pre></td></tr><tr><td class='line-number'><a name='L384' href='#L384'><pre>384</pre></a></td><td class='covered-line'><pre>24</pre></td><td class='code'><pre>            params: params.clone(),</pre></td></tr><tr><td class='line-number'><a name='L385' href='#L385'><pre>385</pre></a></td><td class='covered-line'><pre>24</pre></td><td class='code'><pre>            body: body.clone(),</pre></td></tr><tr><td class='line-number'><a name='L386' href='#L386'><pre>386</pre></a></td><td class='covered-line'><pre>24</pre></td><td class='code'><pre>            env: env.clone(),</pre></td></tr><tr><td class='line-number'><a name='L387' href='#L387'><pre>387</pre></a></td><td class='covered-line'><pre>24</pre></td><td class='code'><pre>        }),</pre></td></tr><tr><td class='line-number'><a name='L388' href='#L388'><pre>388</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        LetIn { bindings, body } =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L389' href='#L389'><pre>389</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            let mut env2 = env.clone();</pre></td></tr><tr><td class='line-number'><a name='L390' href='#L390'><pre>390</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>            for (<div class='tooltip'>name<span class='tooltip-content'>4</span></div>, <div class='tooltip'>params<span class='tooltip-content'>4</span></div>, <div class='tooltip'>rhs<span class='tooltip-content'>4</span></div>) in bindings {</pre></td></tr><tr><td class='line-number'><a name='L391' href='#L391'><pre>391</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                let val = if params.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L392' href='#L392'><pre>392</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    eval_expr(rhs, &amp;mut env2)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div></pre></td></tr><tr><td class='line-number'><a name='L393' href='#L393'><pre>393</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                } else {</pre></td></tr><tr><td class='line-number'><a name='L394' href='#L394'><pre>394</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    Value::Closure {</pre></td></tr><tr><td class='line-number'><a name='L395' href='#L395'><pre>395</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        params: params.clone(),</pre></td></tr><tr><td class='line-number'><a name='L396' href='#L396'><pre>396</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        body: Box::new(rhs.clone()),</pre></td></tr><tr><td class='line-number'><a name='L397' href='#L397'><pre>397</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        env: env2.clone(),</pre></td></tr><tr><td class='line-number'><a name='L398' href='#L398'><pre>398</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L399' href='#L399'><pre>399</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                };</pre></td></tr><tr><td class='line-number'><a name='L400' href='#L400'><pre>400</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                env2.insert(name.clone(), val);</pre></td></tr><tr><td class='line-number'><a name='L401' href='#L401'><pre>401</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L402' href='#L402'><pre>402</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            eval_expr(body, &amp;mut env2)</pre></td></tr><tr><td class='line-number'><a name='L403' href='#L403'><pre>403</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L404' href='#L404'><pre>404</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        If {</pre></td></tr><tr><td class='line-number'><a name='L405' href='#L405'><pre>405</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            cond,</pre></td></tr><tr><td class='line-number'><a name='L406' href='#L406'><pre>406</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            then_branch,</pre></td></tr><tr><td class='line-number'><a name='L407' href='#L407'><pre>407</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            else_branch,</pre></td></tr><tr><td class='line-number'><a name='L408' href='#L408'><pre>408</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        } =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L409' href='#L409'><pre>409</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            let c = eval_expr(cond, env)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L410' href='#L410'><pre>410</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            if let Value::Bool(b) = c {</pre></td></tr><tr><td class='line-number'><a name='L411' href='#L411'><pre>411</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                if b {</pre></td></tr><tr><td class='line-number'><a name='L412' href='#L412'><pre>412</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    eval_expr(then_branch, env)</pre></td></tr><tr><td class='line-number'><a name='L413' href='#L413'><pre>413</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                } else {</pre></td></tr><tr><td class='line-number'><a name='L414' href='#L414'><pre>414</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>eval_expr</span>(<span class='region red'>else_branch</span>, <span class='region red'>env</span>)</pre></td></tr><tr><td class='line-number'><a name='L415' href='#L415'><pre>415</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L416' href='#L416'><pre>416</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            } else {</pre></td></tr><tr><td class='line-number'><a name='L417' href='#L417'><pre>417</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>Err(EvalError::new(</span></pre></td></tr><tr><td class='line-number'><a name='L418' href='#L418'><pre>418</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    &quot;EVAL050&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L419' href='#L419'><pre>419</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    &quot;if 条件は Bool である必要があります&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L420' href='#L420'><pre>420</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    None,</span></pre></td></tr><tr><td class='line-number'><a name='L421' href='#L421'><pre>421</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                ))</span></pre></td></tr><tr><td class='line-number'><a name='L422' href='#L422'><pre>422</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L423' href='#L423'><pre>423</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L424' href='#L424'><pre>424</pre></a></td><td class='covered-line'><pre>15</pre></td><td class='code'><pre>        App { func, arg } =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L425' href='#L425'><pre>425</pre></a></td><td class='covered-line'><pre>15</pre></td><td class='code'><pre>            let f = eval_expr(func, env)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L426' href='#L426'><pre>426</pre></a></td><td class='covered-line'><pre>15</pre></td><td class='code'><pre>            let x = eval_expr(arg, env)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L427' href='#L427'><pre>427</pre></a></td><td class='covered-line'><pre>15</pre></td><td class='code'><pre>            apply(&amp;f, x)</pre></td></tr><tr><td class='line-number'><a name='L428' href='#L428'><pre>428</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L429' href='#L429'><pre>429</pre></a></td><td class='covered-line'><pre>44</pre></td><td class='code'><pre>        BinOp { op, left, right } =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L430' href='#L430'><pre>430</pre></a></td><td class='covered-line'><pre>44</pre></td><td class='code'><pre>            let f = eval_expr(&amp;A::Expr::Var { name: op.clone() }, env)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L431' href='#L431'><pre>431</pre></a></td><td class='covered-line'><pre>44</pre></td><td class='code'><pre>            let l = eval_expr(left, env)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L432' href='#L432'><pre>432</pre></a></td><td class='covered-line'><pre>44</pre></td><td class='code'><pre>            let r = eval_expr(right, env)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L433' href='#L433'><pre>433</pre></a></td><td class='covered-line'><pre>44</pre></td><td class='code'><pre>            let tmp = apply(&amp;f, l)<div class='tooltip'><span class='region red'>?</span><span class='tooltip-content'>0</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L434' href='#L434'><pre>434</pre></a></td><td class='covered-line'><pre>44</pre></td><td class='code'><pre>            apply(&amp;tmp, r)</pre></td></tr><tr><td class='line-number'><a name='L435' href='#L435'><pre>435</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L436' href='#L436'><pre>436</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        Annot { expr, .. } =&gt; eval_expr(expr, env),</pre></td></tr><tr><td class='line-number'><a name='L437' href='#L437'><pre>437</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L438' href='#L438'><pre>438</pre></a></td><td class='covered-line'><pre>277</pre></td><td class='code'><pre>}</pre></td></tr></table></div></body></html>
target/miri/x86_64-unknown-linux-gnu/debug/deps/errors_display-0e9e40ea1fc2da97:1:{"RunWith":{"args":["--crate-name","errors_display","--edition=2021","tests/errors_display.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=0125cd189e98b8fb","-C","extra-filename=-0e9e40ea1fc2da97","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[101,114,114,111,114,115,95,100,105,115,112,108,97,121]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/llvm-cov/html/index.html:1:<!doctype html><html><head><meta name='viewport' content='width=device-width,initial-scale=1'><meta charset='UTF-8'><link rel='stylesheet' type='text/css' href='style.css'><script src='control.js'></script></head><body><h2>Coverage Report</h2><h4>Created: 2025-09-17 18:09</h4><p>Click <a href='http://clang.llvm.org/docs/SourceBasedCodeCoverage.html#interpreting-reports'>here</a> for information about interpreting this report.</p><div class='centered'><table><tr><td class='column-entry-bold'>Filename</td><td class='column-entry-bold'>Function Coverage</td><td class='column-entry-bold'>Line Coverage</td><td class='column-entry-bold'>Region Coverage</td><td class='column-entry-bold'>Branch Coverage</td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/ast.rs.html'>ast.rs</a></pre></td><td class='column-entry-red'><pre>  33.33% (1/3)</pre></td><td class='column-entry-red'><pre>  47.06% (16/34)</pre></td><td class='column-entry-red'><pre>  42.99% (46/107)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/bin/typelang.rs.html'>bin/typelang.rs</a></pre></td><td class='column-entry-red'><pre>   0.00% (0/1)</pre></td><td class='column-entry-red'><pre>   0.00% (0/3)</pre></td><td class='column-entry-red'><pre>   0.00% (0/3)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/errors.rs.html'>errors.rs</a></pre></td><td class='column-entry-red'><pre>  66.67% (12/18)</pre></td><td class='column-entry-red'><pre>  65.62% (84/128)</pre></td><td class='column-entry-red'><pre>  70.20% (106/151)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/evaluator.rs.html'>evaluator.rs</a></pre></td><td class='column-entry-yellow'><pre>  84.38% (27/32)</pre></td><td class='column-entry-red'><pre>  79.33% (261/329)</pre></td><td class='column-entry-red'><pre>  79.76% (536/672)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/infer.rs.html'>infer.rs</a></pre></td><td class='column-entry-yellow'><pre>  84.21% (16/19)</pre></td><td class='column-entry-yellow'><pre>  94.50% (567/600)</pre></td><td class='column-entry-yellow'><pre>  93.23% (977/1048)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/lexer.rs.html'>lexer.rs</a></pre></td><td class='column-entry-green'><pre> 100.00% (12/12)</pre></td><td class='column-entry-yellow'><pre>  91.97% (653/710)</pre></td><td class='column-entry-yellow'><pre>  92.10% (851/924)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/parser.rs.html'>parser.rs</a></pre></td><td class='column-entry-yellow'><pre>  90.91% (30/33)</pre></td><td class='column-entry-yellow'><pre>  81.67% (361/442)</pre></td><td class='column-entry-red'><pre>  76.03% (590/776)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/repl/cmd.rs.html'>repl/cmd.rs</a></pre></td><td class='column-entry-red'><pre>  76.92% (30/39)</pre></td><td class='column-entry-red'><pre>  54.84% (323/589)</pre></td><td class='column-entry-red'><pre>  55.14% (547/992)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/repl/line_editor.rs.html'>repl/line_editor.rs</a></pre></td><td class='column-entry-red'><pre>  11.54% (3/26)</pre></td><td class='column-entry-red'><pre>   8.68% (23/265)</pre></td><td class='column-entry-red'><pre>   8.88% (38/428)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/repl/loader.rs.html'>repl/loader.rs</a></pre></td><td class='column-entry-red'><pre>  50.00% (2/4)</pre></td><td class='column-entry-red'><pre>  72.58% (45/62)</pre></td><td class='column-entry-red'><pre>  71.53% (98/137)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/repl/printer.rs.html'>repl/printer.rs</a></pre></td><td class='column-entry-red'><pre>  66.67% (2/3)</pre></td><td class='column-entry-red'><pre>  47.37% (18/38)</pre></td><td class='column-entry-red'><pre>  51.90% (41/79)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/repl/util.rs.html'>repl/util.rs</a></pre></td><td class='column-entry-green'><pre> 100.00% (6/6)</pre></td><td class='column-entry-yellow'><pre>  94.41% (135/143)</pre></td><td class='column-entry-yellow'><pre>  93.49% (158/169)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row'><td><pre><a href='coverage/home/hsin4/myproject/typelang-hm-rs/src/typesys.rs.html'>typesys.rs</a></pre></td><td class='column-entry-red'><pre>  74.51% (38/51)</pre></td><td class='column-entry-red'><pre>  74.60% (279/374)</pre></td><td class='column-entry-red'><pre>  73.27% (488/666)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr><tr class='light-row-bold'><td><pre>Totals</pre></td><td class='column-entry-red'><pre>  72.47% (179/247)</pre></td><td class='column-entry-red'><pre>  74.39% (2765/3717)</pre></td><td class='column-entry-red'><pre>  72.76% (4476/6152)</pre></td><td class='column-entry-gray'><pre>- (0/0)</pre></td></tr></table></div><h5>Generated by llvm-cov -- llvm version 20.1.7-rust-1.89.0-stable</h5></body></html>
target/debug/deps/typelang-6090dc406eed440f.d:1:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/typelang-6090dc406eed440f.d: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/debug/deps/typelang-6090dc406eed440f.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/libtypelang-6090dc406eed440f.rmeta: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/debug/deps/typelang-6090dc406eed440f.d:7:src/errors.rs:
target/miri/x86_64-unknown-linux-gnu/debug/deps/evaluator_more-e308e43a28fb70f4:1:{"RunWith":{"args":["--crate-name","evaluator_more","--edition=2021","tests/evaluator_more.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=420790e6eb5cefee","-C","extra-filename=-e308e43a28fb70f4","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[101,118,97,108,117,97,116,111,114,95,109,111,114,101]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/doc/static.files/noscript-32bb7600.css:1: #main-content .attributes{margin-left:0 !important;}#copy-path,#sidebar-button,.sidebar-resizer{display:none !important;}nav.sub{display:none;}.src .sidebar{display:none;}.notable-traits{display:none;}:root,:root:not([data-theme]){--main-background-color:white;--main-color:black;--settings-input-color:#2196f3;--settings-input-border-color:#717171;--settings-button-color:#000;--settings-button-border-focus:#717171;--sidebar-background-color:#f5f5f5;--sidebar-background-color-hover:#e0e0e0;--sidebar-border-color:#ddd;--code-block-background-color:#f5f5f5;--scrollbar-track-background-color:#dcdcdc;--scrollbar-thumb-background-color:rgba(36,37,39,0.6);--scrollbar-color:rgba(36,37,39,0.6) #d9d9d9;--headings-border-bottom-color:#ddd;--border-color:#e0e0e0;--button-background-color:#fff;--right-side-color:grey;--code-attribute-color:#999;--toggles-color:#999;--toggle-filter:none;--mobile-sidebar-menu-filter:none;--search-input-focused-border-color:#66afe9;--copy-path-button-color:#999;--copy-path-img-filter:invert(50%);--copy-path-img-hover-filter:invert(35%);--code-example-button-color:#7f7f7f;--code-example-button-hover-color:#595959;--settings-menu-filter:invert(50%);--settings-menu-hover-filter:invert(35%);--codeblock-error-hover-color:rgb(255,0,0);--codeblock-error-color:rgba(255,0,0,.5);--codeblock-ignore-hover-color:rgb(255,142,0);--codeblock-ignore-color:rgba(255,142,0,.6);--warning-border-color:#ff8e00;--type-link-color:#ad378a;--trait-link-color:#6e4fc9;--assoc-item-link-color:#3873ad;--function-link-color:#ad7c37;--macro-link-color:#068000;--keyword-link-color:#3873ad;--mod-link-color:#3873ad;--link-color:#3873ad;--sidebar-link-color:#356da4;--sidebar-current-link-background-color:#fff;--search-result-link-focus-background-color:#ccc;--search-result-border-color:#aaa3;--search-color:#000;--search-error-code-background-color:#d0cccc;--search-results-alias-color:#000;--search-results-grey-color:#999;--search-tab-title-count-color:#888;--search-tab-button-not-selected-border-top-color:#e6e6e6;--search-tab-button-not-selected-background:#e6e6e6;--search-tab-button-selected-border-top-color:#0089ff;--search-tab-button-selected-background:#fff;--stab-background-color:#fff5d6;--stab-code-color:#000;--code-highlight-kw-color:#8959a8;--code-highlight-kw-2-color:#4271ae;--code-highlight-lifetime-color:#b76514;--code-highlight-prelude-color:#4271ae;--code-highlight-prelude-val-color:#c82829;--code-highlight-number-color:#718c00;--code-highlight-string-color:#718c00;--code-highlight-literal-color:#c82829;--code-highlight-attribute-color:#c82829;--code-highlight-self-color:#c82829;--code-highlight-macro-color:#3e999f;--code-highlight-question-mark-color:#ff9011;--code-highlight-comment-color:#8e908c;--code-highlight-doc-comment-color:#4d4d4c;--src-line-numbers-span-color:#c67e2d;--src-line-number-highlighted-background-color:#fdffd3;--target-background-color:#fdffd3;--target-border-color:#ad7c37;--kbd-color:#000;--kbd-background:#fafbfc;--kbd-box-shadow-color:#c6cbd1;--rust-logo-filter:initial;--crate-search-div-filter:invert(100%) sepia(0%) saturate(4223%) hue-rotate(289deg) brightness(114%) contrast(76%);--crate-search-div-hover-filter:invert(44%) sepia(18%) saturate(23%) hue-rotate(317deg) brightness(96%) contrast(93%);--crate-search-hover-border:#717171;--src-sidebar-background-selected:#fff;--src-sidebar-background-hover:#e0e0e0;--table-alt-row-background-color:#f5f5f5;--codeblock-link-background:#eee;--scrape-example-toggle-line-background:#ccc;--scrape-example-toggle-line-hover-background:#999;--scrape-example-code-line-highlight:#fcffd6;--scrape-example-code-line-highlight-focus:#f6fdb0;--scrape-example-help-border-color:#555;--scrape-example-help-color:#333;--scrape-example-help-hover-border-color:#000;--scrape-example-help-hover-color:#000;--scrape-example-code-wrapper-background-start:rgba(255,255,255,1);--scrape-example-code-wrapper-background-end:rgba(255,255,255,0);--sidebar-resizer-hover:hsl(207,90%,66%);--sidebar-resizer-active:hsl(207,90%,54%);}@media (prefers-color-scheme:dark){:root,:root:not([data-theme]){--main-background-color:#353535;--main-color:#ddd;--settings-input-color:#2196f3;--settings-input-border-color:#999;--settings-button-color:#000;--settings-button-border-focus:#ffb900;--sidebar-background-color:#505050;--sidebar-background-color-hover:#676767;--sidebar-border-color:#2A2A2A;--code-block-background-color:#2A2A2A;--scrollbar-track-background-color:#717171;--scrollbar-thumb-background-color:rgba(32,34,37,.6);--scrollbar-color:rgba(32,34,37,.6) #5a5a5a;--headings-border-bottom-color:#d2d2d2;--border-color:#e0e0e0;--button-background-color:#f0f0f0;--right-side-color:grey;--code-attribute-color:#999;--toggles-color:#999;--toggle-filter:invert(100%);--mobile-sidebar-menu-filter:invert(100%);--search-input-focused-border-color:#008dfd;--copy-path-button-color:#999;--copy-path-img-filter:invert(50%);--copy-path-img-hover-filter:invert(65%);--code-example-button-color:#7f7f7f;--code-example-button-hover-color:#a5a5a5;--codeblock-error-hover-color:rgb(255,0,0);--codeblock-error-color:rgba(255,0,0,.5);--codeblock-ignore-hover-color:rgb(255,142,0);--codeblock-ignore-color:rgba(255,142,0,.6);--warning-border-color:#ff8e00;--type-link-color:#2dbfb8;--trait-link-color:#b78cf2;--assoc-item-link-color:#d2991d;--function-link-color:#2bab63;--macro-link-color:#09bd00;--keyword-link-color:#d2991d;--mod-link-color:#d2991d;--link-color:#d2991d;--sidebar-link-color:#fdbf35;--sidebar-current-link-background-color:#444;--search-result-link-focus-background-color:#616161;--search-result-border-color:#aaa3;--search-color:#111;--search-error-code-background-color:#484848;--search-results-alias-color:#fff;--search-results-grey-color:#ccc;--search-tab-title-count-color:#888;--search-tab-button-not-selected-border-top-color:#252525;--search-tab-button-not-selected-background:#252525;--search-tab-button-selected-border-top-color:#0089ff;--search-tab-button-selected-background:#353535;--settings-menu-filter:invert(50%);--settings-menu-hover-filter:invert(65%);--stab-background-color:#314559;--stab-code-color:#e6e1cf;--code-highlight-kw-color:#ab8ac1;--code-highlight-kw-2-color:#769acb;--code-highlight-lifetime-color:#d97f26;--code-highlight-prelude-color:#769acb;--code-highlight-prelude-val-color:#ee6868;--code-highlight-number-color:#83a300;--code-highlight-string-color:#83a300;--code-highlight-literal-color:#ee6868;--code-highlight-attribute-color:#ee6868;--code-highlight-self-color:#ee6868;--code-highlight-macro-color:#3e999f;--code-highlight-question-mark-color:#ff9011;--code-highlight-comment-color:#8d8d8b;--code-highlight-doc-comment-color:#8ca375;--src-line-numbers-span-color:#3b91e2;--src-line-number-highlighted-background-color:#0a042f;--target-background-color:#494a3d;--target-border-color:#bb7410;--kbd-color:#000;--kbd-background:#fafbfc;--kbd-box-shadow-color:#c6cbd1;--rust-logo-filter:drop-shadow(1px 0 0px #fff) drop-shadow(0 1px 0 #fff) drop-shadow(-1px 0 0 #fff) drop-shadow(0 -1px 0 #fff);--crate-search-div-filter:invert(94%) sepia(0%) saturate(721%) hue-rotate(255deg) brightness(90%) contrast(90%);--crate-search-div-hover-filter:invert(69%) sepia(60%) saturate(6613%) hue-rotate(184deg) brightness(100%) contrast(91%);--crate-search-hover-border:#2196f3;--src-sidebar-background-selected:#333;--src-sidebar-background-hover:#444;--table-alt-row-background-color:#2a2a2a;--codeblock-link-background:#333;--scrape-example-toggle-line-background:#999;--scrape-example-toggle-line-hover-background:#c5c5c5;--scrape-example-code-line-highlight:#5b3b01;--scrape-example-code-line-highlight-focus:#7c4b0f;--scrape-example-help-border-color:#aaa;--scrape-example-help-color:#eee;--scrape-example-help-hover-border-color:#fff;--scrape-example-help-hover-color:#fff;--scrape-example-code-wrapper-background-start:rgba(53,53,53,1);--scrape-example-code-wrapper-background-end:rgba(53,53,53,0);--sidebar-resizer-hover:hsl(207,30%,54%);--sidebar-resizer-active:hsl(207,90%,54%);}}
target/debug/deps/errors_display-cfbbb5a39acae0fa.d:1:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/errors_display-cfbbb5a39acae0fa.d: tests/errors_display.rs Cargo.toml
target/debug/deps/errors_display-cfbbb5a39acae0fa.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/liberrors_display-cfbbb5a39acae0fa.rmeta: tests/errors_display.rs Cargo.toml
target/debug/deps/errors_display-cfbbb5a39acae0fa.d:5:tests/errors_display.rs:
target/miri/x86_64-unknown-linux-gnu/debug/deps/parser_more-8b8519db3658ab86:1:{"RunWith":{"args":["--crate-name","parser_more","--edition=2021","tests/parser_more.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=502b3caf66daf0f7","-C","extra-filename=-8b8519db3658ab86","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[112,97,114,115,101,114,95,109,111,114,101]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/miri/x86_64-unknown-linux-gnu/debug/deps/unit_suite-66d4908125057e5d:1:{"RunWith":{"args":["--crate-name","unit_suite","--edition=2021","tests/unit_suite.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=b10d324ad5f0da65","-C","extra-filename=-66d4908125057e5d","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[117,110,105,116,95,115,117,105,116,101]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/llvm-cov/html/coverage/home/hsin4/myproject/typelang-hm-rs/src/repl/cmd.rs.html:1:<!doctype html><html><head><meta name='viewport' content='width=device-width,initial-scale=1'><meta charset='UTF-8'><link rel='stylesheet' type='text/css' href='../../../../../../../style.css'><script src='../../../../../../../control.js'></script></head><body><h2>Coverage Report</h2><h4>Created: 2025-09-17 18:09</h4><span class='control'><a href='javascript:next_line()'>next uncovered line (L)</a>, <a href='javascript:next_region()'>next uncovered region (R)</a>, <a href='javascript:next_branch()'>next uncovered branch (B)</a></span><div class='centered'><table><div class='source-name-title'><pre>/home/hsin4/myproject/typelang-hm-rs/src/repl/cmd.rs</pre></div><tr><td><pre>Line</pre></td><td><pre>Count</pre></td><td><pre>Source</pre></td></tr><tr><td class='line-number'><a name='L1' href='#L1'><pre>1</pre></a></td><td class='skipped-line'></td><td class='code'><pre>//! REPL のコマンドとメインループ</pre></td></tr><tr><td class='line-number'><a name='L2' href='#L2'><pre>2</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L3' href='#L3'><pre>3</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use crate::ast as A;</pre></td></tr><tr><td class='line-number'><a name='L4' href='#L4'><pre>4</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use crate::evaluator::{eval_expr, initial_env as value_env_init, Value};</pre></td></tr><tr><td class='line-number'><a name='L5' href='#L5'><pre>5</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use crate::infer::{infer_expr, initial_class_env, initial_env as type_env_init, InferState};</pre></td></tr><tr><td class='line-number'><a name='L6' href='#L6'><pre>6</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use crate::parser::{parse_expr, parse_program};</pre></td></tr><tr><td class='line-number'><a name='L7' href='#L7'><pre>7</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use crate::typesys::{</pre></td></tr><tr><td class='line-number'><a name='L8' href='#L8'><pre>8</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    apply_defaulting_simple, apply_subst_q, generalize, pretty_qual, qualify, TCon, TVarSupply,</pre></td></tr><tr><td class='line-number'><a name='L9' href='#L9'><pre>9</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Type,</pre></td></tr><tr><td class='line-number'><a name='L10' href='#L10'><pre>10</pre></a></td><td class='skipped-line'></td><td class='code'><pre>};</pre></td></tr><tr><td class='line-number'><a name='L11' href='#L11'><pre>11</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L12' href='#L12'><pre>12</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use super::line_editor::{LineEditor, ReadResult};</pre></td></tr><tr><td class='line-number'><a name='L13' href='#L13'><pre>13</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use super::loader::load_program_into_env;</pre></td></tr><tr><td class='line-number'><a name='L14' href='#L14'><pre>14</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use super::printer::{print_help, print_value};</pre></td></tr><tr><td class='line-number'><a name='L15' href='#L15'><pre>15</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use super::util::normalize_expr;</pre></td></tr><tr><td class='line-number'><a name='L16' href='#L16'><pre>16</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L17' href='#L17'><pre>17</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// 対話環境を起動する。</pre></td></tr><tr><td class='line-number'><a name='L18' href='#L18'><pre>18</pre></a></td><td class='skipped-line'></td><td class='code'><pre>///</pre></td></tr><tr><td class='line-number'><a name='L19' href='#L19'><pre>19</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// # Examples</pre></td></tr><tr><td class='line-number'><a name='L20' href='#L20'><pre>20</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// ```no_run</pre></td></tr><tr><td class='line-number'><a name='L21' href='#L21'><pre>21</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// fn main() {</pre></td></tr><tr><td class='line-number'><a name='L22' href='#L22'><pre>22</pre></a></td><td class='skipped-line'></td><td class='code'><pre>///     // 実行例: `cargo run --bin typelang-repl`</pre></td></tr><tr><td class='line-number'><a name='L23' href='#L23'><pre>23</pre></a></td><td class='skipped-line'></td><td class='code'><pre>///     // REPL 内で `:help` を入力するとコマンド一覧が表示されます。</pre></td></tr><tr><td class='line-number'><a name='L24' href='#L24'><pre>24</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// }</pre></td></tr><tr><td class='line-number'><a name='L25' href='#L25'><pre>25</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// ```</pre></td></tr><tr><td class='line-number'><a name='L26' href='#L26'><pre>26</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>pub fn run_repl()</span> {</pre></td></tr><tr><td class='line-number'><a name='L27' href='#L27'><pre>27</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>println!</span>(<span class='region red'>&quot;TypeLang REPL (Rust) :: :t EXPR で型 :: :help でヘルプ&quot;</span>);</pre></td></tr><tr><td class='line-number'><a name='L28' href='#L28'><pre>28</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut type_env</span> = <span class='region red'>type_env_init</span>();</pre></td></tr><tr><td class='line-number'><a name='L29' href='#L29'><pre>29</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>class_env</span> = <span class='region red'>initial_class_env</span>();</pre></td></tr><tr><td class='line-number'><a name='L30' href='#L30'><pre>30</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut value_env</span> = <span class='region red'>value_env_init</span>();</pre></td></tr><tr><td class='line-number'><a name='L31' href='#L31'><pre>31</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut last_loaded_paths</span>: <span class='region red'>Vec&lt;String&gt;</span> = <span class='region red'>Vec::new</span>();</pre></td></tr><tr><td class='line-number'><a name='L32' href='#L32'><pre>32</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L33' href='#L33'><pre>33</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut editor</span> = <span class='region red'>LineEditor::new</span>();</pre></td></tr><tr><td class='line-number'><a name='L34' href='#L34'><pre>34</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut buffer</span> = <span class='region red'>String::new</span>();</pre></td></tr><tr><td class='line-number'><a name='L35' href='#L35'><pre>35</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut defaulting_on</span> = <span class='region red'>false</span>;</pre></td></tr><tr><td class='line-number'><a name='L36' href='#L36'><pre>36</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    &apos;repl: loop {</pre></td></tr><tr><td class='line-number'><a name='L37' href='#L37'><pre>37</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>buffer</span>.<span class='region red'>clear</span>();</pre></td></tr><tr><td class='line-number'><a name='L38' href='#L38'><pre>38</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut prompt</span> = <span class='region red'>&quot;&gt; &quot;</span>;</pre></td></tr><tr><td class='line-number'><a name='L39' href='#L39'><pre>39</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut first_line</span> = <span class='region red'>true</span>;</pre></td></tr><tr><td class='line-number'><a name='L40' href='#L40'><pre>40</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>input</span> = loop {</pre></td></tr><tr><td class='line-number'><a name='L41' href='#L41'><pre>41</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            match <span class='region red'>editor</span>.<span class='region red'>read_line</span>(<span class='region red'>prompt</span>) {</pre></td></tr><tr><td class='line-number'><a name='L42' href='#L42'><pre>42</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Ok(ReadResult::Line(<span class='region red'>line</span>)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L43' href='#L43'><pre>43</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>buffer</span>.<span class='region red'>push_str</span>(<span class='region red'>&amp;line</span>);</pre></td></tr><tr><td class='line-number'><a name='L44' href='#L44'><pre>44</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>buffer</span>.<span class='region red'>push</span>(&apos;\n&apos;);</pre></td></tr><tr><td class='line-number'><a name='L45' href='#L45'><pre>45</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    if <span class='region red'>needs_more_input</span>(<span class='region red'>&amp;buffer</span>) {</pre></td></tr><tr><td class='line-number'><a name='L46' href='#L46'><pre>46</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>prompt = &quot;.. &quot;</span>;</pre></td></tr><tr><td class='line-number'><a name='L47' href='#L47'><pre>47</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>first_line = false</span>;</pre></td></tr><tr><td class='line-number'><a name='L48' href='#L48'><pre>48</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>continue</span>;</pre></td></tr><tr><td class='line-number'><a name='L49' href='#L49'><pre>49</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L50' href='#L50'><pre>50</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    break <span class='region red'>buffer.trim()</span>.<span class='region red'>to_string</span>();</pre></td></tr><tr><td class='line-number'><a name='L51' href='#L51'><pre>51</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L52' href='#L52'><pre>52</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                Ok(ReadResult::Eof) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L53' href='#L53'><pre>53</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    if <span class='region red'>first_line</span> &amp;&amp; <span class='region red'>buffer.trim()</span>.<span class='region red'>is_empty</span>() {</pre></td></tr><tr><td class='line-number'><a name='L54' href='#L54'><pre>54</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>println!</span>();</pre></td></tr><tr><td class='line-number'><a name='L55' href='#L55'><pre>55</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>break &apos;repl</span>;</pre></td></tr><tr><td class='line-number'><a name='L56' href='#L56'><pre>56</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L57' href='#L57'><pre>57</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    break <span class='region red'>buffer.trim()</span>.<span class='region red'>to_string</span>();</pre></td></tr><tr><td class='line-number'><a name='L58' href='#L58'><pre>58</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L59' href='#L59'><pre>59</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                Ok(ReadResult::Interrupted) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L60' href='#L60'><pre>60</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>continue &apos;repl</span>;</pre></td></tr><tr><td class='line-number'><a name='L61' href='#L61'><pre>61</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L62' href='#L62'><pre>62</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Err(<span class='region red'>err</span>) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L63' href='#L63'><pre>63</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>eprintln!</span>(<span class='region red'>&quot;入力エラー: {}&quot;</span>, err);</pre></td></tr><tr><td class='line-number'><a name='L64' href='#L64'><pre>64</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>break &apos;repl</span>;</pre></td></tr><tr><td class='line-number'><a name='L65' href='#L65'><pre>65</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L66' href='#L66'><pre>66</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L67' href='#L67'><pre>67</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        };</pre></td></tr><tr><td class='line-number'><a name='L68' href='#L68'><pre>68</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L69' href='#L69'><pre>69</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>input</span> = <span class='region red'>input.trim()</span>;</pre></td></tr><tr><td class='line-number'><a name='L70' href='#L70'><pre>70</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        if <span class='region red'>input</span>.<span class='region red'>is_empty</span>() {</pre></td></tr><tr><td class='line-number'><a name='L71' href='#L71'><pre>71</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>continue</span>;</pre></td></tr><tr><td class='line-number'><a name='L72' href='#L72'><pre>72</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L73' href='#L73'><pre>73</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L74' href='#L74'><pre>74</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>editor</span>.<span class='region red'>add_history</span>(<span class='region red'>input</span>);</pre></td></tr><tr><td class='line-number'><a name='L75' href='#L75'><pre>75</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L76' href='#L76'><pre>76</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 新しい純関数パス: コマンド解釈 → 作用</pre></td></tr><tr><td class='line-number'><a name='L77' href='#L77'><pre>77</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        match <span class='region red'>parse_repl_command(input)</span> {</pre></td></tr><tr><td class='line-number'><a name='L78' href='#L78'><pre>78</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            ReplCommand::Help =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L79' href='#L79'><pre>79</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>print_help</span>();</pre></td></tr><tr><td class='line-number'><a name='L80' href='#L80'><pre>80</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>continue</span>;</pre></td></tr><tr><td class='line-number'><a name='L81' href='#L81'><pre>81</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L82' href='#L82'><pre>82</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            ReplCommand::Quit =&gt; <span class='region red'>break</span>,</pre></td></tr><tr><td class='line-number'><a name='L83' href='#L83'><pre>83</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>other</span> =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L84' href='#L84'><pre>84</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let <span class='region red'>mut state</span> = <span class='region red'>ReplState {</span></pre></td></tr><tr><td class='line-number'><a name='L85' href='#L85'><pre>85</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    </span><span class='region red'>type_env</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L86' href='#L86'><pre>86</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    class_env: </span><span class='region red'>class_env</span><span class='region red'>.</span><span class='region red'>clone</span><span class='region red'>(),</span></pre></td></tr><tr><td class='line-number'><a name='L87' href='#L87'><pre>87</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    </span><span class='region red'>value_env</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L88' href='#L88'><pre>88</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    last_loaded_paths: </span><span class='region red'>last_loaded_paths</span><span class='region red'>.clone(),</span></pre></td></tr><tr><td class='line-number'><a name='L89' href='#L89'><pre>89</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    defaulting_on,</span></pre></td></tr><tr><td class='line-number'><a name='L90' href='#L90'><pre>90</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                }</span>;</pre></td></tr><tr><td class='line-number'><a name='L91' href='#L91'><pre>91</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let <span class='region red'>fs</span> = <span class='region red'>FsIo</span>;</pre></td></tr><tr><td class='line-number'><a name='L92' href='#L92'><pre>92</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let <span class='region red'>msgs</span> = <span class='region red'>handle_command</span>(<span class='region red'>&amp;mut state</span>, <span class='region red'>other</span>, <span class='region red'>&amp;fs</span>);</pre></td></tr><tr><td class='line-number'><a name='L93' href='#L93'><pre>93</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                // コミット</pre></td></tr><tr><td class='line-number'><a name='L94' href='#L94'><pre>94</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>type_env</span> = <span class='region red'>state.type_env</span>;</pre></td></tr><tr><td class='line-number'><a name='L95' href='#L95'><pre>95</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>value_env</span> = <span class='region red'>state.value_env</span>;</pre></td></tr><tr><td class='line-number'><a name='L96' href='#L96'><pre>96</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>last_loaded_paths</span> = <span class='region red'>state.last_loaded_paths</span>;</pre></td></tr><tr><td class='line-number'><a name='L97' href='#L97'><pre>97</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>defaulting_on = state.defaulting_on</span>;</pre></td></tr><tr><td class='line-number'><a name='L98' href='#L98'><pre>98</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                for <span class='region red'>m</span> in <span class='region red'>msgs</span> {</pre></td></tr><tr><td class='line-number'><a name='L99' href='#L99'><pre>99</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    match <span class='region red'>m</span> {</pre></td></tr><tr><td class='line-number'><a name='L100' href='#L100'><pre>100</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        ReplMsg::Out(<span class='region red'>s</span>) =&gt; <span class='region red'>println!</span>(<span class='region red'>&quot;{}&quot;</span>, s),</pre></td></tr><tr><td class='line-number'><a name='L101' href='#L101'><pre>101</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        ReplMsg::Err(<span class='region red'>s</span>) =&gt; <span class='region red'>eprintln!</span>(<span class='region red'>&quot;{}&quot;</span>, s),</pre></td></tr><tr><td class='line-number'><a name='L102' href='#L102'><pre>102</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        ReplMsg::Value(<span class='region red'>v</span>) =&gt; <span class='region red'>print_value</span>(<span class='region red'>&amp;v</span>),</pre></td></tr><tr><td class='line-number'><a name='L103' href='#L103'><pre>103</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L104' href='#L104'><pre>104</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L105' href='#L105'><pre>105</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L106' href='#L106'><pre>106</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L107' href='#L107'><pre>107</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L108' href='#L108'><pre>108</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L109' href='#L109'><pre>109</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    if let Err(<span class='region red'>err</span>) = <span class='region red'>editor.save_history()</span> <span class='region red'>{</span></pre></td></tr><tr><td class='line-number'><a name='L110' href='#L110'><pre>110</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        eprintln!(&quot;ヒストリーの保存に失敗しました: {}&quot;, err);</span></pre></td></tr><tr><td class='line-number'><a name='L111' href='#L111'><pre>111</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    </span><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L112' href='#L112'><pre>112</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L113' href='#L113'><pre>113</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L114' href='#L114'><pre>114</pre></a></td><td class='skipped-line'></td><td class='code'><pre>// 未閉括弧などの簡易判定（多行入力継続）</pre></td></tr><tr><td class='line-number'><a name='L115' href='#L115'><pre>115</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>fn needs_more_input(src: &amp;str) -&gt; bool {</pre></td></tr><tr><td class='line-number'><a name='L116' href='#L116'><pre>116</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    // コマンドは多行にしない</pre></td></tr><tr><td class='line-number'><a name='L117' href='#L117'><pre>117</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>    let s = src.trim_start();</pre></td></tr><tr><td class='line-number'><a name='L118' href='#L118'><pre>118</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>    if s.starts_with(&apos;:&apos;) {</pre></td></tr><tr><td class='line-number'><a name='L119' href='#L119'><pre>119</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        return false;</pre></td></tr><tr><td class='line-number'><a name='L120' href='#L120'><pre>120</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L121' href='#L121'><pre>121</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>    let mut paren = 0i32;</pre></td></tr><tr><td class='line-number'><a name='L122' href='#L122'><pre>122</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>    let mut bracket = 0i32;</pre></td></tr><tr><td class='line-number'><a name='L123' href='#L123'><pre>123</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>    let mut in_str = false;</pre></td></tr><tr><td class='line-number'><a name='L124' href='#L124'><pre>124</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>    let mut in_chr = false;</pre></td></tr><tr><td class='line-number'><a name='L125' href='#L125'><pre>125</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>    let mut esc = false;</pre></td></tr><tr><td class='line-number'><a name='L126' href='#L126'><pre>126</pre></a></td><td class='covered-line'><pre>48</pre></td><td class='code'><pre>    for ch in <div class='tooltip'>src<span class='tooltip-content'>10</span></div>.<div class='tooltip'>chars<span class='tooltip-content'>10</span></div>() {</pre></td></tr><tr><td class='line-number'><a name='L127' href='#L127'><pre>127</pre></a></td><td class='covered-line'><pre>48</pre></td><td class='code'><pre>        if in_str {</pre></td></tr><tr><td class='line-number'><a name='L128' href='#L128'><pre>128</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>            if esc {</pre></td></tr><tr><td class='line-number'><a name='L129' href='#L129'><pre>129</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                esc = false;</pre></td></tr><tr><td class='line-number'><a name='L130' href='#L130'><pre>130</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L131' href='#L131'><pre>131</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L132' href='#L132'><pre>132</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>            match ch {</pre></td></tr><tr><td class='line-number'><a name='L133' href='#L133'><pre>133</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                &apos;\\&apos; =&gt; esc = true,</pre></td></tr><tr><td class='line-number'><a name='L134' href='#L134'><pre>134</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                &apos;&quot;&apos; =&gt; in_str = false,</pre></td></tr><tr><td class='line-number'><a name='L135' href='#L135'><pre>135</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>                _ =&gt; {}</pre></td></tr><tr><td class='line-number'><a name='L136' href='#L136'><pre>136</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L137' href='#L137'><pre>137</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>            continue;</pre></td></tr><tr><td class='line-number'><a name='L138' href='#L138'><pre>138</pre></a></td><td class='covered-line'><pre>36</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L139' href='#L139'><pre>139</pre></a></td><td class='covered-line'><pre>36</pre></td><td class='code'><pre>        if in_chr {</pre></td></tr><tr><td class='line-number'><a name='L140' href='#L140'><pre>140</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>            if esc {</pre></td></tr><tr><td class='line-number'><a name='L141' href='#L141'><pre>141</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                esc = false;</pre></td></tr><tr><td class='line-number'><a name='L142' href='#L142'><pre>142</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                continue;</pre></td></tr><tr><td class='line-number'><a name='L143' href='#L143'><pre>143</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L144' href='#L144'><pre>144</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>            match ch {</pre></td></tr><tr><td class='line-number'><a name='L145' href='#L145'><pre>145</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                &apos;\\&apos; =&gt; esc = true,</pre></td></tr><tr><td class='line-number'><a name='L146' href='#L146'><pre>146</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                &apos;\&apos;&apos; =&gt; in_chr = false,</pre></td></tr><tr><td class='line-number'><a name='L147' href='#L147'><pre>147</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                _ =&gt; {}</pre></td></tr><tr><td class='line-number'><a name='L148' href='#L148'><pre>148</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L149' href='#L149'><pre>149</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>            continue;</pre></td></tr><tr><td class='line-number'><a name='L150' href='#L150'><pre>150</pre></a></td><td class='covered-line'><pre>30</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L151' href='#L151'><pre>151</pre></a></td><td class='covered-line'><pre>30</pre></td><td class='code'><pre>        match ch {</pre></td></tr><tr><td class='line-number'><a name='L152' href='#L152'><pre>152</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            &apos;(&apos; =&gt; paren += 1,</pre></td></tr><tr><td class='line-number'><a name='L153' href='#L153'><pre>153</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            &apos;)&apos; =&gt; paren -= 1,</pre></td></tr><tr><td class='line-number'><a name='L154' href='#L154'><pre>154</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            &apos;[&apos; =&gt; bracket += 1,</pre></td></tr><tr><td class='line-number'><a name='L155' href='#L155'><pre>155</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            &apos;]&apos; =&gt; bracket -= 1,</pre></td></tr><tr><td class='line-number'><a name='L156' href='#L156'><pre>156</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            &apos;&quot;&apos; =&gt; in_str = true,</pre></td></tr><tr><td class='line-number'><a name='L157' href='#L157'><pre>157</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            &apos;\&apos;&apos; =&gt; in_chr = true,</pre></td></tr><tr><td class='line-number'><a name='L158' href='#L158'><pre>158</pre></a></td><td class='covered-line'><pre>18</pre></td><td class='code'><pre>            _ =&gt; {}</pre></td></tr><tr><td class='line-number'><a name='L159' href='#L159'><pre>159</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L160' href='#L160'><pre>160</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L161' href='#L161'><pre>161</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>    paren &gt; 0 || <div class='tooltip'>bracket &gt; 0<span class='tooltip-content'>9</span></div> || <div class='tooltip'>in_str<span class='tooltip-content'>8</span></div> || <div class='tooltip'>in_chr<span class='tooltip-content'>7</span></div></pre></td></tr><tr><td class='line-number'><a name='L162' href='#L162'><pre>162</pre></a></td><td class='covered-line'><pre>12</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L163' href='#L163'><pre>163</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L164' href='#L164'><pre>164</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[derive(Clone)]</pre></td></tr><tr><td class='line-number'><a name='L165' href='#L165'><pre>165</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub(crate) struct ReplState {</pre></td></tr><tr><td class='line-number'><a name='L166' href='#L166'><pre>166</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub type_env: crate::typesys::TypeEnv,</pre></td></tr><tr><td class='line-number'><a name='L167' href='#L167'><pre>167</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub class_env: crate::typesys::ClassEnv,</pre></td></tr><tr><td class='line-number'><a name='L168' href='#L168'><pre>168</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub value_env: crate::evaluator::Env,</pre></td></tr><tr><td class='line-number'><a name='L169' href='#L169'><pre>169</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub last_loaded_paths: Vec&lt;String&gt;,</pre></td></tr><tr><td class='line-number'><a name='L170' href='#L170'><pre>170</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    pub defaulting_on: bool,</pre></td></tr><tr><td class='line-number'><a name='L171' href='#L171'><pre>171</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L172' href='#L172'><pre>172</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L173' href='#L173'><pre>173</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub(crate) enum ReplMsg {</pre></td></tr><tr><td class='line-number'><a name='L174' href='#L174'><pre>174</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Out(String),</pre></td></tr><tr><td class='line-number'><a name='L175' href='#L175'><pre>175</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Err(String),</pre></td></tr><tr><td class='line-number'><a name='L176' href='#L176'><pre>176</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Value(Value),</pre></td></tr><tr><td class='line-number'><a name='L177' href='#L177'><pre>177</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L178' href='#L178'><pre>178</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L179' href='#L179'><pre>179</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub(crate) trait ReplIo {</pre></td></tr><tr><td class='line-number'><a name='L180' href='#L180'><pre>180</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    fn read_to_string(&amp;self, path: &amp;str) -&gt; Result&lt;String, String&gt;;</pre></td></tr><tr><td class='line-number'><a name='L181' href='#L181'><pre>181</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L182' href='#L182'><pre>182</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L183' href='#L183'><pre>183</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub(crate) struct FsIo;</pre></td></tr><tr><td class='line-number'><a name='L184' href='#L184'><pre>184</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl ReplIo for FsIo {</pre></td></tr><tr><td class='line-number'><a name='L185' href='#L185'><pre>185</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn read_to_string(&amp;self, path: &amp;str) -&gt; Result&lt;String, String&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L186' href='#L186'><pre>186</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>std::fs::read_to_string</span>(<span class='region red'>path</span>).<span class='region red'>map_err</span>(|e| format!(<span class='region red'>&quot;エラー: ファイルを開けません: {}&quot;</span>, e))</pre></td></tr><tr><td class='line-number'><a name='L187' href='#L187'><pre>187</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L188' href='#L188'><pre>188</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L189' href='#L189'><pre>189</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L190' href='#L190'><pre>190</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>pub(crate) fn handle_command&lt;I: ReplIo&gt;(</pre></td></tr><tr><td class='line-number'><a name='L191' href='#L191'><pre>191</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    state: &amp;mut ReplState,</pre></td></tr><tr><td class='line-number'><a name='L192' href='#L192'><pre>192</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    cmd: ReplCommand,</pre></td></tr><tr><td class='line-number'><a name='L193' href='#L193'><pre>193</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    io: &amp;I,</pre></td></tr><tr><td class='line-number'><a name='L194' href='#L194'><pre>194</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>) -&gt; Vec&lt;ReplMsg&gt; {</pre></td></tr><tr><td class='line-number'><a name='L195' href='#L195'><pre>195</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    use ReplMsg as M;</pre></td></tr><tr><td class='line-number'><a name='L196' href='#L196'><pre>196</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    match cmd {</pre></td></tr><tr><td class='line-number'><a name='L197' href='#L197'><pre>197</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        ReplCommand::TypeOf(<span class='region red'>src</span>) =&gt; match <span class='region red'>parse_expr(&amp;src)</span> {</pre></td></tr><tr><td class='line-number'><a name='L198' href='#L198'><pre>198</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Ok(<span class='region red'>expr</span>) =&gt; match <span class='region red'>type_string_in_current_env</span><span class='region red'>(</span></pre></td></tr><tr><td class='line-number'><a name='L199' href='#L199'><pre>199</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>&amp;state.type_env</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L200' href='#L200'><pre>200</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>&amp;state.class_env</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L201' href='#L201'><pre>201</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>&amp;expr</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L202' href='#L202'><pre>202</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                state.defaulting_on,</span></pre></td></tr><tr><td class='line-number'><a name='L203' href='#L203'><pre>203</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                &amp;mut state.value_env,</span></pre></td></tr><tr><td class='line-number'><a name='L204' href='#L204'><pre>204</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            )</span> {</pre></td></tr><tr><td class='line-number'><a name='L205' href='#L205'><pre>205</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Ok(<span class='region red'>s</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Out(format!(&quot;-- {}&quot;, s))</span>],</pre></td></tr><tr><td class='line-number'><a name='L206' href='#L206'><pre>206</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Err(<span class='region red'>msg</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Err(msg)</span>],</pre></td></tr><tr><td class='line-number'><a name='L207' href='#L207'><pre>207</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            },</pre></td></tr><tr><td class='line-number'><a name='L208' href='#L208'><pre>208</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Err(<span class='region red'>e</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Err(format!(&quot;{}&quot;, e))</span>],</pre></td></tr><tr><td class='line-number'><a name='L209' href='#L209'><pre>209</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        },</pre></td></tr><tr><td class='line-number'><a name='L210' href='#L210'><pre>210</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        ReplCommand::Let(<span class='region red'>src</span>) =&gt; match <span class='region red'>parse_program(&amp;src)</span> {</pre></td></tr><tr><td class='line-number'><a name='L211' href='#L211'><pre>211</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Ok(<span class='region red'>prog</span>) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L212' href='#L212'><pre>212</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let <span class='region red'>mut tent_env</span> = <span class='region red'>state.type_env</span>.<span class='region red'>clone_env</span>();</pre></td></tr><tr><td class='line-number'><a name='L213' href='#L213'><pre>213</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let <span class='region red'>mut tent_val</span> = <span class='region red'>state.value_env</span>.<span class='region red'>clone</span>();</pre></td></tr><tr><td class='line-number'><a name='L214' href='#L214'><pre>214</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let <span class='region red'>mut loaded</span>: <span class='region red'>Vec&lt;String&gt;</span> = <span class='region red'>Vec::new</span>();</pre></td></tr><tr><td class='line-number'><a name='L215' href='#L215'><pre>215</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                for <span class='region red'>decl</span> in <span class='region red'>prog.decls</span> {</pre></td></tr><tr><td class='line-number'><a name='L216' href='#L216'><pre>216</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    let <span class='region red'>body</span> = if <span class='region red'>decl.params</span>.<span class='region red'>is_empty</span>() {</pre></td></tr><tr><td class='line-number'><a name='L217' href='#L217'><pre>217</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>decl.expr</span></pre></td></tr><tr><td class='line-number'><a name='L218' href='#L218'><pre>218</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    } else {</pre></td></tr><tr><td class='line-number'><a name='L219' href='#L219'><pre>219</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>A::Expr::Lambda {</span></pre></td></tr><tr><td class='line-number'><a name='L220' href='#L220'><pre>220</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            params: </span><span class='region red'>decl.params</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L221' href='#L221'><pre>221</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                            body: Box::new(decl.expr),</span></pre></td></tr><tr><td class='line-number'><a name='L222' href='#L222'><pre>222</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        }</span></pre></td></tr><tr><td class='line-number'><a name='L223' href='#L223'><pre>223</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    };</pre></td></tr><tr><td class='line-number'><a name='L224' href='#L224'><pre>224</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    let <span class='region red'>mut st</span> = <span class='region red'>InferState {</span></pre></td></tr><tr><td class='line-number'><a name='L225' href='#L225'><pre>225</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        supply: TVarSupply::new(),</span></pre></td></tr><tr><td class='line-number'><a name='L226' href='#L226'><pre>226</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        subst: Default::default(),</span></pre></td></tr><tr><td class='line-number'><a name='L227' href='#L227'><pre>227</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    }</span>;</pre></td></tr><tr><td class='line-number'><a name='L228' href='#L228'><pre>228</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    match <span class='region red'>infer_expr</span><span class='region red'>(</span><span class='region red'>&amp;tent_env</span><span class='region red'>, </span><span class='region red'>&amp;state.class_env</span><span class='region red'>, &amp;mut st, &amp;body)</span> {</pre></td></tr><tr><td class='line-number'><a name='L229' href='#L229'><pre>229</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        Ok((<span class='region red'>s</span>, <span class='region red'>mut q_rhs</span>)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L230' href='#L230'><pre>230</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            if let Some(<span class='region red'>sig</span>) = <span class='region red'>&amp;decl.signature</span> {</pre></td></tr><tr><td class='line-number'><a name='L231' href='#L231'><pre>231</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                                let <span class='region red'>ty_anno</span> = <span class='region red'>crate::infer::type_from_texpr</span>(<span class='region red'>&amp;sig.r#type</span>);</pre></td></tr><tr><td class='line-number'><a name='L232' href='#L232'><pre>232</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                                match <span class='region red'>crate::typesys::unify</span><span class='region red'>(</span></pre></td></tr><tr><td class='line-number'><a name='L233' href='#L233'><pre>233</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                    </span><span class='region red'>crate::typesys::apply_subst_t</span><span class='region red'>(</span><span class='region red'>&amp;s</span><span class='region red'>, &amp;q_rhs.r#type),</span></pre></td></tr><tr><td class='line-number'><a name='L234' href='#L234'><pre>234</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                    ty_anno,</span></pre></td></tr><tr><td class='line-number'><a name='L235' href='#L235'><pre>235</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                )</span> {</pre></td></tr><tr><td class='line-number'><a name='L236' href='#L236'><pre>236</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                                    Ok(<span class='region red'>s2</span>) =&gt; <span class='region red'>{</span></pre></td></tr><tr><td class='line-number'><a name='L237' href='#L237'><pre>237</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                        let </span><span class='region red'>s</span><span class='region red'> = </span><span class='region red'>crate::typesys::compose</span><span class='region red'>(</span><span class='region red'>&amp;s2</span><span class='region red'>, </span><span class='region red'>&amp;s</span><span class='region red'>);</span></pre></td></tr><tr><td class='line-number'><a name='L238' href='#L238'><pre>238</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                        </span><span class='region red'>q_rhs</span><span class='region red'> = </span><span class='region red'>crate::typesys::apply_subst_q</span><span class='region red'>(&amp;s, &amp;q_rhs);</span></pre></td></tr><tr><td class='line-number'><a name='L239' href='#L239'><pre>239</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                    }</span></pre></td></tr><tr><td class='line-number'><a name='L240' href='#L240'><pre>240</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                                    Err(<span class='region red'>e</span>) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L241' href='#L241'><pre>241</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                                        return <span class='region red'>vec!</span>[<span class='region red'>M::Err(format!(</span></pre></td></tr><tr><td class='line-number'><a name='L242' href='#L242'><pre>242</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                            &quot;エラー: [{}] {}&quot;,</span></pre></td></tr><tr><td class='line-number'><a name='L243' href='#L243'><pre>243</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                            e.code, e.message</span></pre></td></tr><tr><td class='line-number'><a name='L244' href='#L244'><pre>244</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                        ))</span>];</pre></td></tr><tr><td class='line-number'><a name='L245' href='#L245'><pre>245</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                                    }</pre></td></tr><tr><td class='line-number'><a name='L246' href='#L246'><pre>246</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                                }</pre></td></tr><tr><td class='line-number'><a name='L247' href='#L247'><pre>247</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L248' href='#L248'><pre>248</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            let <span class='region red'>sch</span> = <span class='region red'>generalize</span>(<span class='region red'>&amp;tent_env</span>, <span class='region red'>q_rhs</span>.<span class='region red'>clone</span>());</pre></td></tr><tr><td class='line-number'><a name='L249' href='#L249'><pre>249</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            <span class='region red'>tent_env</span>.<span class='region red'>extend</span>(<span class='region red'>decl.name</span>.<span class='region red'>clone</span>(), <span class='region red'>sch</span>);</pre></td></tr><tr><td class='line-number'><a name='L250' href='#L250'><pre>250</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            match <span class='region red'>eval_expr</span><span class='region red'>(&amp;body, &amp;mut tent_val)</span> {</pre></td></tr><tr><td class='line-number'><a name='L251' href='#L251'><pre>251</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                                Ok(<span class='region red'>v</span>) =&gt; <span class='region red'>{</span></pre></td></tr><tr><td class='line-number'><a name='L252' href='#L252'><pre>252</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                    </span><span class='region red'>tent_val</span><span class='region red'>.</span><span class='region red'>insert</span><span class='region red'>(</span><span class='region red'>decl.name</span><span class='region red'>.</span><span class='region red'>clone</span><span class='region red'>(), </span><span class='region red'>v</span><span class='region red'>);</span></pre></td></tr><tr><td class='line-number'><a name='L253' href='#L253'><pre>253</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                    </span><span class='region red'>loaded</span><span class='region red'>.</span><span class='region red'>push</span><span class='region red'>(decl.name.clone());</span></pre></td></tr><tr><td class='line-number'><a name='L254' href='#L254'><pre>254</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                                }</span></pre></td></tr><tr><td class='line-number'><a name='L255' href='#L255'><pre>255</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                                Err(<span class='region red'>e</span>) =&gt; return <span class='region red'>vec!</span>[<span class='region red'>M::Err(format!(&quot;{}&quot;, e))</span>],</pre></td></tr><tr><td class='line-number'><a name='L256' href='#L256'><pre>256</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                            }</pre></td></tr><tr><td class='line-number'><a name='L257' href='#L257'><pre>257</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L258' href='#L258'><pre>258</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        Err(<span class='region red'>e</span>) =&gt; return <span class='region red'>vec!</span>[<span class='region red'>M::Err(format!(&quot;{}&quot;, e))</span>],</pre></td></tr><tr><td class='line-number'><a name='L259' href='#L259'><pre>259</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L260' href='#L260'><pre>260</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L261' href='#L261'><pre>261</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>state.type_env</span> = <span class='region red'>tent_env</span>;</pre></td></tr><tr><td class='line-number'><a name='L262' href='#L262'><pre>262</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>state.value_env</span> = <span class='region red'>tent_val</span>;</pre></td></tr><tr><td class='line-number'><a name='L263' href='#L263'><pre>263</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                if <span class='region red'>loaded</span>.<span class='region red'>is_empty</span>() {</pre></td></tr><tr><td class='line-number'><a name='L264' href='#L264'><pre>264</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>vec!</span>[]</pre></td></tr><tr><td class='line-number'><a name='L265' href='#L265'><pre>265</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                } else {</pre></td></tr><tr><td class='line-number'><a name='L266' href='#L266'><pre>266</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>vec!</span>[<span class='region red'>M::Out(</span><span class='region red'>format!</span><span class='region red'>(</span><span class='region red'>&quot;Defined {}&quot;</span><span class='region red'>, </span><span class='region red'>loaded</span><span class='region red'>.join(&quot;, &quot;)))</span>]</pre></td></tr><tr><td class='line-number'><a name='L267' href='#L267'><pre>267</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L268' href='#L268'><pre>268</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L269' href='#L269'><pre>269</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Err(<span class='region red'>e</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Err(format!(&quot;{}&quot;, e))</span>],</pre></td></tr><tr><td class='line-number'><a name='L270' href='#L270'><pre>270</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        },</pre></td></tr><tr><td class='line-number'><a name='L271' href='#L271'><pre>271</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        ReplCommand::Load(path) =&gt; match io.read_to_string(&amp;path) {</pre></td></tr><tr><td class='line-number'><a name='L272' href='#L272'><pre>272</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            Ok(src) =&gt; match parse_program(&amp;src) {</pre></td></tr><tr><td class='line-number'><a name='L273' href='#L273'><pre>273</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                Ok(prog) =&gt; match load_program_into_env(</pre></td></tr><tr><td class='line-number'><a name='L274' href='#L274'><pre>274</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    &amp;prog,</pre></td></tr><tr><td class='line-number'><a name='L275' href='#L275'><pre>275</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    &amp;mut state.type_env,</pre></td></tr><tr><td class='line-number'><a name='L276' href='#L276'><pre>276</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    &amp;state.class_env,</pre></td></tr><tr><td class='line-number'><a name='L277' href='#L277'><pre>277</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    &amp;mut state.value_env,</pre></td></tr><tr><td class='line-number'><a name='L278' href='#L278'><pre>278</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                ) {</pre></td></tr><tr><td class='line-number'><a name='L279' href='#L279'><pre>279</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    Ok(loaded) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L280' href='#L280'><pre>280</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        let mut msgs = vec![M::Out(format!(</pre></td></tr><tr><td class='line-number'><a name='L281' href='#L281'><pre>281</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            &quot;Loaded {} def(s) from {}&quot;,</pre></td></tr><tr><td class='line-number'><a name='L282' href='#L282'><pre>282</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            loaded.len(),</pre></td></tr><tr><td class='line-number'><a name='L283' href='#L283'><pre>283</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            path</pre></td></tr><tr><td class='line-number'><a name='L284' href='#L284'><pre>284</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        ))];</pre></td></tr><tr><td class='line-number'><a name='L285' href='#L285'><pre>285</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                        for <div class='tooltip'>name<span class='tooltip-content'>1</span></div> in &amp;loaded {</pre></td></tr><tr><td class='line-number'><a name='L286' href='#L286'><pre>286</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            if let Some(sch) = state.type_env.lookup(name) {</pre></td></tr><tr><td class='line-number'><a name='L287' href='#L287'><pre>287</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                msgs.push(M::Out(format!(</pre></td></tr><tr><td class='line-number'><a name='L288' href='#L288'><pre>288</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                    &quot;  {} :: {}&quot;,</pre></td></tr><tr><td class='line-number'><a name='L289' href='#L289'><pre>289</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                    name,</pre></td></tr><tr><td class='line-number'><a name='L290' href='#L290'><pre>290</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                    pretty_qual(&amp;sch.qual)</pre></td></tr><tr><td class='line-number'><a name='L291' href='#L291'><pre>291</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                )));</pre></td></tr><tr><td class='line-number'><a name='L292' href='#L292'><pre>292</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            <div class='tooltip'><span class='region red'>}</span><span class='tooltip-content'>0</span></div></pre></td></tr><tr><td class='line-number'><a name='L293' href='#L293'><pre>293</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L294' href='#L294'><pre>294</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        if !state.last_loaded_paths.contains(&amp;path) {</pre></td></tr><tr><td class='line-number'><a name='L295' href='#L295'><pre>295</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            state.last_loaded_paths.push(path);</pre></td></tr><tr><td class='line-number'><a name='L296' href='#L296'><pre>296</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        <div class='tooltip'><span class='region red'>}</span><span class='tooltip-content'>0</span></div></pre></td></tr><tr><td class='line-number'><a name='L297' href='#L297'><pre>297</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        msgs</pre></td></tr><tr><td class='line-number'><a name='L298' href='#L298'><pre>298</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L299' href='#L299'><pre>299</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    Err(<span class='region red'>msg</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Err(msg)</span>],</pre></td></tr><tr><td class='line-number'><a name='L300' href='#L300'><pre>300</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                },</pre></td></tr><tr><td class='line-number'><a name='L301' href='#L301'><pre>301</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Err(<span class='region red'>e</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Err(format!(&quot;{}&quot;, e))</span>],</pre></td></tr><tr><td class='line-number'><a name='L302' href='#L302'><pre>302</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            },</pre></td></tr><tr><td class='line-number'><a name='L303' href='#L303'><pre>303</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            Err(e) =&gt; vec![M::Err(e)],</pre></td></tr><tr><td class='line-number'><a name='L304' href='#L304'><pre>304</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        },</pre></td></tr><tr><td class='line-number'><a name='L305' href='#L305'><pre>305</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        ReplCommand::Reload =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L306' href='#L306'><pre>306</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            if state.last_loaded_paths.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L307' href='#L307'><pre>307</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                vec![M::Err(&quot;エラー: 直近の :load がありません&quot;.into())]</pre></td></tr><tr><td class='line-number'><a name='L308' href='#L308'><pre>308</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            } else {</pre></td></tr><tr><td class='line-number'><a name='L309' href='#L309'><pre>309</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                let mut msgs = Vec::new();</pre></td></tr><tr><td class='line-number'><a name='L310' href='#L310'><pre>310</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                for path in &amp;state.last_loaded_paths.clone() {</pre></td></tr><tr><td class='line-number'><a name='L311' href='#L311'><pre>311</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    match io.read_to_string(path) {</pre></td></tr><tr><td class='line-number'><a name='L312' href='#L312'><pre>312</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                        Ok(src) =&gt; match parse_program(&amp;src) {</pre></td></tr><tr><td class='line-number'><a name='L313' href='#L313'><pre>313</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            Ok(prog) =&gt; match load_program_into_env(</pre></td></tr><tr><td class='line-number'><a name='L314' href='#L314'><pre>314</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                &amp;prog,</pre></td></tr><tr><td class='line-number'><a name='L315' href='#L315'><pre>315</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                &amp;mut state.type_env,</pre></td></tr><tr><td class='line-number'><a name='L316' href='#L316'><pre>316</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                &amp;state.class_env,</pre></td></tr><tr><td class='line-number'><a name='L317' href='#L317'><pre>317</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                &amp;mut state.value_env,</pre></td></tr><tr><td class='line-number'><a name='L318' href='#L318'><pre>318</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                            ) {</pre></td></tr><tr><td class='line-number'><a name='L319' href='#L319'><pre>319</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                Ok(loaded) =&gt; msgs.push(M::Out(format!(</pre></td></tr><tr><td class='line-number'><a name='L320' href='#L320'><pre>320</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                    &quot;Reloaded {} def(s) from {}&quot;,</pre></td></tr><tr><td class='line-number'><a name='L321' href='#L321'><pre>321</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                    loaded.len(),</pre></td></tr><tr><td class='line-number'><a name='L322' href='#L322'><pre>322</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                    path</pre></td></tr><tr><td class='line-number'><a name='L323' href='#L323'><pre>323</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                                ))),</pre></td></tr><tr><td class='line-number'><a name='L324' href='#L324'><pre>324</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                                Err(<span class='region red'>msg</span>) =&gt; <span class='region red'>msgs</span>.<span class='region red'>push</span>(<span class='region red'>M::Err(msg)</span>),</pre></td></tr><tr><td class='line-number'><a name='L325' href='#L325'><pre>325</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                            },</pre></td></tr><tr><td class='line-number'><a name='L326' href='#L326'><pre>326</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            Err(<span class='region red'>e</span>) =&gt; <span class='region red'>msgs</span>.<span class='region red'>push</span>(<span class='region red'>M::Err(format!(&quot;{}&quot;, e))</span>),</pre></td></tr><tr><td class='line-number'><a name='L327' href='#L327'><pre>327</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        },</pre></td></tr><tr><td class='line-number'><a name='L328' href='#L328'><pre>328</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        Err(<span class='region red'>e</span>) =&gt; <span class='region red'>msgs</span>.<span class='region red'>push</span>(<span class='region red'>M::Err(e)</span>),</pre></td></tr><tr><td class='line-number'><a name='L329' href='#L329'><pre>329</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                    }</pre></td></tr><tr><td class='line-number'><a name='L330' href='#L330'><pre>330</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L331' href='#L331'><pre>331</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                msgs</pre></td></tr><tr><td class='line-number'><a name='L332' href='#L332'><pre>332</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L333' href='#L333'><pre>333</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L334' href='#L334'><pre>334</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        ReplCommand::Browse(pfx) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L335' href='#L335'><pre>335</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            let p = pfx.unwrap_or_default();</pre></td></tr><tr><td class='line-number'><a name='L336' href='#L336'><pre>336</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            let mut names: Vec&lt;&amp;String&gt; = state</pre></td></tr><tr><td class='line-number'><a name='L337' href='#L337'><pre>337</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                .type_env</pre></td></tr><tr><td class='line-number'><a name='L338' href='#L338'><pre>338</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                .env</pre></td></tr><tr><td class='line-number'><a name='L339' href='#L339'><pre>339</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                .keys()</pre></td></tr><tr><td class='line-number'><a name='L340' href='#L340'><pre>340</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>                .<div class='tooltip'>filter<span class='tooltip-content'>2</span></div>(|n| n.starts_with(&amp;p))</pre></td></tr><tr><td class='line-number'><a name='L341' href='#L341'><pre>341</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                .collect();</pre></td></tr><tr><td class='line-number'><a name='L342' href='#L342'><pre>342</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            names.sort();</pre></td></tr><tr><td class='line-number'><a name='L343' href='#L343'><pre>343</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            if names.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L344' href='#L344'><pre>344</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>vec!</span>[<span class='region red'>M::Out(&quot;(定義なし)&quot;.into())</span>]</pre></td></tr><tr><td class='line-number'><a name='L345' href='#L345'><pre>345</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            } else {</pre></td></tr><tr><td class='line-number'><a name='L346' href='#L346'><pre>346</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                names</pre></td></tr><tr><td class='line-number'><a name='L347' href='#L347'><pre>347</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    .into_iter()</pre></td></tr><tr><td class='line-number'><a name='L348' href='#L348'><pre>348</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    .<div class='tooltip'>map<span class='tooltip-content'>2</span></div>(|n| {</pre></td></tr><tr><td class='line-number'><a name='L349' href='#L349'><pre>349</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                        if let Some(sch) = state.type_env.lookup(n) {</pre></td></tr><tr><td class='line-number'><a name='L350' href='#L350'><pre>350</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                            M::Out(format!(&quot;  {} :: {}&quot;, n, pretty_qual(&amp;sch.qual)))</pre></td></tr><tr><td class='line-number'><a name='L351' href='#L351'><pre>351</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        } else {</pre></td></tr><tr><td class='line-number'><a name='L352' href='#L352'><pre>352</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            <span class='region red'>M::Out(format!(&quot;  {}&quot;, n))</span></pre></td></tr><tr><td class='line-number'><a name='L353' href='#L353'><pre>353</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                        }</pre></td></tr><tr><td class='line-number'><a name='L354' href='#L354'><pre>354</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                    })</pre></td></tr><tr><td class='line-number'><a name='L355' href='#L355'><pre>355</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                    .collect()</pre></td></tr><tr><td class='line-number'><a name='L356' href='#L356'><pre>356</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L357' href='#L357'><pre>357</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L358' href='#L358'><pre>358</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        ReplCommand::SetDefault(on) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L359' href='#L359'><pre>359</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            state.defaulting_on = on;</pre></td></tr><tr><td class='line-number'><a name='L360' href='#L360'><pre>360</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            vec![M::Out(format!(</pre></td></tr><tr><td class='line-number'><a name='L361' href='#L361'><pre>361</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                &quot;set default = {}&quot;,</pre></td></tr><tr><td class='line-number'><a name='L362' href='#L362'><pre>362</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                if on { &quot;on&quot; } else { <div class='tooltip'><span class='region red'>&quot;off&quot;</span><span class='tooltip-content'>0</span></div> }</pre></td></tr><tr><td class='line-number'><a name='L363' href='#L363'><pre>363</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            ))]</pre></td></tr><tr><td class='line-number'><a name='L364' href='#L364'><pre>364</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L365' href='#L365'><pre>365</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        ReplCommand::Unset(name) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L366' href='#L366'><pre>366</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            let mut removed = false;</pre></td></tr><tr><td class='line-number'><a name='L367' href='#L367'><pre>367</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            if state.type_env.env.remove(&amp;name).is_some() {</pre></td></tr><tr><td class='line-number'><a name='L368' href='#L368'><pre>368</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                removed = true;</pre></td></tr><tr><td class='line-number'><a name='L369' href='#L369'><pre>369</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L370' href='#L370'><pre>370</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            if state.value_env.remove(&amp;name).is_some() <span class='region red'>{</span></pre></td></tr><tr><td class='line-number'><a name='L371' href='#L371'><pre>371</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                removed = true;</span></pre></td></tr><tr><td class='line-number'><a name='L372' href='#L372'><pre>372</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre><span class='region red'>            </span>}</pre></td></tr><tr><td class='line-number'><a name='L373' href='#L373'><pre>373</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            if removed {</pre></td></tr><tr><td class='line-number'><a name='L374' href='#L374'><pre>374</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                vec![M::Out(format!(&quot;Unset {}&quot;, name))]</pre></td></tr><tr><td class='line-number'><a name='L375' href='#L375'><pre>375</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            } else {</pre></td></tr><tr><td class='line-number'><a name='L376' href='#L376'><pre>376</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                vec![M::Err(format!(&quot;エラー: 未定義です: {}&quot;, name))]</pre></td></tr><tr><td class='line-number'><a name='L377' href='#L377'><pre>377</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L378' href='#L378'><pre>378</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L379' href='#L379'><pre>379</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        ReplCommand::Eval(<span class='region red'>src</span>) =&gt; match <span class='region red'>parse_expr(&amp;src)</span> {</pre></td></tr><tr><td class='line-number'><a name='L380' href='#L380'><pre>380</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Ok(<span class='region red'>expr</span>) =&gt; match <span class='region red'>infer_and_generalize_for_repl</span><span class='region red'>(</span></pre></td></tr><tr><td class='line-number'><a name='L381' href='#L381'><pre>381</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>&amp;state.type_env</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L382' href='#L382'><pre>382</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>&amp;state.class_env</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L383' href='#L383'><pre>383</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>&amp;expr</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L384' href='#L384'><pre>384</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                state.defaulting_on,</span></pre></td></tr><tr><td class='line-number'><a name='L385' href='#L385'><pre>385</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                &amp;mut state.value_env,</span></pre></td></tr><tr><td class='line-number'><a name='L386' href='#L386'><pre>386</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            )</span> {</pre></td></tr><tr><td class='line-number'><a name='L387' href='#L387'><pre>387</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Ok((<span class='region red'>sch</span>, <span class='region red'>val</span>)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L388' href='#L388'><pre>388</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>state.type_env</span>.<span class='region red'>extend</span>(&quot;it&quot;, <span class='region red'>sch</span>);</pre></td></tr><tr><td class='line-number'><a name='L389' href='#L389'><pre>389</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>state.value_env</span>.<span class='region red'>insert</span>(<span class='region red'>&quot;it&quot;</span>.<span class='region red'>into</span>(), <span class='region red'>val</span>.<span class='region red'>clone</span>());</pre></td></tr><tr><td class='line-number'><a name='L390' href='#L390'><pre>390</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>vec!</span>[<span class='region red'>M::Value(val)</span>]</pre></td></tr><tr><td class='line-number'><a name='L391' href='#L391'><pre>391</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L392' href='#L392'><pre>392</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Err(<span class='region red'>msg</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Err(msg)</span>],</pre></td></tr><tr><td class='line-number'><a name='L393' href='#L393'><pre>393</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            },</pre></td></tr><tr><td class='line-number'><a name='L394' href='#L394'><pre>394</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            Err(<span class='region red'>e</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Err(format!(&quot;{}&quot;, e))</span>],</pre></td></tr><tr><td class='line-number'><a name='L395' href='#L395'><pre>395</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        },</pre></td></tr><tr><td class='line-number'><a name='L396' href='#L396'><pre>396</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        ReplCommand::Help | ReplCommand::Quit =&gt; <span class='region red'>vec!</span>[],</pre></td></tr><tr><td class='line-number'><a name='L397' href='#L397'><pre>397</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        ReplCommand::Invalid(<span class='region red'>s</span>) =&gt; <span class='region red'>vec!</span>[<span class='region red'>M::Err(format!(&quot;エラー: コマンド形式が不正です: {}&quot;, s))</span>],</pre></td></tr><tr><td class='line-number'><a name='L398' href='#L398'><pre>398</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L399' href='#L399'><pre>399</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L400' href='#L400'><pre>400</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// コマンド入力の字面を純粋に解釈して列挙型へ落とし込む（I/O は行わない）。</pre></td></tr><tr><td class='line-number'><a name='L401' href='#L401'><pre>401</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// REPL 実装からの切り離し用ヘルパ。</pre></td></tr><tr><td class='line-number'><a name='L402' href='#L402'><pre>402</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg_attr(not(test), allow(dead_code))]</pre></td></tr><tr><td class='line-number'><a name='L403' href='#L403'><pre>403</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[derive(Debug, Clone, PartialEq, Eq)]</pre></td></tr><tr><td class='line-number'><a name='L404' href='#L404'><pre>404</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub(crate) enum ReplCommand {</pre></td></tr><tr><td class='line-number'><a name='L405' href='#L405'><pre>405</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Help,</pre></td></tr><tr><td class='line-number'><a name='L406' href='#L406'><pre>406</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Quit,</pre></td></tr><tr><td class='line-number'><a name='L407' href='#L407'><pre>407</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    /// `:t` / `:type`</pre></td></tr><tr><td class='line-number'><a name='L408' href='#L408'><pre>408</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    TypeOf(String),</pre></td></tr><tr><td class='line-number'><a name='L409' href='#L409'><pre>409</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    /// その場定義（正規化済みソース）</pre></td></tr><tr><td class='line-number'><a name='L410' href='#L410'><pre>410</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Let(String),</pre></td></tr><tr><td class='line-number'><a name='L411' href='#L411'><pre>411</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Load(String),</pre></td></tr><tr><td class='line-number'><a name='L412' href='#L412'><pre>412</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Reload,</pre></td></tr><tr><td class='line-number'><a name='L413' href='#L413'><pre>413</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Browse(Option&lt;String&gt;),</pre></td></tr><tr><td class='line-number'><a name='L414' href='#L414'><pre>414</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    SetDefault(bool),</pre></td></tr><tr><td class='line-number'><a name='L415' href='#L415'><pre>415</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Unset(String),</pre></td></tr><tr><td class='line-number'><a name='L416' href='#L416'><pre>416</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    /// 上記に当てはまらなければ式として扱う</pre></td></tr><tr><td class='line-number'><a name='L417' href='#L417'><pre>417</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Eval(String),</pre></td></tr><tr><td class='line-number'><a name='L418' href='#L418'><pre>418</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    /// 形式が不正なコマンド</pre></td></tr><tr><td class='line-number'><a name='L419' href='#L419'><pre>419</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Invalid(String),</pre></td></tr><tr><td class='line-number'><a name='L420' href='#L420'><pre>420</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L421' href='#L421'><pre>421</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L422' href='#L422'><pre>422</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg_attr(not(test), allow(dead_code))]</pre></td></tr><tr><td class='line-number'><a name='L423' href='#L423'><pre>423</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>pub(crate) fn parse_repl_command(input: &amp;str) -&gt; ReplCommand {</pre></td></tr><tr><td class='line-number'><a name='L424' href='#L424'><pre>424</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>    let s = input.trim();</pre></td></tr><tr><td class='line-number'><a name='L425' href='#L425'><pre>425</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>    if s.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L426' href='#L426'><pre>426</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        return <span class='region red'>ReplCommand::Eval(String::new())</span>;</pre></td></tr><tr><td class='line-number'><a name='L427' href='#L427'><pre>427</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L428' href='#L428'><pre>428</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>    match s {</pre></td></tr><tr><td class='line-number'><a name='L429' href='#L429'><pre>429</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>        &quot;:help&quot; | <div class='tooltip'>&quot;:h&quot;<span class='tooltip-content'>10</span></div> =&gt; return <div class='tooltip'>ReplCommand::Help<span class='tooltip-content'>1</span></div>,</pre></td></tr><tr><td class='line-number'><a name='L430' href='#L430'><pre>430</pre></a></td><td class='covered-line'><pre>10</pre></td><td class='code'><pre>        &quot;:quit&quot; | &quot;:q&quot; =&gt; return <div class='tooltip'>ReplCommand::Quit<span class='tooltip-content'>1</span></div>,</pre></td></tr><tr><td class='line-number'><a name='L431' href='#L431'><pre>431</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>        _ =&gt; {}</pre></td></tr><tr><td class='line-number'><a name='L432' href='#L432'><pre>432</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L433' href='#L433'><pre>433</pre></a></td><td class='covered-line'><pre>9</pre></td><td class='code'><pre>    if let Some(<div class='tooltip'>rest<span class='tooltip-content'>1</span></div>) = s.strip_prefix(&quot;:t &quot;) {</pre></td></tr><tr><td class='line-number'><a name='L434' href='#L434'><pre>434</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        return ReplCommand::TypeOf(rest.trim().to_string());</pre></td></tr><tr><td class='line-number'><a name='L435' href='#L435'><pre>435</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L436' href='#L436'><pre>436</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>    if let Some(<div class='tooltip'><span class='region red'>rest</span><span class='tooltip-content'>0</span></div>) = s.strip_prefix(&quot;:type &quot;) {</pre></td></tr><tr><td class='line-number'><a name='L437' href='#L437'><pre>437</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        return <span class='region red'>ReplCommand::TypeOf(rest.trim().to_string())</span>;</pre></td></tr><tr><td class='line-number'><a name='L438' href='#L438'><pre>438</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L439' href='#L439'><pre>439</pre></a></td><td class='covered-line'><pre>8</pre></td><td class='code'><pre>    if let Some(<div class='tooltip'>rest<span class='tooltip-content'>1</span></div>) = s.strip_prefix(&quot;:let &quot;) {</pre></td></tr><tr><td class='line-number'><a name='L440' href='#L440'><pre>440</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        return ReplCommand::Let(normalize_let_payload(rest.trim()));</pre></td></tr><tr><td class='line-number'><a name='L441' href='#L441'><pre>441</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L442' href='#L442'><pre>442</pre></a></td><td class='covered-line'><pre>7</pre></td><td class='code'><pre>    if let Some(<div class='tooltip'>rest<span class='tooltip-content'>1</span></div>) = s.strip_prefix(&quot;:load &quot;) {</pre></td></tr><tr><td class='line-number'><a name='L443' href='#L443'><pre>443</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        return ReplCommand::Load(rest.trim().to_string());</pre></td></tr><tr><td class='line-number'><a name='L444' href='#L444'><pre>444</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L445' href='#L445'><pre>445</pre></a></td><td class='covered-line'><pre>6</pre></td><td class='code'><pre>    if s == &quot;:reload&quot; {</pre></td></tr><tr><td class='line-number'><a name='L446' href='#L446'><pre>446</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        return ReplCommand::Reload;</pre></td></tr><tr><td class='line-number'><a name='L447' href='#L447'><pre>447</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L448' href='#L448'><pre>448</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>    if let Some(<div class='tooltip'>rest<span class='tooltip-content'>1</span></div>) = s.strip_prefix(&quot;:browse&quot;) {</pre></td></tr><tr><td class='line-number'><a name='L449' href='#L449'><pre>449</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let pfx = rest.trim();</pre></td></tr><tr><td class='line-number'><a name='L450' href='#L450'><pre>450</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        return if pfx.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L451' href='#L451'><pre>451</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>ReplCommand::Browse(None)</span></pre></td></tr><tr><td class='line-number'><a name='L452' href='#L452'><pre>452</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        } else {</pre></td></tr><tr><td class='line-number'><a name='L453' href='#L453'><pre>453</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            ReplCommand::Browse(Some(pfx.to_string()))</pre></td></tr><tr><td class='line-number'><a name='L454' href='#L454'><pre>454</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        };</pre></td></tr><tr><td class='line-number'><a name='L455' href='#L455'><pre>455</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L456' href='#L456'><pre>456</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>    if let Some(<div class='tooltip'>rest<span class='tooltip-content'>1</span></div>) = s.strip_prefix(&quot;:set &quot;) {</pre></td></tr><tr><td class='line-number'><a name='L457' href='#L457'><pre>457</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let parts: Vec&lt;&amp;str&gt; = rest.split_whitespace().collect();</pre></td></tr><tr><td class='line-number'><a name='L458' href='#L458'><pre>458</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        if parts.len() == 2 &amp;&amp; parts[0] == &quot;default&quot; {</pre></td></tr><tr><td class='line-number'><a name='L459' href='#L459'><pre>459</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            return match parts[1] {</pre></td></tr><tr><td class='line-number'><a name='L460' href='#L460'><pre>460</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                &quot;on&quot; =&gt; ReplCommand::SetDefault(true),</pre></td></tr><tr><td class='line-number'><a name='L461' href='#L461'><pre>461</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>&quot;off&quot;</span> =&gt; <span class='region red'>ReplCommand::SetDefault(false)</span>,</pre></td></tr><tr><td class='line-number'><a name='L462' href='#L462'><pre>462</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                _ =&gt; <span class='region red'>ReplCommand::Invalid(s.to_string())</span>,</pre></td></tr><tr><td class='line-number'><a name='L463' href='#L463'><pre>463</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            };</pre></td></tr><tr><td class='line-number'><a name='L464' href='#L464'><pre>464</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L465' href='#L465'><pre>465</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        return <span class='region red'>ReplCommand::Invalid(s.to_string())</span>;</pre></td></tr><tr><td class='line-number'><a name='L466' href='#L466'><pre>466</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L467' href='#L467'><pre>467</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>    if let Some(<div class='tooltip'>rest<span class='tooltip-content'>1</span></div>) = s.strip_prefix(&quot;:unset &quot;) {</pre></td></tr><tr><td class='line-number'><a name='L468' href='#L468'><pre>468</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let name = rest.trim();</pre></td></tr><tr><td class='line-number'><a name='L469' href='#L469'><pre>469</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        if name.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L470' href='#L470'><pre>470</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            return <span class='region red'>ReplCommand::Invalid(s.to_string())</span>;</pre></td></tr><tr><td class='line-number'><a name='L471' href='#L471'><pre>471</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L472' href='#L472'><pre>472</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        return ReplCommand::Unset(name.to_string());</pre></td></tr><tr><td class='line-number'><a name='L473' href='#L473'><pre>473</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L474' href='#L474'><pre>474</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>    if s.starts_with(&quot;let &quot;) {</pre></td></tr><tr><td class='line-number'><a name='L475' href='#L475'><pre>475</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        if parse_expr(s).is_ok() {</pre></td></tr><tr><td class='line-number'><a name='L476' href='#L476'><pre>476</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            return <span class='region red'>ReplCommand::Eval(s.to_string())</span>;</pre></td></tr><tr><td class='line-number'><a name='L477' href='#L477'><pre>477</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L478' href='#L478'><pre>478</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        return ReplCommand::Let(normalize_let_payload(s));</pre></td></tr><tr><td class='line-number'><a name='L479' href='#L479'><pre>479</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L480' href='#L480'><pre>480</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    ReplCommand::Eval(s.to_string())</pre></td></tr><tr><td class='line-number'><a name='L481' href='#L481'><pre>481</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L482' href='#L482'><pre>482</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L483' href='#L483'><pre>483</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// `:let` のペイロード（定義群）を `let` 付きの正規化済みソースへ変換する。</pre></td></tr><tr><td class='line-number'><a name='L484' href='#L484'><pre>484</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>pub(crate) fn normalize_let_payload(payload: &amp;str) -&gt; String {</pre></td></tr><tr><td class='line-number'><a name='L485' href='#L485'><pre>485</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>    if payload.contains(&apos;;&apos;) {</pre></td></tr><tr><td class='line-number'><a name='L486' href='#L486'><pre>486</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let parts: Vec&lt;String&gt; = payload</pre></td></tr><tr><td class='line-number'><a name='L487' href='#L487'><pre>487</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .split(&apos;;&apos;)</pre></td></tr><tr><td class='line-number'><a name='L488' href='#L488'><pre>488</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            .<div class='tooltip'>map<span class='tooltip-content'>1</span></div>(|seg| {</pre></td></tr><tr><td class='line-number'><a name='L489' href='#L489'><pre>489</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                let s = seg.trim();</pre></td></tr><tr><td class='line-number'><a name='L490' href='#L490'><pre>490</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                if s.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L491' href='#L491'><pre>491</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>String::new</span>()</pre></td></tr><tr><td class='line-number'><a name='L492' href='#L492'><pre>492</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                } else if s.starts_with(&quot;let &quot;) || <div class='tooltip'>s<span class='tooltip-content'>1</span></div>.<div class='tooltip'>contains<span class='tooltip-content'>1</span></div>(&quot;::&quot;) {</pre></td></tr><tr><td class='line-number'><a name='L493' href='#L493'><pre>493</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    s.to_string()</pre></td></tr><tr><td class='line-number'><a name='L494' href='#L494'><pre>494</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                } else {</pre></td></tr><tr><td class='line-number'><a name='L495' href='#L495'><pre>495</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                    format!(&quot;let {}&quot;, s)</pre></td></tr><tr><td class='line-number'><a name='L496' href='#L496'><pre>496</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L497' href='#L497'><pre>497</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            })</pre></td></tr><tr><td class='line-number'><a name='L498' href='#L498'><pre>498</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .collect();</pre></td></tr><tr><td class='line-number'><a name='L499' href='#L499'><pre>499</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        parts.join(&quot;;\n&quot;)</pre></td></tr><tr><td class='line-number'><a name='L500' href='#L500'><pre>500</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    } else {</pre></td></tr><tr><td class='line-number'><a name='L501' href='#L501'><pre>501</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 1本の定義行: `name ...` で始まるなら `let` を補う</pre></td></tr><tr><td class='line-number'><a name='L502' href='#L502'><pre>502</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>        let has_prefix_sig = payload</pre></td></tr><tr><td class='line-number'><a name='L503' href='#L503'><pre>503</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>            .chars()</pre></td></tr><tr><td class='line-number'><a name='L504' href='#L504'><pre>504</pre></a></td><td class='covered-line'><pre>11</pre></td><td class='code'><pre>            .<div class='tooltip'>take_while<span class='tooltip-content'>4</span></div>(|c| c.is_alphanumeric() || <div class='tooltip'>*c == &apos;_&apos;<span class='tooltip-content'>4</span></div>)</pre></td></tr><tr><td class='line-number'><a name='L505' href='#L505'><pre>505</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>            .collect::&lt;String&gt;()</pre></td></tr><tr><td class='line-number'><a name='L506' href='#L506'><pre>506</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>            + &quot; ::&quot;</pre></td></tr><tr><td class='line-number'><a name='L507' href='#L507'><pre>507</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>            == payload;</pre></td></tr><tr><td class='line-number'><a name='L508' href='#L508'><pre>508</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>        let keep = payload.starts_with(&quot;let &quot;) || <div class='tooltip'>payload<span class='tooltip-content'>3</span></div>.<div class='tooltip'>contains<span class='tooltip-content'>3</span></div>(&quot;::&quot;) || <div class='tooltip'>has_prefix_sig<span class='tooltip-content'>2</span></div>;</pre></td></tr><tr><td class='line-number'><a name='L509' href='#L509'><pre>509</pre></a></td><td class='covered-line'><pre>4</pre></td><td class='code'><pre>        if keep {</pre></td></tr><tr><td class='line-number'><a name='L510' href='#L510'><pre>510</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            payload.to_string()</pre></td></tr><tr><td class='line-number'><a name='L511' href='#L511'><pre>511</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        } else {</pre></td></tr><tr><td class='line-number'><a name='L512' href='#L512'><pre>512</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            format!(&quot;let {}&quot;, payload)</pre></td></tr><tr><td class='line-number'><a name='L513' href='#L513'><pre>513</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L514' href='#L514'><pre>514</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L515' href='#L515'><pre>515</pre></a></td><td class='covered-line'><pre>5</pre></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L516' href='#L516'><pre>516</pre></a></td><td class='skipped-line'></td><td class='code'><pre>// :t 用の型表示（正規化 + defaulting + フォールバック評価）</pre></td></tr><tr><td class='line-number'><a name='L517' href='#L517'><pre>517</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>fn type_string_in_current_env(</span></pre></td></tr><tr><td class='line-number'><a name='L518' href='#L518'><pre>518</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    type_env: &amp;crate::typesys::TypeEnv,</span></pre></td></tr><tr><td class='line-number'><a name='L519' href='#L519'><pre>519</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    class_env: &amp;crate::typesys::ClassEnv,</span></pre></td></tr><tr><td class='line-number'><a name='L520' href='#L520'><pre>520</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    expr: &amp;A::Expr,</span></pre></td></tr><tr><td class='line-number'><a name='L521' href='#L521'><pre>521</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    defaulting_on: bool,</span></pre></td></tr><tr><td class='line-number'><a name='L522' href='#L522'><pre>522</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    value_env: &amp;mut crate::evaluator::Env,</span></pre></td></tr><tr><td class='line-number'><a name='L523' href='#L523'><pre>523</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>) -&gt; Result&lt;String, String&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L524' href='#L524'><pre>524</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut st</span> = <span class='region red'>InferState {</span></pre></td></tr><tr><td class='line-number'><a name='L525' href='#L525'><pre>525</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        supply: TVarSupply::new(),</span></pre></td></tr><tr><td class='line-number'><a name='L526' href='#L526'><pre>526</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        subst: Default::default(),</span></pre></td></tr><tr><td class='line-number'><a name='L527' href='#L527'><pre>527</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    }</span>;</pre></td></tr><tr><td class='line-number'><a name='L528' href='#L528'><pre>528</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>e</span> = <span class='region red'>normalize_expr</span>(<span class='region red'>expr</span>);</pre></td></tr><tr><td class='line-number'><a name='L529' href='#L529'><pre>529</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    match <span class='region red'>infer_expr</span><span class='region red'>(</span><span class='region red'>type_env</span><span class='region red'>, </span><span class='region red'>class_env</span><span class='region red'>, &amp;mut st, &amp;e)</span> {</pre></td></tr><tr><td class='line-number'><a name='L530' href='#L530'><pre>530</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        Ok((<span class='region red'>s</span>, <span class='region red'>q</span>)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L531' href='#L531'><pre>531</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>mut q2</span> = <span class='region red'>apply_subst_q</span>(<span class='region red'>&amp;s</span>, <span class='region red'>&amp;q</span>);</pre></td></tr><tr><td class='line-number'><a name='L532' href='#L532'><pre>532</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            if <span class='region red'>defaulting_on</span> <span class='region red'>{</span></pre></td></tr><tr><td class='line-number'><a name='L533' href='#L533'><pre>533</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>q2</span><span class='region red'> = apply_defaulting_simple(&amp;q2);</span></pre></td></tr><tr><td class='line-number'><a name='L534' href='#L534'><pre>534</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            </span><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L535' href='#L535'><pre>535</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>Ok(pretty_qual(&amp;q2))</span></pre></td></tr><tr><td class='line-number'><a name='L536' href='#L536'><pre>536</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L537' href='#L537'><pre>537</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        Err(_) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L538' href='#L538'><pre>538</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            // 推論失敗時は値を評価して代表型にマップ</pre></td></tr><tr><td class='line-number'><a name='L539' href='#L539'><pre>539</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>v</span> = <span class='region red'>eval_expr</span>(<span class='region red'>&amp;e</span>, <span class='region red'>value_env</span>).<span class='region red'>map_err</span>(|e| <span class='region red'>e</span>.<span class='region red'>to_string</span>())<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L540' href='#L540'><pre>540</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>name</span> = match <span class='region red'>v</span> {</pre></td></tr><tr><td class='line-number'><a name='L541' href='#L541'><pre>541</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::Int(_) =&gt; <span class='region red'>&quot;Int&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L542' href='#L542'><pre>542</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::Double(_) =&gt; <span class='region red'>&quot;Double&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L543' href='#L543'><pre>543</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::Bool(_) =&gt; <span class='region red'>&quot;Bool&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L544' href='#L544'><pre>544</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::Char(_) =&gt; <span class='region red'>&quot;Char&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L545' href='#L545'><pre>545</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::String(_) =&gt; <span class='region red'>&quot;[Char]&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L546' href='#L546'><pre>546</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                _ =&gt; <span class='region red'>&quot;()&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L547' href='#L547'><pre>547</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            };</pre></td></tr><tr><td class='line-number'><a name='L548' href='#L548'><pre>548</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>qt</span> = <span class='region red'>qualify</span>(<span class='region red'>Type::TCon(TCon { name: name.into() })</span>, <span class='region red'>vec!</span>[]);</pre></td></tr><tr><td class='line-number'><a name='L549' href='#L549'><pre>549</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>Ok(pretty_qual(&amp;qt))</span></pre></td></tr><tr><td class='line-number'><a name='L550' href='#L550'><pre>550</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L551' href='#L551'><pre>551</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L552' href='#L552'><pre>552</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L553' href='#L553'><pre>553</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L554' href='#L554'><pre>554</pre></a></td><td class='skipped-line'></td><td class='code'><pre>// REPL用: 現在の型/値環境で推論し、it 用の Scheme と Value を返す</pre></td></tr><tr><td class='line-number'><a name='L555' href='#L555'><pre>555</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>fn infer_and_generalize_for_repl(</span></pre></td></tr><tr><td class='line-number'><a name='L556' href='#L556'><pre>556</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    type_env: &amp;crate::typesys::TypeEnv,</span></pre></td></tr><tr><td class='line-number'><a name='L557' href='#L557'><pre>557</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    class_env: &amp;crate::typesys::ClassEnv,</span></pre></td></tr><tr><td class='line-number'><a name='L558' href='#L558'><pre>558</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    expr: &amp;A::Expr,</span></pre></td></tr><tr><td class='line-number'><a name='L559' href='#L559'><pre>559</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    defaulting_on: bool,</span></pre></td></tr><tr><td class='line-number'><a name='L560' href='#L560'><pre>560</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    value_env: &amp;mut crate::evaluator::Env,</span></pre></td></tr><tr><td class='line-number'><a name='L561' href='#L561'><pre>561</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>) -&gt; Result&lt;(crate::typesys::Scheme, Value), String&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L562' href='#L562'><pre>562</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>e</span> = <span class='region red'>normalize_expr</span>(<span class='region red'>expr</span>);</pre></td></tr><tr><td class='line-number'><a name='L563' href='#L563'><pre>563</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut st</span> = <span class='region red'>InferState {</span></pre></td></tr><tr><td class='line-number'><a name='L564' href='#L564'><pre>564</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        supply: TVarSupply::new(),</span></pre></td></tr><tr><td class='line-number'><a name='L565' href='#L565'><pre>565</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        subst: Default::default(),</span></pre></td></tr><tr><td class='line-number'><a name='L566' href='#L566'><pre>566</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    }</span>;</pre></td></tr><tr><td class='line-number'><a name='L567' href='#L567'><pre>567</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    match <span class='region red'>infer_expr</span><span class='region red'>(</span><span class='region red'>type_env</span><span class='region red'>, </span><span class='region red'>class_env</span><span class='region red'>, &amp;mut st, &amp;e)</span> {</pre></td></tr><tr><td class='line-number'><a name='L568' href='#L568'><pre>568</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        Ok((<span class='region red'>s</span>, <span class='region red'>q</span>)) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L569' href='#L569'><pre>569</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>mut q2</span> = <span class='region red'>apply_subst_q</span>(<span class='region red'>&amp;s</span>, <span class='region red'>&amp;q</span>);</pre></td></tr><tr><td class='line-number'><a name='L570' href='#L570'><pre>570</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            if <span class='region red'>defaulting_on</span> <span class='region red'>{</span></pre></td></tr><tr><td class='line-number'><a name='L571' href='#L571'><pre>571</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>q2</span><span class='region red'> = apply_defaulting_simple(&amp;q2);</span></pre></td></tr><tr><td class='line-number'><a name='L572' href='#L572'><pre>572</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            </span><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L573' href='#L573'><pre>573</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>sch</span> = <span class='region red'>generalize</span>(<span class='region red'>type_env</span>, <span class='region red'>q2</span>);</pre></td></tr><tr><td class='line-number'><a name='L574' href='#L574'><pre>574</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>v</span> = <span class='region red'>eval_expr</span>(<span class='region red'>&amp;e</span>, <span class='region red'>value_env</span>).<span class='region red'>map_err</span>(|e| <span class='region red'>e</span>.<span class='region red'>to_string</span>())<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L575' href='#L575'><pre>575</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>Ok((sch, v))</span></pre></td></tr><tr><td class='line-number'><a name='L576' href='#L576'><pre>576</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L577' href='#L577'><pre>577</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        Err(_) =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L578' href='#L578'><pre>578</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>v</span> = <span class='region red'>eval_expr</span>(<span class='region red'>&amp;e</span>, <span class='region red'>value_env</span>).<span class='region red'>map_err</span>(|e| <span class='region red'>e</span>.<span class='region red'>to_string</span>())<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L579' href='#L579'><pre>579</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>tname</span> = match <span class='region red'>v</span> {</pre></td></tr><tr><td class='line-number'><a name='L580' href='#L580'><pre>580</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::Int(_) =&gt; <span class='region red'>&quot;Int&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L581' href='#L581'><pre>581</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::Double(_) =&gt; <span class='region red'>&quot;Double&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L582' href='#L582'><pre>582</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::Bool(_) =&gt; <span class='region red'>&quot;Bool&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L583' href='#L583'><pre>583</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::Char(_) =&gt; <span class='region red'>&quot;Char&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L584' href='#L584'><pre>584</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                Value::String(_) =&gt; <span class='region red'>&quot;[Char]&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L585' href='#L585'><pre>585</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                _ =&gt; <span class='region red'>&quot;()&quot;</span>,</pre></td></tr><tr><td class='line-number'><a name='L586' href='#L586'><pre>586</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            };</pre></td></tr><tr><td class='line-number'><a name='L587' href='#L587'><pre>587</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>q</span> = <span class='region red'>qualify</span>(<span class='region red'>Type::TCon(TCon { name: tname.into() })</span>, <span class='region red'>vec!</span>[]);</pre></td></tr><tr><td class='line-number'><a name='L588' href='#L588'><pre>588</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>sch</span> = <span class='region red'>generalize</span>(<span class='region red'>type_env</span>, <span class='region red'>q</span>);</pre></td></tr><tr><td class='line-number'><a name='L589' href='#L589'><pre>589</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>Ok((sch, v))</span></pre></td></tr><tr><td class='line-number'><a name='L590' href='#L590'><pre>590</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L591' href='#L591'><pre>591</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L592' href='#L592'><pre>592</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L593' href='#L593'><pre>593</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L594' href='#L594'><pre>594</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(test)]</pre></td></tr><tr><td class='line-number'><a name='L595' href='#L595'><pre>595</pre></a></td><td class='skipped-line'></td><td class='code'><pre>mod tests {</pre></td></tr><tr><td class='line-number'><a name='L596' href='#L596'><pre>596</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    use super::{</pre></td></tr><tr><td class='line-number'><a name='L597' href='#L597'><pre>597</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        handle_command, needs_more_input, normalize_let_payload, parse_repl_command, ReplCommand,</pre></td></tr><tr><td class='line-number'><a name='L598' href='#L598'><pre>598</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        ReplIo, ReplMsg, ReplState,</pre></td></tr><tr><td class='line-number'><a name='L599' href='#L599'><pre>599</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    };</pre></td></tr><tr><td class='line-number'><a name='L600' href='#L600'><pre>600</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    use crate::typesys::{qualify, Scheme, TCon, Type, TypeEnv};</pre></td></tr><tr><td class='line-number'><a name='L601' href='#L601'><pre>601</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    use crate::{evaluator, infer};</pre></td></tr><tr><td class='line-number'><a name='L602' href='#L602'><pre>602</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L603' href='#L603'><pre>603</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L604' href='#L604'><pre>604</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn needs_more_input_balancing_paren_bracket() {</pre></td></tr><tr><td class='line-number'><a name='L605' href='#L605'><pre>605</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(needs_more_input(&quot;(1 + 2&quot;));</pre></td></tr><tr><td class='line-number'><a name='L606' href='#L606'><pre>606</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(!needs_more_input(&quot;(1 + 2)&quot;));</pre></td></tr><tr><td class='line-number'><a name='L607' href='#L607'><pre>607</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(needs_more_input(&quot;[1, 2&quot;));</pre></td></tr><tr><td class='line-number'><a name='L608' href='#L608'><pre>608</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(!needs_more_input(&quot;[1, 2]&quot;));</pre></td></tr><tr><td class='line-number'><a name='L609' href='#L609'><pre>609</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L610' href='#L610'><pre>610</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L611' href='#L611'><pre>611</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L612' href='#L612'><pre>612</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn needs_more_input_strings_and_chars() {</pre></td></tr><tr><td class='line-number'><a name='L613' href='#L613'><pre>613</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(needs_more_input(&quot;\&quot;abc&quot;));</pre></td></tr><tr><td class='line-number'><a name='L614' href='#L614'><pre>614</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(!needs_more_input(&quot;\&quot;abc\&quot;&quot;));</pre></td></tr><tr><td class='line-number'><a name='L615' href='#L615'><pre>615</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(needs_more_input(&quot;&apos;a&quot;));</pre></td></tr><tr><td class='line-number'><a name='L616' href='#L616'><pre>616</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(!needs_more_input(&quot;&apos;a&apos;&quot;));</pre></td></tr><tr><td class='line-number'><a name='L617' href='#L617'><pre>617</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // エスケープを含むケース（閉じていれば false）</pre></td></tr><tr><td class='line-number'><a name='L618' href='#L618'><pre>618</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(!needs_more_input(&quot;\&quot;a\\\&quot;b\&quot;&quot;));</pre></td></tr><tr><td class='line-number'><a name='L619' href='#L619'><pre>619</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(!needs_more_input(&quot;&apos;\\&apos;&apos;&quot;));</pre></td></tr><tr><td class='line-number'><a name='L620' href='#L620'><pre>620</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L621' href='#L621'><pre>621</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L622' href='#L622'><pre>622</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L623' href='#L623'><pre>623</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn needs_more_input_commands_do_not_continue() {</pre></td></tr><tr><td class='line-number'><a name='L624' href='#L624'><pre>624</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // コマンドは先頭 &apos;:&apos; で常に単行扱い</pre></td></tr><tr><td class='line-number'><a name='L625' href='#L625'><pre>625</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(!needs_more_input(&quot;:t (&quot;));</pre></td></tr><tr><td class='line-number'><a name='L626' href='#L626'><pre>626</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(!needs_more_input(&quot;:load file.tl&quot;));</pre></td></tr><tr><td class='line-number'><a name='L627' href='#L627'><pre>627</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L628' href='#L628'><pre>628</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L629' href='#L629'><pre>629</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L630' href='#L630'><pre>630</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn normalize_let_payload_single_and_multi() {</pre></td></tr><tr><td class='line-number'><a name='L631' href='#L631'><pre>631</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(normalize_let_payload(&quot;f x = x&quot;), &quot;let f x = x&quot;);</pre></td></tr><tr><td class='line-number'><a name='L632' href='#L632'><pre>632</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(</pre></td></tr><tr><td class='line-number'><a name='L633' href='#L633'><pre>633</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            normalize_let_payload(&quot;let f x = x; g y = y&quot;),</pre></td></tr><tr><td class='line-number'><a name='L634' href='#L634'><pre>634</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            &quot;let f x = x;\nlet g y = y&quot;</pre></td></tr><tr><td class='line-number'><a name='L635' href='#L635'><pre>635</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        );</pre></td></tr><tr><td class='line-number'><a name='L636' href='#L636'><pre>636</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(normalize_let_payload(&quot;id :: a -&gt; a&quot;), &quot;id :: a -&gt; a&quot;);</pre></td></tr><tr><td class='line-number'><a name='L637' href='#L637'><pre>637</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L638' href='#L638'><pre>638</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L639' href='#L639'><pre>639</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L640' href='#L640'><pre>640</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn parse_repl_command_variants() {</pre></td></tr><tr><td class='line-number'><a name='L641' href='#L641'><pre>641</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(parse_repl_command(&quot;:help&quot;), ReplCommand::Help);</pre></td></tr><tr><td class='line-number'><a name='L642' href='#L642'><pre>642</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(parse_repl_command(&quot;:q&quot;), ReplCommand::Quit);</pre></td></tr><tr><td class='line-number'><a name='L643' href='#L643'><pre>643</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(</pre></td></tr><tr><td class='line-number'><a name='L644' href='#L644'><pre>644</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            parse_repl_command(&quot;:t 1 + 2&quot;),</pre></td></tr><tr><td class='line-number'><a name='L645' href='#L645'><pre>645</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            ReplCommand::TypeOf(&quot;1 + 2&quot;.into())</pre></td></tr><tr><td class='line-number'><a name='L646' href='#L646'><pre>646</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        );</pre></td></tr><tr><td class='line-number'><a name='L647' href='#L647'><pre>647</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        match parse_repl_command(&quot;:let f x = x&quot;) {</pre></td></tr><tr><td class='line-number'><a name='L648' href='#L648'><pre>648</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            ReplCommand::Let(src) =&gt; assert!(src.starts_with(&quot;let f&quot;)),</pre></td></tr><tr><td class='line-number'><a name='L649' href='#L649'><pre>649</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>other</span> =&gt; <span class='region red'>panic!</span>(<span class='region red'>&quot;unexpected: {:?}&quot;</span>, other),</pre></td></tr><tr><td class='line-number'><a name='L650' href='#L650'><pre>650</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L651' href='#L651'><pre>651</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(</pre></td></tr><tr><td class='line-number'><a name='L652' href='#L652'><pre>652</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            parse_repl_command(&quot;:load examples/basics.tl&quot;),</pre></td></tr><tr><td class='line-number'><a name='L653' href='#L653'><pre>653</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            ReplCommand::Load(&quot;examples/basics.tl&quot;.into())</pre></td></tr><tr><td class='line-number'><a name='L654' href='#L654'><pre>654</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        );</pre></td></tr><tr><td class='line-number'><a name='L655' href='#L655'><pre>655</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(parse_repl_command(&quot;:reload&quot;), ReplCommand::Reload);</pre></td></tr><tr><td class='line-number'><a name='L656' href='#L656'><pre>656</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(</pre></td></tr><tr><td class='line-number'><a name='L657' href='#L657'><pre>657</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            parse_repl_command(&quot;:browse foo&quot;),</pre></td></tr><tr><td class='line-number'><a name='L658' href='#L658'><pre>658</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            ReplCommand::Browse(Some(&quot;foo&quot;.into()))</pre></td></tr><tr><td class='line-number'><a name='L659' href='#L659'><pre>659</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        );</pre></td></tr><tr><td class='line-number'><a name='L660' href='#L660'><pre>660</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(</pre></td></tr><tr><td class='line-number'><a name='L661' href='#L661'><pre>661</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            parse_repl_command(&quot;:set default on&quot;),</pre></td></tr><tr><td class='line-number'><a name='L662' href='#L662'><pre>662</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            ReplCommand::SetDefault(true)</pre></td></tr><tr><td class='line-number'><a name='L663' href='#L663'><pre>663</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        );</pre></td></tr><tr><td class='line-number'><a name='L664' href='#L664'><pre>664</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(</pre></td></tr><tr><td class='line-number'><a name='L665' href='#L665'><pre>665</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            parse_repl_command(&quot;:unset x&quot;),</pre></td></tr><tr><td class='line-number'><a name='L666' href='#L666'><pre>666</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            ReplCommand::Unset(&quot;x&quot;.into())</pre></td></tr><tr><td class='line-number'><a name='L667' href='#L667'><pre>667</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        );</pre></td></tr><tr><td class='line-number'><a name='L668' href='#L668'><pre>668</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        match parse_repl_command(&quot;let id x = x&quot;) {</pre></td></tr><tr><td class='line-number'><a name='L669' href='#L669'><pre>669</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            ReplCommand::Let(src) =&gt; assert!(src.starts_with(&quot;let id&quot;)),</pre></td></tr><tr><td class='line-number'><a name='L670' href='#L670'><pre>670</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>other</span> =&gt; <span class='region red'>panic!</span>(<span class='region red'>&quot;unexpected: {:?}&quot;</span>, other),</pre></td></tr><tr><td class='line-number'><a name='L671' href='#L671'><pre>671</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L672' href='#L672'><pre>672</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(</pre></td></tr><tr><td class='line-number'><a name='L673' href='#L673'><pre>673</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            parse_repl_command(&quot;1 + 2&quot;),</pre></td></tr><tr><td class='line-number'><a name='L674' href='#L674'><pre>674</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            ReplCommand::Eval(&quot;1 + 2&quot;.into())</pre></td></tr><tr><td class='line-number'><a name='L675' href='#L675'><pre>675</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        );</pre></td></tr><tr><td class='line-number'><a name='L676' href='#L676'><pre>676</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L677' href='#L677'><pre>677</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L678' href='#L678'><pre>678</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    struct NoopIo;</pre></td></tr><tr><td class='line-number'><a name='L679' href='#L679'><pre>679</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    impl ReplIo for NoopIo {</pre></td></tr><tr><td class='line-number'><a name='L680' href='#L680'><pre>680</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>fn read_to_string(&amp;self, _path: &amp;str) -&gt; Result&lt;String, String&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L681' href='#L681'><pre>681</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>Err(&quot;unexpected io&quot;.into())</span></pre></td></tr><tr><td class='line-number'><a name='L682' href='#L682'><pre>682</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L683' href='#L683'><pre>683</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L684' href='#L684'><pre>684</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L685' href='#L685'><pre>685</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>    fn mk_state() -&gt; ReplState {</pre></td></tr><tr><td class='line-number'><a name='L686' href='#L686'><pre>686</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        ReplState {</pre></td></tr><tr><td class='line-number'><a name='L687' href='#L687'><pre>687</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            type_env: TypeEnv::new(),</pre></td></tr><tr><td class='line-number'><a name='L688' href='#L688'><pre>688</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            class_env: infer::initial_class_env(),</pre></td></tr><tr><td class='line-number'><a name='L689' href='#L689'><pre>689</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            value_env: evaluator::initial_env(),</pre></td></tr><tr><td class='line-number'><a name='L690' href='#L690'><pre>690</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            last_loaded_paths: vec![],</pre></td></tr><tr><td class='line-number'><a name='L691' href='#L691'><pre>691</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            defaulting_on: false,</pre></td></tr><tr><td class='line-number'><a name='L692' href='#L692'><pre>692</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L693' href='#L693'><pre>693</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L694' href='#L694'><pre>694</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L695' href='#L695'><pre>695</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L696' href='#L696'><pre>696</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn handle_browse_and_set_default_and_unset() {</pre></td></tr><tr><td class='line-number'><a name='L697' href='#L697'><pre>697</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let mut state = mk_state();</pre></td></tr><tr><td class='line-number'><a name='L698' href='#L698'><pre>698</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 2 つの定義を型環境に追加</pre></td></tr><tr><td class='line-number'><a name='L699' href='#L699'><pre>699</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let sch = Scheme {</pre></td></tr><tr><td class='line-number'><a name='L700' href='#L700'><pre>700</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            vars: vec![],</pre></td></tr><tr><td class='line-number'><a name='L701' href='#L701'><pre>701</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            qual: qualify(Type::TCon(TCon { name: &quot;Int&quot;.into() }), vec![]),</pre></td></tr><tr><td class='line-number'><a name='L702' href='#L702'><pre>702</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        };</pre></td></tr><tr><td class='line-number'><a name='L703' href='#L703'><pre>703</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        state.type_env.extend(&quot;foo&quot;, sch.clone());</pre></td></tr><tr><td class='line-number'><a name='L704' href='#L704'><pre>704</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        state.type_env.extend(&quot;bar&quot;, sch);</pre></td></tr><tr><td class='line-number'><a name='L705' href='#L705'><pre>705</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L706' href='#L706'><pre>706</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // :browse （全件）</pre></td></tr><tr><td class='line-number'><a name='L707' href='#L707'><pre>707</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::Browse(None), &amp;NoopIo);</pre></td></tr><tr><td class='line-number'><a name='L708' href='#L708'><pre>708</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let outs: Vec&lt;String&gt; = msgs</pre></td></tr><tr><td class='line-number'><a name='L709' href='#L709'><pre>709</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .into_iter()</pre></td></tr><tr><td class='line-number'><a name='L710' href='#L710'><pre>710</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            .<div class='tooltip'>filter_map<span class='tooltip-content'>1</span></div>(|m| match m {</pre></td></tr><tr><td class='line-number'><a name='L711' href='#L711'><pre>711</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                ReplMsg::Out(s) =&gt; Some(s),</pre></td></tr><tr><td class='line-number'><a name='L712' href='#L712'><pre>712</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                _ =&gt; <span class='region red'>None</span>,</pre></td></tr><tr><td class='line-number'><a name='L713' href='#L713'><pre>713</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            })</pre></td></tr><tr><td class='line-number'><a name='L714' href='#L714'><pre>714</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .collect();</pre></td></tr><tr><td class='line-number'><a name='L715' href='#L715'><pre>715</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(outs.iter().any(|s| s.contains(&quot;  bar :: Int&quot;)));</pre></td></tr><tr><td class='line-number'><a name='L716' href='#L716'><pre>716</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        <div class='tooltip'>assert!<span class='tooltip-content'>1</span></div>(<div class='tooltip'>outs.iter()<span class='tooltip-content'>1</span></div>.<div class='tooltip'>any<span class='tooltip-content'>1</span></div>(|s| s.contains(&quot;  foo :: Int&quot;)));</pre></td></tr><tr><td class='line-number'><a name='L717' href='#L717'><pre>717</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L718' href='#L718'><pre>718</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // :browse foo （接頭辞フィルタ）</pre></td></tr><tr><td class='line-number'><a name='L719' href='#L719'><pre>719</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::Browse(Some(&quot;fo&quot;.into())), &amp;NoopIo);</pre></td></tr><tr><td class='line-number'><a name='L720' href='#L720'><pre>720</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let outs: Vec&lt;String&gt; = msgs</pre></td></tr><tr><td class='line-number'><a name='L721' href='#L721'><pre>721</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .into_iter()</pre></td></tr><tr><td class='line-number'><a name='L722' href='#L722'><pre>722</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .filter_map(|m| match m {</pre></td></tr><tr><td class='line-number'><a name='L723' href='#L723'><pre>723</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                ReplMsg::Out(s) =&gt; Some(s),</pre></td></tr><tr><td class='line-number'><a name='L724' href='#L724'><pre>724</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                _ =&gt; <span class='region red'>None</span>,</pre></td></tr><tr><td class='line-number'><a name='L725' href='#L725'><pre>725</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            })</pre></td></tr><tr><td class='line-number'><a name='L726' href='#L726'><pre>726</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .collect();</pre></td></tr><tr><td class='line-number'><a name='L727' href='#L727'><pre>727</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(outs.len(), 1);</pre></td></tr><tr><td class='line-number'><a name='L728' href='#L728'><pre>728</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(outs[0].contains(&quot;foo :: Int&quot;));</pre></td></tr><tr><td class='line-number'><a name='L729' href='#L729'><pre>729</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L730' href='#L730'><pre>730</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // :set default on</pre></td></tr><tr><td class='line-number'><a name='L731' href='#L731'><pre>731</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::SetDefault(true), &amp;NoopIo);</pre></td></tr><tr><td class='line-number'><a name='L732' href='#L732'><pre>732</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(matches!(msgs[0], ReplMsg::Out(ref s) if s.contains(&quot;set default = on&quot;)));</pre></td></tr><tr><td class='line-number'><a name='L733' href='#L733'><pre>733</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(state.defaulting_on);</pre></td></tr><tr><td class='line-number'><a name='L734' href='#L734'><pre>734</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L735' href='#L735'><pre>735</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // :unset foo（成功）</pre></td></tr><tr><td class='line-number'><a name='L736' href='#L736'><pre>736</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::Unset(&quot;foo&quot;.into()), &amp;NoopIo);</pre></td></tr><tr><td class='line-number'><a name='L737' href='#L737'><pre>737</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(matches!(msgs[0], ReplMsg::Out(ref s) if s.contains(&quot;Unset foo&quot;)));</pre></td></tr><tr><td class='line-number'><a name='L738' href='#L738'><pre>738</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(state.type_env.lookup(&quot;foo&quot;).is_none());</pre></td></tr><tr><td class='line-number'><a name='L739' href='#L739'><pre>739</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // :unset foo（再度）→ エラー</pre></td></tr><tr><td class='line-number'><a name='L740' href='#L740'><pre>740</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::Unset(&quot;foo&quot;.into()), &amp;NoopIo);</pre></td></tr><tr><td class='line-number'><a name='L741' href='#L741'><pre>741</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(matches!(msgs[0], ReplMsg::Err(ref s) if s.contains(&quot;未定義&quot;)));</pre></td></tr><tr><td class='line-number'><a name='L742' href='#L742'><pre>742</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L743' href='#L743'><pre>743</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L744' href='#L744'><pre>744</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    struct MapIo(std::collections::HashMap&lt;String, Result&lt;String, String&gt;&gt;);</pre></td></tr><tr><td class='line-number'><a name='L745' href='#L745'><pre>745</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    impl ReplIo for MapIo {</pre></td></tr><tr><td class='line-number'><a name='L746' href='#L746'><pre>746</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        fn read_to_string(&amp;self, path: &amp;str) -&gt; Result&lt;String, String&gt; {</pre></td></tr><tr><td class='line-number'><a name='L747' href='#L747'><pre>747</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>            self.0</pre></td></tr><tr><td class='line-number'><a name='L748' href='#L748'><pre>748</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                .get(path)</pre></td></tr><tr><td class='line-number'><a name='L749' href='#L749'><pre>749</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                .cloned()</pre></td></tr><tr><td class='line-number'><a name='L750' href='#L750'><pre>750</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>                .unwrap_or_else(|| Err(<div class='tooltip'>&quot;not found&quot;<span class='tooltip-content'>1</span></div>.<div class='tooltip'>into<span class='tooltip-content'>1</span></div>()))</pre></td></tr><tr><td class='line-number'><a name='L751' href='#L751'><pre>751</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L752' href='#L752'><pre>752</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L753' href='#L753'><pre>753</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L754' href='#L754'><pre>754</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L755' href='#L755'><pre>755</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn handle_load_success_and_reload_paths() {</pre></td></tr><tr><td class='line-number'><a name='L756' href='#L756'><pre>756</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let mut state = mk_state();</pre></td></tr><tr><td class='line-number'><a name='L757' href='#L757'><pre>757</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let prog = &quot;let x = 1;&quot;.to_string();</pre></td></tr><tr><td class='line-number'><a name='L758' href='#L758'><pre>758</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let mut map = std::collections::HashMap::new();</pre></td></tr><tr><td class='line-number'><a name='L759' href='#L759'><pre>759</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        map.insert(&quot;mem://ok&quot;.into(), Ok(prog));</pre></td></tr><tr><td class='line-number'><a name='L760' href='#L760'><pre>760</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let io = MapIo(map);</pre></td></tr><tr><td class='line-number'><a name='L761' href='#L761'><pre>761</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::Load(&quot;mem://ok&quot;.into()), &amp;io);</pre></td></tr><tr><td class='line-number'><a name='L762' href='#L762'><pre>762</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // Loaded メッセージと型行が返る</pre></td></tr><tr><td class='line-number'><a name='L763' href='#L763'><pre>763</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let outs: Vec&lt;String&gt; = msgs</pre></td></tr><tr><td class='line-number'><a name='L764' href='#L764'><pre>764</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .into_iter()</pre></td></tr><tr><td class='line-number'><a name='L765' href='#L765'><pre>765</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            .<div class='tooltip'>filter_map<span class='tooltip-content'>1</span></div>(|m| match m {</pre></td></tr><tr><td class='line-number'><a name='L766' href='#L766'><pre>766</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>                ReplMsg::Out(s) =&gt; Some(s),</pre></td></tr><tr><td class='line-number'><a name='L767' href='#L767'><pre>767</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                _ =&gt; <span class='region red'>None</span>,</pre></td></tr><tr><td class='line-number'><a name='L768' href='#L768'><pre>768</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>            })</pre></td></tr><tr><td class='line-number'><a name='L769' href='#L769'><pre>769</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .collect();</pre></td></tr><tr><td class='line-number'><a name='L770' href='#L770'><pre>770</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(outs</pre></td></tr><tr><td class='line-number'><a name='L771' href='#L771'><pre>771</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .iter()</pre></td></tr><tr><td class='line-number'><a name='L772' href='#L772'><pre>772</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .any(|s| s.contains(&quot;Loaded 1 def(s) from mem://ok&quot;)));</pre></td></tr><tr><td class='line-number'><a name='L773' href='#L773'><pre>773</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        <div class='tooltip'>assert!<span class='tooltip-content'>1</span></div>(<div class='tooltip'>outs.iter()<span class='tooltip-content'>1</span></div>.<div class='tooltip'>any<span class='tooltip-content'>1</span></div>(|s| s.starts_with(&quot;  x ::&quot;)));</pre></td></tr><tr><td class='line-number'><a name='L774' href='#L774'><pre>774</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(state.last_loaded_paths.contains(&amp;&quot;mem://ok&quot;.to_string()));</pre></td></tr><tr><td class='line-number'><a name='L775' href='#L775'><pre>775</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L776' href='#L776'><pre>776</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // :reload が成功する</pre></td></tr><tr><td class='line-number'><a name='L777' href='#L777'><pre>777</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::Reload, &amp;io);</pre></td></tr><tr><td class='line-number'><a name='L778' href='#L778'><pre>778</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let outs: Vec&lt;String&gt; = msgs</pre></td></tr><tr><td class='line-number'><a name='L779' href='#L779'><pre>779</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .into_iter()</pre></td></tr><tr><td class='line-number'><a name='L780' href='#L780'><pre>780</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .filter_map(|m| match m {</pre></td></tr><tr><td class='line-number'><a name='L781' href='#L781'><pre>781</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>                ReplMsg::Out(s) =&gt; Some(s),</pre></td></tr><tr><td class='line-number'><a name='L782' href='#L782'><pre>782</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                _ =&gt; <span class='region red'>None</span>,</pre></td></tr><tr><td class='line-number'><a name='L783' href='#L783'><pre>783</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            })</pre></td></tr><tr><td class='line-number'><a name='L784' href='#L784'><pre>784</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .collect();</pre></td></tr><tr><td class='line-number'><a name='L785' href='#L785'><pre>785</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(outs</pre></td></tr><tr><td class='line-number'><a name='L786' href='#L786'><pre>786</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .iter()</pre></td></tr><tr><td class='line-number'><a name='L787' href='#L787'><pre>787</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .any(|s| s.contains(&quot;Reloaded 1 def(s) from mem://ok&quot;)));</pre></td></tr><tr><td class='line-number'><a name='L788' href='#L788'><pre>788</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L789' href='#L789'><pre>789</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L790' href='#L790'><pre>790</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L791' href='#L791'><pre>791</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn handle_load_error_and_reload_without_history() {</pre></td></tr><tr><td class='line-number'><a name='L792' href='#L792'><pre>792</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let mut state = mk_state();</pre></td></tr><tr><td class='line-number'><a name='L793' href='#L793'><pre>793</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // 読み込み失敗</pre></td></tr><tr><td class='line-number'><a name='L794' href='#L794'><pre>794</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let io = MapIo(std::collections::HashMap::new());</pre></td></tr><tr><td class='line-number'><a name='L795' href='#L795'><pre>795</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::Load(&quot;mem://missing&quot;.into()), &amp;io);</pre></td></tr><tr><td class='line-number'><a name='L796' href='#L796'><pre>796</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(msgs.iter().any(|m| matches!(m, ReplMsg::Err(_))));</pre></td></tr><tr><td class='line-number'><a name='L797' href='#L797'><pre>797</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L798' href='#L798'><pre>798</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // :reload 直近なし</pre></td></tr><tr><td class='line-number'><a name='L799' href='#L799'><pre>799</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let msgs = handle_command(&amp;mut state, ReplCommand::Reload, &amp;io);</pre></td></tr><tr><td class='line-number'><a name='L800' href='#L800'><pre>800</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert!(msgs</pre></td></tr><tr><td class='line-number'><a name='L801' href='#L801'><pre>801</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .iter()</pre></td></tr><tr><td class='line-number'><a name='L802' href='#L802'><pre>802</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            .any(|m| matches!(m, ReplMsg::Err(s) if s.contains(&quot;直近の :load&quot;))));</pre></td></tr><tr><td class='line-number'><a name='L803' href='#L803'><pre>803</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L804' href='#L804'><pre>804</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr></table></div></body></html>
target/llvm-cov-target/debug/deps/typelang-ab051a351587e22d.d:1:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/typelang-ab051a351587e22d.d: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/llvm-cov-target/debug/deps/typelang-ab051a351587e22d.d:3:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/typelang-ab051a351587e22d: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/llvm-cov-target/debug/deps/typelang-ab051a351587e22d.d:7:src/errors.rs:
target/debug/deps/typelang-9ef33b881117795e.d:1:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/typelang-9ef33b881117795e.d: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs Cargo.toml
target/debug/deps/typelang-9ef33b881117795e.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/libtypelang-9ef33b881117795e.rmeta: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs Cargo.toml
target/debug/deps/typelang-9ef33b881117795e.d:7:src/errors.rs:
target/debug/deps/error_message_patterns-e935cd9a9256df09.d:1:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/error_message_patterns-e935cd9a9256df09.d: tests/error_message_patterns.rs Cargo.toml
target/debug/deps/error_message_patterns-e935cd9a9256df09.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/liberror_message_patterns-e935cd9a9256df09.rmeta: tests/error_message_patterns.rs Cargo.toml
target/debug/deps/error_message_patterns-e935cd9a9256df09.d:5:tests/error_message_patterns.rs:
target/miri/x86_64-unknown-linux-gnu/debug/deps/error_message_patterns-1f67e38df9548de5.d:1:/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/error_message_patterns-1f67e38df9548de5.d: tests/error_message_patterns.rs
target/miri/x86_64-unknown-linux-gnu/debug/deps/error_message_patterns-1f67e38df9548de5.d:3:/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/error_message_patterns-1f67e38df9548de5: tests/error_message_patterns.rs
target/miri/x86_64-unknown-linux-gnu/debug/deps/error_message_patterns-1f67e38df9548de5.d:5:tests/error_message_patterns.rs:
target/llvm-cov/html/coverage/home/hsin4/myproject/typelang-hm-rs/src/repl/line_editor.rs.html:1:<!doctype html><html><head><meta name='viewport' content='width=device-width,initial-scale=1'><meta charset='UTF-8'><link rel='stylesheet' type='text/css' href='../../../../../../../style.css'><script src='../../../../../../../control.js'></script></head><body><h2>Coverage Report</h2><h4>Created: 2025-09-17 18:09</h4><span class='control'><a href='javascript:next_line()'>next uncovered line (L)</a>, <a href='javascript:next_region()'>next uncovered region (R)</a>, <a href='javascript:next_branch()'>next uncovered branch (B)</a></span><div class='centered'><table><div class='source-name-title'><pre>/home/hsin4/myproject/typelang-hm-rs/src/repl/line_editor.rs</pre></div><tr><td><pre>Line</pre></td><td><pre>Count</pre></td><td><pre>Source</pre></td></tr><tr><td class='line-number'><a name='L1' href='#L1'><pre>1</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use std::env;</pre></td></tr><tr><td class='line-number'><a name='L2' href='#L2'><pre>2</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use std::fs;</pre></td></tr><tr><td class='line-number'><a name='L3' href='#L3'><pre>3</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use std::io::{self, Read, Write};</pre></td></tr><tr><td class='line-number'><a name='L4' href='#L4'><pre>4</pre></a></td><td class='skipped-line'></td><td class='code'><pre>use std::path::PathBuf;</pre></td></tr><tr><td class='line-number'><a name='L5' href='#L5'><pre>5</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L6' href='#L6'><pre>6</pre></a></td><td class='skipped-line'></td><td class='code'><pre>/// 行入力の結果種別。</pre></td></tr><tr><td class='line-number'><a name='L7' href='#L7'><pre>7</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub enum ReadResult {</pre></td></tr><tr><td class='line-number'><a name='L8' href='#L8'><pre>8</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Line(String),</pre></td></tr><tr><td class='line-number'><a name='L9' href='#L9'><pre>9</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Eof,</pre></td></tr><tr><td class='line-number'><a name='L10' href='#L10'><pre>10</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    Interrupted,</pre></td></tr><tr><td class='line-number'><a name='L11' href='#L11'><pre>11</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L12' href='#L12'><pre>12</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L13' href='#L13'><pre>13</pre></a></td><td class='skipped-line'></td><td class='code'><pre>pub struct LineEditor {</pre></td></tr><tr><td class='line-number'><a name='L14' href='#L14'><pre>14</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    history: History,</pre></td></tr><tr><td class='line-number'><a name='L15' href='#L15'><pre>15</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L16' href='#L16'><pre>16</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L17' href='#L17'><pre>17</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl LineEditor {</pre></td></tr><tr><td class='line-number'><a name='L18' href='#L18'><pre>18</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>pub fn new() -&gt; Self</span> {</pre></td></tr><tr><td class='line-number'><a name='L19' href='#L19'><pre>19</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>Self {</span></pre></td></tr><tr><td class='line-number'><a name='L20' href='#L20'><pre>20</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            history: History::load(),</span></pre></td></tr><tr><td class='line-number'><a name='L21' href='#L21'><pre>21</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        }</span></pre></td></tr><tr><td class='line-number'><a name='L22' href='#L22'><pre>22</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L23' href='#L23'><pre>23</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L24' href='#L24'><pre>24</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>pub fn read_line(&amp;mut self, prompt: &amp;str) -&gt; io::Result&lt;ReadResult&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L25' href='#L25'><pre>25</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        #[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L26' href='#L26'><pre>26</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        {</pre></td></tr><tr><td class='line-number'><a name='L27' href='#L27'><pre>27</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>self</span>.<span class='region red'>read_line_unix</span>(<span class='region red'>prompt</span>)</pre></td></tr><tr><td class='line-number'><a name='L28' href='#L28'><pre>28</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L29' href='#L29'><pre>29</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        #[cfg(not(unix))]</pre></td></tr><tr><td class='line-number'><a name='L30' href='#L30'><pre>30</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        {</pre></td></tr><tr><td class='line-number'><a name='L31' href='#L31'><pre>31</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            self.read_line_fallback(prompt)</pre></td></tr><tr><td class='line-number'><a name='L32' href='#L32'><pre>32</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L33' href='#L33'><pre>33</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L34' href='#L34'><pre>34</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L35' href='#L35'><pre>35</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>pub fn add_history(&amp;mut self, entry: &amp;str)</span> {</pre></td></tr><tr><td class='line-number'><a name='L36' href='#L36'><pre>36</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>self.history</span>.<span class='region red'>add</span>(<span class='region red'>entry</span>);</pre></td></tr><tr><td class='line-number'><a name='L37' href='#L37'><pre>37</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L38' href='#L38'><pre>38</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L39' href='#L39'><pre>39</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>pub fn save_history(&amp;self) -&gt; io::Result&lt;()&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L40' href='#L40'><pre>40</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>self.history</span>.<span class='region red'>save</span>()</pre></td></tr><tr><td class='line-number'><a name='L41' href='#L41'><pre>41</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L42' href='#L42'><pre>42</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L43' href='#L43'><pre>43</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L44' href='#L44'><pre>44</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl Default for LineEditor {</pre></td></tr><tr><td class='line-number'><a name='L45' href='#L45'><pre>45</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn default() -&gt; Self</span> {</pre></td></tr><tr><td class='line-number'><a name='L46' href='#L46'><pre>46</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>Self::new</span>()</pre></td></tr><tr><td class='line-number'><a name='L47' href='#L47'><pre>47</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L48' href='#L48'><pre>48</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L49' href='#L49'><pre>49</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L50' href='#L50'><pre>50</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(not(unix))]</pre></td></tr><tr><td class='line-number'><a name='L51' href='#L51'><pre>51</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl LineEditor {</pre></td></tr><tr><td class='line-number'><a name='L52' href='#L52'><pre>52</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    fn read_line_fallback(&amp;mut self, prompt: &amp;str) -&gt; io::Result&lt;ReadResult&gt; {</pre></td></tr><tr><td class='line-number'><a name='L53' href='#L53'><pre>53</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        let mut stdout = io::stdout();</pre></td></tr><tr><td class='line-number'><a name='L54' href='#L54'><pre>54</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        write!(stdout, &quot;{}&quot;, prompt)?;</pre></td></tr><tr><td class='line-number'><a name='L55' href='#L55'><pre>55</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        stdout.flush()?;</pre></td></tr><tr><td class='line-number'><a name='L56' href='#L56'><pre>56</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        let mut line = String::new();</pre></td></tr><tr><td class='line-number'><a name='L57' href='#L57'><pre>57</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        let bytes = io::stdin().read_line(&amp;mut line)?;</pre></td></tr><tr><td class='line-number'><a name='L58' href='#L58'><pre>58</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        if bytes == 0 {</pre></td></tr><tr><td class='line-number'><a name='L59' href='#L59'><pre>59</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            return Ok(ReadResult::Eof);</pre></td></tr><tr><td class='line-number'><a name='L60' href='#L60'><pre>60</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L61' href='#L61'><pre>61</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        if line.ends_with(&apos;\n&apos;) {</pre></td></tr><tr><td class='line-number'><a name='L62' href='#L62'><pre>62</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            line.pop();</pre></td></tr><tr><td class='line-number'><a name='L63' href='#L63'><pre>63</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L64' href='#L64'><pre>64</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        if line.ends_with(&apos;\r&apos;) {</pre></td></tr><tr><td class='line-number'><a name='L65' href='#L65'><pre>65</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            line.pop();</pre></td></tr><tr><td class='line-number'><a name='L66' href='#L66'><pre>66</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L67' href='#L67'><pre>67</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        Ok(ReadResult::Line(line))</pre></td></tr><tr><td class='line-number'><a name='L68' href='#L68'><pre>68</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L69' href='#L69'><pre>69</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L70' href='#L70'><pre>70</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L71' href='#L71'><pre>71</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L72' href='#L72'><pre>72</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl LineEditor {</pre></td></tr><tr><td class='line-number'><a name='L73' href='#L73'><pre>73</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn read_line_unix(&amp;mut self, prompt: &amp;str) -&gt; io::Result&lt;ReadResult&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L74' href='#L74'><pre>74</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>_raw</span> = <span class='region red'>RawMode::new</span>()<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L75' href='#L75'><pre>75</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut stdout</span> = <span class='region red'>io::stdout</span>();</pre></td></tr><tr><td class='line-number'><a name='L76' href='#L76'><pre>76</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>write!</span>(<span class='region red'>stdout</span>, <span class='region red'>&quot;{}&quot;</span>, prompt)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L77' href='#L77'><pre>77</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>stdout</span>.<span class='region red'>flush</span>()<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L78' href='#L78'><pre>78</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L79' href='#L79'><pre>79</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut buffer</span>: <span class='region red'>Vec&lt;char&gt;</span> = <span class='region red'>Vec::new</span>();</pre></td></tr><tr><td class='line-number'><a name='L80' href='#L80'><pre>80</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut cursor</span>: <span class='region red'>usize</span> = <span class='region red'>0</span>;</pre></td></tr><tr><td class='line-number'><a name='L81' href='#L81'><pre>81</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut history_index</span> = <span class='region red'>self.history</span>.<span class='region red'>len</span>();</pre></td></tr><tr><td class='line-number'><a name='L82' href='#L82'><pre>82</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut saved_current</span>: <span class='region red'>Option&lt;Vec&lt;char&gt;&gt;</span> = <span class='region red'>None</span>;</pre></td></tr><tr><td class='line-number'><a name='L83' href='#L83'><pre>83</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L84' href='#L84'><pre>84</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>stdin</span> = <span class='region red'>io::stdin</span>();</pre></td></tr><tr><td class='line-number'><a name='L85' href='#L85'><pre>85</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut stdin</span> = <span class='region red'>stdin</span>.<span class='region red'>lock</span>();</pre></td></tr><tr><td class='line-number'><a name='L86' href='#L86'><pre>86</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        loop {</pre></td></tr><tr><td class='line-number'><a name='L87' href='#L87'><pre>87</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>mut byte</span> = <span class='region red'>[0u8; 1]</span>;</pre></td></tr><tr><td class='line-number'><a name='L88' href='#L88'><pre>88</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            if <span class='region red'>stdin</span>.<span class='region red'>read</span>(<span class='region red'>&amp;mut byte</span>)<span class='region red'>?</span> == 0 {</pre></td></tr><tr><td class='line-number'><a name='L89' href='#L89'><pre>89</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                return <span class='region red'>Ok(ReadResult::Eof)</span>;</pre></td></tr><tr><td class='line-number'><a name='L90' href='#L90'><pre>90</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L91' href='#L91'><pre>91</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            let <span class='region red'>b</span> = <span class='region red'>byte[0]</span>;</pre></td></tr><tr><td class='line-number'><a name='L92' href='#L92'><pre>92</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            match <span class='region red'>b</span> {</pre></td></tr><tr><td class='line-number'><a name='L93' href='#L93'><pre>93</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                b&apos;\n&apos; | b&apos;\r&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L94' href='#L94'><pre>94</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>write!</span>(<span class='region red'>stdout</span>, <span class='region red'>&quot;\r\n&quot;</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L95' href='#L95'><pre>95</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>stdout</span>.<span class='region red'>flush</span>()<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L96' href='#L96'><pre>96</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    let <span class='region red'>line</span>: <span class='region red'>String</span> = <span class='region red'>buffer</span>.<span class='region red'>into_iter</span>().<span class='region red'>collect</span>();</pre></td></tr><tr><td class='line-number'><a name='L97' href='#L97'><pre>97</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    return <span class='region red'>Ok(ReadResult::Line(line))</span>;</pre></td></tr><tr><td class='line-number'><a name='L98' href='#L98'><pre>98</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L99' href='#L99'><pre>99</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                0x03 =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L100' href='#L100'><pre>100</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>write!</span>(<span class='region red'>stdout</span>, <span class='region red'>&quot;^C\r\n&quot;</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L101' href='#L101'><pre>101</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>stdout</span>.<span class='region red'>flush</span>()<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L102' href='#L102'><pre>102</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    return <span class='region red'>Ok(ReadResult::Interrupted)</span>;</pre></td></tr><tr><td class='line-number'><a name='L103' href='#L103'><pre>103</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L104' href='#L104'><pre>104</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                0x04 =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L105' href='#L105'><pre>105</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    if <span class='region red'>buffer</span>.<span class='region red'>is_empty</span>() {</pre></td></tr><tr><td class='line-number'><a name='L106' href='#L106'><pre>106</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        return <span class='region red'>Ok(ReadResult::Eof)</span>;</pre></td></tr><tr><td class='line-number'><a name='L107' href='#L107'><pre>107</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L108' href='#L108'><pre>108</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L109' href='#L109'><pre>109</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                0x7f | 0x08 =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L110' href='#L110'><pre>110</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    if <span class='region red'>cursor &gt; 0</span> {</pre></td></tr><tr><td class='line-number'><a name='L111' href='#L111'><pre>111</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>cursor -= 1</span>;</pre></td></tr><tr><td class='line-number'><a name='L112' href='#L112'><pre>112</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>buffer</span>.<span class='region red'>remove</span>(<span class='region red'>cursor</span>);</pre></td></tr><tr><td class='line-number'><a name='L113' href='#L113'><pre>113</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>history_index = self.history.len()</span>;</pre></td></tr><tr><td class='line-number'><a name='L114' href='#L114'><pre>114</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>saved_current</span> = <span class='region red'>None</span>;</pre></td></tr><tr><td class='line-number'><a name='L115' href='#L115'><pre>115</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>refresh_line</span>(<span class='region red'>&amp;mut stdout</span>, <span class='region red'>prompt</span>, <span class='region red'>&amp;buffer</span>, <span class='region red'>cursor</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L116' href='#L116'><pre>116</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L117' href='#L117'><pre>117</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L118' href='#L118'><pre>118</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                0x1b =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L119' href='#L119'><pre>119</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    let <span class='region red'>context</span> = <span class='region red'>EscapeContext {</span></pre></td></tr><tr><td class='line-number'><a name='L120' href='#L120'><pre>120</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        history: </span><span class='region red'>&amp;self.history</span><span class='region red'>,</span></pre></td></tr><tr><td class='line-number'><a name='L121' href='#L121'><pre>121</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        history_index: &amp;mut history_index,</span></pre></td></tr><tr><td class='line-number'><a name='L122' href='#L122'><pre>122</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                        saved_current: &amp;mut saved_current,</span></pre></td></tr><tr><td class='line-number'><a name='L123' href='#L123'><pre>123</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    }</span>;</pre></td></tr><tr><td class='line-number'><a name='L124' href='#L124'><pre>124</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>handle_escape</span>(</pre></td></tr><tr><td class='line-number'><a name='L125' href='#L125'><pre>125</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>&amp;mut stdin</span>,</pre></td></tr><tr><td class='line-number'><a name='L126' href='#L126'><pre>126</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>&amp;mut stdout</span>,</pre></td></tr><tr><td class='line-number'><a name='L127' href='#L127'><pre>127</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>prompt</span>,</pre></td></tr><tr><td class='line-number'><a name='L128' href='#L128'><pre>128</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>&amp;mut buffer</span>,</pre></td></tr><tr><td class='line-number'><a name='L129' href='#L129'><pre>129</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>&amp;mut cursor</span>,</pre></td></tr><tr><td class='line-number'><a name='L130' href='#L130'><pre>130</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>context</span>,</pre></td></tr><tr><td class='line-number'><a name='L131' href='#L131'><pre>131</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    )<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L132' href='#L132'><pre>132</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L133' href='#L133'><pre>133</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                _ =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L134' href='#L134'><pre>134</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    if let Some(<span class='region red'>ch</span>) = <span class='region red'>read_utf8_char</span>(<span class='region red'>b</span>, <span class='region red'>&amp;mut stdin</span>)<span class='region red'>?</span> {</pre></td></tr><tr><td class='line-number'><a name='L135' href='#L135'><pre>135</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        if <span class='region red'>ch</span>.<span class='region red'>is_control</span>() {</pre></td></tr><tr><td class='line-number'><a name='L136' href='#L136'><pre>136</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                            <span class='region red'>continue</span>;</pre></td></tr><tr><td class='line-number'><a name='L137' href='#L137'><pre>137</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L138' href='#L138'><pre>138</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>buffer</span>.<span class='region red'>insert</span>(<span class='region red'>cursor</span>, <span class='region red'>ch</span>);</pre></td></tr><tr><td class='line-number'><a name='L139' href='#L139'><pre>139</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>cursor += 1</span>;</pre></td></tr><tr><td class='line-number'><a name='L140' href='#L140'><pre>140</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>history_index = self.history.len()</span>;</pre></td></tr><tr><td class='line-number'><a name='L141' href='#L141'><pre>141</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>saved_current</span> = <span class='region red'>None</span>;</pre></td></tr><tr><td class='line-number'><a name='L142' href='#L142'><pre>142</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                        <span class='region red'>refresh_line</span>(<span class='region red'>&amp;mut stdout</span>, <span class='region red'>prompt</span>, <span class='region red'>&amp;buffer</span>, <span class='region red'>cursor</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L143' href='#L143'><pre>143</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L144' href='#L144'><pre>144</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                }</pre></td></tr><tr><td class='line-number'><a name='L145' href='#L145'><pre>145</pre></a></td><td class='skipped-line'></td><td class='code'><pre>            }</pre></td></tr><tr><td class='line-number'><a name='L146' href='#L146'><pre>146</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L147' href='#L147'><pre>147</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L148' href='#L148'><pre>148</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L149' href='#L149'><pre>149</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L150' href='#L150'><pre>150</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>fn read_utf8_char&lt;R: Read&gt;(first: u8, reader: &amp;mut R) -&gt; io::Result&lt;Option&lt;char&gt;&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L151' href='#L151'><pre>151</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>width</span> = match <span class='region red'>first</span> {</pre></td></tr><tr><td class='line-number'><a name='L152' href='#L152'><pre>152</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>0x00..=0x7f</span> =&gt; <span class='region red'>1</span>,</pre></td></tr><tr><td class='line-number'><a name='L153' href='#L153'><pre>153</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>0xc2..=0xdf</span> =&gt; <span class='region red'>2</span>,</pre></td></tr><tr><td class='line-number'><a name='L154' href='#L154'><pre>154</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>0xe0..=0xef</span> =&gt; <span class='region red'>3</span>,</pre></td></tr><tr><td class='line-number'><a name='L155' href='#L155'><pre>155</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>0xf0..=0xf4</span> =&gt; <span class='region red'>4</span>,</pre></td></tr><tr><td class='line-number'><a name='L156' href='#L156'><pre>156</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        _ =&gt; return <span class='region red'>Ok(None)</span>,</pre></td></tr><tr><td class='line-number'><a name='L157' href='#L157'><pre>157</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    };</pre></td></tr><tr><td class='line-number'><a name='L158' href='#L158'><pre>158</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut buf</span> = <span class='region red'>[0u8; 4]</span>;</pre></td></tr><tr><td class='line-number'><a name='L159' href='#L159'><pre>159</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>buf[0] = first</span>;</pre></td></tr><tr><td class='line-number'><a name='L160' href='#L160'><pre>160</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    for <span class='region red'>idx</span> in 1..<span class='region red'>width</span> {</pre></td></tr><tr><td class='line-number'><a name='L161' href='#L161'><pre>161</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>reader</span>.<span class='region red'>read_exact</span>(<span class='region red'>&amp;mut </span><span class='region red'>buf</span><span class='region red'>[idx..idx + 1]</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L162' href='#L162'><pre>162</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L163' href='#L163'><pre>163</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    match <span class='region red'>std::str::from_utf8</span><span class='region red'>(&amp;buf[..width])</span> {</pre></td></tr><tr><td class='line-number'><a name='L164' href='#L164'><pre>164</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        Ok(<span class='region red'>s</span>) =&gt; <span class='region red'>Ok(s.chars().next())</span>,</pre></td></tr><tr><td class='line-number'><a name='L165' href='#L165'><pre>165</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        Err(_) =&gt; <span class='region red'>Ok(None)</span>,</pre></td></tr><tr><td class='line-number'><a name='L166' href='#L166'><pre>166</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L167' href='#L167'><pre>167</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L168' href='#L168'><pre>168</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L169' href='#L169'><pre>169</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L170' href='#L170'><pre>170</pre></a></td><td class='skipped-line'></td><td class='code'><pre>struct EscapeContext&lt;&apos;a&gt; {</pre></td></tr><tr><td class='line-number'><a name='L171' href='#L171'><pre>171</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    history: &amp;&apos;a History,</pre></td></tr><tr><td class='line-number'><a name='L172' href='#L172'><pre>172</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    history_index: &amp;&apos;a mut usize,</pre></td></tr><tr><td class='line-number'><a name='L173' href='#L173'><pre>173</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    saved_current: &amp;&apos;a mut Option&lt;Vec&lt;char&gt;&gt;,</pre></td></tr><tr><td class='line-number'><a name='L174' href='#L174'><pre>174</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L175' href='#L175'><pre>175</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L176' href='#L176'><pre>176</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L177' href='#L177'><pre>177</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>fn handle_escape&lt;R: Read, W: Write&gt;(</span></pre></td></tr><tr><td class='line-number'><a name='L178' href='#L178'><pre>178</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    reader: &amp;mut R,</span></pre></td></tr><tr><td class='line-number'><a name='L179' href='#L179'><pre>179</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    writer: &amp;mut W,</span></pre></td></tr><tr><td class='line-number'><a name='L180' href='#L180'><pre>180</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    prompt: &amp;str,</span></pre></td></tr><tr><td class='line-number'><a name='L181' href='#L181'><pre>181</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    buffer: &amp;mut Vec&lt;char&gt;,</span></pre></td></tr><tr><td class='line-number'><a name='L182' href='#L182'><pre>182</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    cursor: &amp;mut usize,</span></pre></td></tr><tr><td class='line-number'><a name='L183' href='#L183'><pre>183</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    context: EscapeContext&lt;&apos;_&gt;,</span></pre></td></tr><tr><td class='line-number'><a name='L184' href='#L184'><pre>184</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>) -&gt; io::Result&lt;()&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L185' href='#L185'><pre>185</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    let EscapeContext {</pre></td></tr><tr><td class='line-number'><a name='L186' href='#L186'><pre>186</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>history</span>,</pre></td></tr><tr><td class='line-number'><a name='L187' href='#L187'><pre>187</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>history_index</span>,</pre></td></tr><tr><td class='line-number'><a name='L188' href='#L188'><pre>188</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>saved_current</span>,</pre></td></tr><tr><td class='line-number'><a name='L189' href='#L189'><pre>189</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    } = <span class='region red'>context</span>;</pre></td></tr><tr><td class='line-number'><a name='L190' href='#L190'><pre>190</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>mut seq</span> = <span class='region red'>[0u8; 2]</span>;</pre></td></tr><tr><td class='line-number'><a name='L191' href='#L191'><pre>191</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    if <span class='region red'>reader</span><span class='region red'>.</span><span class='region red'>read_exact</span><span class='region red'>(&amp;mut seq[..1])</span>.<span class='region red'>is_err</span>() {</pre></td></tr><tr><td class='line-number'><a name='L192' href='#L192'><pre>192</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        return <span class='region red'>Ok(())</span>;</pre></td></tr><tr><td class='line-number'><a name='L193' href='#L193'><pre>193</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L194' href='#L194'><pre>194</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    if <span class='region red'>seq[0] != b&apos;[&apos;</span> {</pre></td></tr><tr><td class='line-number'><a name='L195' href='#L195'><pre>195</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        return <span class='region red'>Ok(())</span>;</pre></td></tr><tr><td class='line-number'><a name='L196' href='#L196'><pre>196</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L197' href='#L197'><pre>197</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    if <span class='region red'>reader</span><span class='region red'>.</span><span class='region red'>read_exact</span><span class='region red'>(&amp;mut seq[1..2])</span>.<span class='region red'>is_err</span>() {</pre></td></tr><tr><td class='line-number'><a name='L198' href='#L198'><pre>198</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        return <span class='region red'>Ok(())</span>;</pre></td></tr><tr><td class='line-number'><a name='L199' href='#L199'><pre>199</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L200' href='#L200'><pre>200</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    match <span class='region red'>seq[1]</span> {</pre></td></tr><tr><td class='line-number'><a name='L201' href='#L201'><pre>201</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        b&apos;A&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L202' href='#L202'><pre>202</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            if <span class='region red'>*history_index &gt; 0</span> {</pre></td></tr><tr><td class='line-number'><a name='L203' href='#L203'><pre>203</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                if <span class='region red'>*history_index</span><span class='region red'> == history.len()</span> <span class='region red'>{</span></pre></td></tr><tr><td class='line-number'><a name='L204' href='#L204'><pre>204</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                    </span><span class='region red'>*saved_current</span><span class='region red'> = Some(buffer.clone());</span></pre></td></tr><tr><td class='line-number'><a name='L205' href='#L205'><pre>205</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>                </span><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L206' href='#L206'><pre>206</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>*history_index -= 1</span>;</pre></td></tr><tr><td class='line-number'><a name='L207' href='#L207'><pre>207</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                if let Some(<span class='region red'>entry</span>) = <span class='region red'>history</span><span class='region red'>.get(*history_index)</span> {</pre></td></tr><tr><td class='line-number'><a name='L208' href='#L208'><pre>208</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>*buffer</span> = <span class='region red'>entry</span>.<span class='region red'>chars</span>().<span class='region red'>collect</span>();</pre></td></tr><tr><td class='line-number'><a name='L209' href='#L209'><pre>209</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>*cursor = buffer.len()</span>;</pre></td></tr><tr><td class='line-number'><a name='L210' href='#L210'><pre>210</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>refresh_line</span>(<span class='region red'>writer</span>, <span class='region red'>prompt</span>, <span class='region red'>buffer</span>, <span class='region red'>*cursor</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L211' href='#L211'><pre>211</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L212' href='#L212'><pre>212</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L213' href='#L213'><pre>213</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L214' href='#L214'><pre>214</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        b&apos;B&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L215' href='#L215'><pre>215</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            if <span class='region red'>*history_index</span><span class='region red'> &lt; history.len()</span> {</pre></td></tr><tr><td class='line-number'><a name='L216' href='#L216'><pre>216</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>*history_index += 1</span>;</pre></td></tr><tr><td class='line-number'><a name='L217' href='#L217'><pre>217</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                let <span class='region red'>restored</span> = if <span class='region red'>*history_index</span><span class='region red'> == history.len()</span> {</pre></td></tr><tr><td class='line-number'><a name='L218' href='#L218'><pre>218</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>saved_current</span>.<span class='region red'>clone</span>().<span class='region red'>unwrap_or_default</span>()</pre></td></tr><tr><td class='line-number'><a name='L219' href='#L219'><pre>219</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                } else {</pre></td></tr><tr><td class='line-number'><a name='L220' href='#L220'><pre>220</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                    <span class='region red'>history</span><span class='region red'>.</span><span class='region red'>get</span><span class='region red'>(*history_index).unwrap()</span>.<span class='region red'>chars</span>().<span class='region red'>collect</span>()</pre></td></tr><tr><td class='line-number'><a name='L221' href='#L221'><pre>221</pre></a></td><td class='skipped-line'></td><td class='code'><pre>                };</pre></td></tr><tr><td class='line-number'><a name='L222' href='#L222'><pre>222</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>*buffer</span> = <span class='region red'>restored</span>;</pre></td></tr><tr><td class='line-number'><a name='L223' href='#L223'><pre>223</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>*cursor = buffer.len()</span>;</pre></td></tr><tr><td class='line-number'><a name='L224' href='#L224'><pre>224</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>refresh_line</span>(<span class='region red'>writer</span>, <span class='region red'>prompt</span>, <span class='region red'>buffer</span>, <span class='region red'>*cursor</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L225' href='#L225'><pre>225</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L226' href='#L226'><pre>226</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L227' href='#L227'><pre>227</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        b&apos;C&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L228' href='#L228'><pre>228</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            if <span class='region red'>*cursor</span><span class='region red'> &lt; buffer.len()</span> {</pre></td></tr><tr><td class='line-number'><a name='L229' href='#L229'><pre>229</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>*cursor += 1</span>;</pre></td></tr><tr><td class='line-number'><a name='L230' href='#L230'><pre>230</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>write!</span>(<span class='region red'>writer</span>, <span class='region red'>&quot;\x1b[C&quot;</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L231' href='#L231'><pre>231</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>writer</span>.<span class='region red'>flush</span>()<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L232' href='#L232'><pre>232</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L233' href='#L233'><pre>233</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L234' href='#L234'><pre>234</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        b&apos;D&apos; =&gt; {</pre></td></tr><tr><td class='line-number'><a name='L235' href='#L235'><pre>235</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            if <span class='region red'>*cursor &gt; 0</span> {</pre></td></tr><tr><td class='line-number'><a name='L236' href='#L236'><pre>236</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>*cursor -= 1</span>;</pre></td></tr><tr><td class='line-number'><a name='L237' href='#L237'><pre>237</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>write!</span>(<span class='region red'>writer</span>, <span class='region red'>&quot;\x1b[D&quot;</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L238' href='#L238'><pre>238</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>                <span class='region red'>writer</span>.<span class='region red'>flush</span>()<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L239' href='#L239'><pre>239</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L240' href='#L240'><pre>240</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L241' href='#L241'><pre>241</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        _ =&gt; <span class='region red'>{}</span></pre></td></tr><tr><td class='line-number'><a name='L242' href='#L242'><pre>242</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L243' href='#L243'><pre>243</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>Ok(())</span></pre></td></tr><tr><td class='line-number'><a name='L244' href='#L244'><pre>244</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L245' href='#L245'><pre>245</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L246' href='#L246'><pre>246</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L247' href='#L247'><pre>247</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>fn refresh_line&lt;W: Write&gt;(</span></pre></td></tr><tr><td class='line-number'><a name='L248' href='#L248'><pre>248</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    writer: &amp;mut W,</span></pre></td></tr><tr><td class='line-number'><a name='L249' href='#L249'><pre>249</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    prompt: &amp;str,</span></pre></td></tr><tr><td class='line-number'><a name='L250' href='#L250'><pre>250</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    buffer: &amp;[char],</span></pre></td></tr><tr><td class='line-number'><a name='L251' href='#L251'><pre>251</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>    cursor: usize,</span></pre></td></tr><tr><td class='line-number'><a name='L252' href='#L252'><pre>252</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>) -&gt; io::Result&lt;()&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L253' href='#L253'><pre>253</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>rendered</span>: <span class='region red'>String</span> = <span class='region red'>buffer</span>.<span class='region red'>iter</span>().<span class='region red'>collect</span>();</pre></td></tr><tr><td class='line-number'><a name='L254' href='#L254'><pre>254</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>write!</span>(<span class='region red'>writer</span>, <span class='region red'>&quot;\r{}{}&quot;</span>, prompt, rendered)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L255' href='#L255'><pre>255</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>write!</span>(<span class='region red'>writer</span>, <span class='region red'>&quot;\x1b[K&quot;</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L256' href='#L256'><pre>256</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>total</span> = <span class='region red'>prompt</span><span class='region red'>.</span><span class='region red'>chars</span><span class='region red'>().</span><span class='region red'>count</span><span class='region red'>() + buffer.len()</span>;</pre></td></tr><tr><td class='line-number'><a name='L257' href='#L257'><pre>257</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    let <span class='region red'>target</span> = <span class='region red'>prompt</span><span class='region red'>.</span><span class='region red'>chars</span><span class='region red'>().count() + cursor</span>;</pre></td></tr><tr><td class='line-number'><a name='L258' href='#L258'><pre>258</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    if <span class='region red'>total &gt; target</span> {</pre></td></tr><tr><td class='line-number'><a name='L259' href='#L259'><pre>259</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>write!</span>(<span class='region red'>writer</span>, <span class='region red'>&quot;\x1b[{}D&quot;</span>, <span class='region red'>total - target</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L260' href='#L260'><pre>260</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L261' href='#L261'><pre>261</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>writer</span>.<span class='region red'>flush</span>()</pre></td></tr><tr><td class='line-number'><a name='L262' href='#L262'><pre>262</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L263' href='#L263'><pre>263</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L264' href='#L264'><pre>264</pre></a></td><td class='skipped-line'></td><td class='code'><pre>struct History {</pre></td></tr><tr><td class='line-number'><a name='L265' href='#L265'><pre>265</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    entries: Vec&lt;String&gt;,</pre></td></tr><tr><td class='line-number'><a name='L266' href='#L266'><pre>266</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    path: Option&lt;PathBuf&gt;,</pre></td></tr><tr><td class='line-number'><a name='L267' href='#L267'><pre>267</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    max_entries: usize,</pre></td></tr><tr><td class='line-number'><a name='L268' href='#L268'><pre>268</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L269' href='#L269'><pre>269</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L270' href='#L270'><pre>270</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl History {</pre></td></tr><tr><td class='line-number'><a name='L271' href='#L271'><pre>271</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn load() -&gt; Self</span> {</pre></td></tr><tr><td class='line-number'><a name='L272' href='#L272'><pre>272</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>path</span> = <span class='region red'>history_path</span>();</pre></td></tr><tr><td class='line-number'><a name='L273' href='#L273'><pre>273</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>entries</span> = <span class='region red'>path</span></pre></td></tr><tr><td class='line-number'><a name='L274' href='#L274'><pre>274</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            .<span class='region red'>as_ref</span>()</pre></td></tr><tr><td class='line-number'><a name='L275' href='#L275'><pre>275</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            .<span class='region red'>and_then</span>(|p| <span class='region red'>fs::read_to_string</span>(<span class='region red'>p</span>).<span class='region red'>ok</span>())</pre></td></tr><tr><td class='line-number'><a name='L276' href='#L276'><pre>276</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            .<span class='region red'>map</span>(|content| <span class='region red'>content.lines()</span>.<span class='region red'>map</span>(|s| <span class='region red'>s</span>.<span class='region red'>to_string</span>()).<span class='region red'>collect</span>())</pre></td></tr><tr><td class='line-number'><a name='L277' href='#L277'><pre>277</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            .<span class='region red'>unwrap_or_default</span>();</pre></td></tr><tr><td class='line-number'><a name='L278' href='#L278'><pre>278</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>Self {</span></pre></td></tr><tr><td class='line-number'><a name='L279' href='#L279'><pre>279</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            entries,</span></pre></td></tr><tr><td class='line-number'><a name='L280' href='#L280'><pre>280</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            path,</span></pre></td></tr><tr><td class='line-number'><a name='L281' href='#L281'><pre>281</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            max_entries: 1000,</span></pre></td></tr><tr><td class='line-number'><a name='L282' href='#L282'><pre>282</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        }</span></pre></td></tr><tr><td class='line-number'><a name='L283' href='#L283'><pre>283</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L284' href='#L284'><pre>284</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L285' href='#L285'><pre>285</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>    fn add(&amp;mut self, entry: &amp;str) {</pre></td></tr><tr><td class='line-number'><a name='L286' href='#L286'><pre>286</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        let trimmed = entry.trim();</pre></td></tr><tr><td class='line-number'><a name='L287' href='#L287'><pre>287</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        if trimmed.is_empty() {</pre></td></tr><tr><td class='line-number'><a name='L288' href='#L288'><pre>288</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>return</span>;</pre></td></tr><tr><td class='line-number'><a name='L289' href='#L289'><pre>289</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L290' href='#L290'><pre>290</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>        if self.entries.last().map(|s| <div class='tooltip'>s<span class='tooltip-content'>2</span></div>.<div class='tooltip'>as_str<span class='tooltip-content'>2</span></div>()) == Some(trimmed) {</pre></td></tr><tr><td class='line-number'><a name='L291' href='#L291'><pre>291</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            return;</pre></td></tr><tr><td class='line-number'><a name='L292' href='#L292'><pre>292</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L293' href='#L293'><pre>293</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        if self.entries.len() == self.max_entries <span class='region red'>{</span></pre></td></tr><tr><td class='line-number'><a name='L294' href='#L294'><pre>294</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            self.entries.remove(0);</span></pre></td></tr><tr><td class='line-number'><a name='L295' href='#L295'><pre>295</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre><span class='region red'>        </span>}</pre></td></tr><tr><td class='line-number'><a name='L296' href='#L296'><pre>296</pre></a></td><td class='covered-line'><pre>2</pre></td><td class='code'><pre>        self.entries.push(trimmed.to_string());</pre></td></tr><tr><td class='line-number'><a name='L297' href='#L297'><pre>297</pre></a></td><td class='covered-line'><pre>3</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L298' href='#L298'><pre>298</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L299' href='#L299'><pre>299</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn len(&amp;self) -&gt; usize</span> {</pre></td></tr><tr><td class='line-number'><a name='L300' href='#L300'><pre>300</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>self.entries</span>.<span class='region red'>len</span>()</pre></td></tr><tr><td class='line-number'><a name='L301' href='#L301'><pre>301</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L302' href='#L302'><pre>302</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L303' href='#L303'><pre>303</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn get(&amp;self, idx: usize) -&gt; Option&lt;&amp;str&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L304' href='#L304'><pre>304</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>self.entries</span><span class='region red'>.get(idx)</span>.<span class='region red'>map</span>(|s| <span class='region red'>s</span>.<span class='region red'>as_str</span>())</pre></td></tr><tr><td class='line-number'><a name='L305' href='#L305'><pre>305</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L306' href='#L306'><pre>306</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L307' href='#L307'><pre>307</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn save(&amp;self) -&gt; io::Result&lt;()&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L308' href='#L308'><pre>308</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let Some(<span class='region red'>path</span>) = <span class='region red'>&amp;self.path</span> else {</pre></td></tr><tr><td class='line-number'><a name='L309' href='#L309'><pre>309</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            return <span class='region red'>Ok(())</span>;</pre></td></tr><tr><td class='line-number'><a name='L310' href='#L310'><pre>310</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        };</pre></td></tr><tr><td class='line-number'><a name='L311' href='#L311'><pre>311</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        if let Some(<span class='region red'>parent</span>) = <span class='region red'>path.parent()</span> {</pre></td></tr><tr><td class='line-number'><a name='L312' href='#L312'><pre>312</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>fs::create_dir_all</span>(<span class='region red'>parent</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L313' href='#L313'><pre>313</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L314' href='#L314'><pre>314</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut file</span> = <span class='region red'>fs::File::create</span>(<span class='region red'>path</span>)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L315' href='#L315'><pre>315</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        for <span class='region red'>entry</span> in <span class='region red'>&amp;self.entries</span> {</pre></td></tr><tr><td class='line-number'><a name='L316' href='#L316'><pre>316</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            <span class='region red'>writeln!</span>(<span class='region red'>file</span>, <span class='region red'>&quot;{}&quot;</span>, entry)<span class='region red'>?</span>;</pre></td></tr><tr><td class='line-number'><a name='L317' href='#L317'><pre>317</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        }</pre></td></tr><tr><td class='line-number'><a name='L318' href='#L318'><pre>318</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>Ok(())</span></pre></td></tr><tr><td class='line-number'><a name='L319' href='#L319'><pre>319</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L320' href='#L320'><pre>320</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L321' href='#L321'><pre>321</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L322' href='#L322'><pre>322</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>fn history_path() -&gt; Option&lt;PathBuf&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L323' href='#L323'><pre>323</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    if let Some(<span class='region red'>path</span>) = <span class='region red'>env::var_os(&quot;TYPELANG_HISTORY_FILE&quot;)</span> {</pre></td></tr><tr><td class='line-number'><a name='L324' href='#L324'><pre>324</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        return <span class='region red'>Some(PathBuf::from(path))</span>;</pre></td></tr><tr><td class='line-number'><a name='L325' href='#L325'><pre>325</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L326' href='#L326'><pre>326</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>env::var_os</span>(&quot;HOME&quot;)</pre></td></tr><tr><td class='line-number'><a name='L327' href='#L327'><pre>327</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        .<span class='region red'>or_else</span>(|| <span class='region red'>env::var_os</span>(&quot;USERPROFILE&quot;))</pre></td></tr><tr><td class='line-number'><a name='L328' href='#L328'><pre>328</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        .<span class='region red'>map</span>(PathBuf::from)</pre></td></tr><tr><td class='line-number'><a name='L329' href='#L329'><pre>329</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        .<span class='region red'>map</span>(|home| <span class='region red'>home</span>.<span class='region red'>join</span>(&quot;.typelang_repl_history&quot;))</pre></td></tr><tr><td class='line-number'><a name='L330' href='#L330'><pre>330</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L331' href='#L331'><pre>331</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L332' href='#L332'><pre>332</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L333' href='#L333'><pre>333</pre></a></td><td class='skipped-line'></td><td class='code'><pre>struct RawMode {</pre></td></tr><tr><td class='line-number'><a name='L334' href='#L334'><pre>334</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    original: Termios,</pre></td></tr><tr><td class='line-number'><a name='L335' href='#L335'><pre>335</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L336' href='#L336'><pre>336</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L337' href='#L337'><pre>337</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L338' href='#L338'><pre>338</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl RawMode {</pre></td></tr><tr><td class='line-number'><a name='L339' href='#L339'><pre>339</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn new() -&gt; io::Result&lt;Self&gt;</span> {</pre></td></tr><tr><td class='line-number'><a name='L340' href='#L340'><pre>340</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>fd</span> = <span class='region red'>0</span>; // stdin</pre></td></tr><tr><td class='line-number'><a name='L341' href='#L341'><pre>341</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut termios</span> = <span class='region red'>Termios::default</span>();</pre></td></tr><tr><td class='line-number'><a name='L342' href='#L342'><pre>342</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        if <span class='region red'>unsafe { </span><span class='region red'>tcgetattr</span><span class='region red'>(</span><span class='region red'>fd</span><span class='region red'>, &amp;mut termios as *mut _) } != 0</span> {</pre></td></tr><tr><td class='line-number'><a name='L343' href='#L343'><pre>343</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            return <span class='region red'>Err(io::Error::last_os_error())</span>;</pre></td></tr><tr><td class='line-number'><a name='L344' href='#L344'><pre>344</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L345' href='#L345'><pre>345</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>mut raw</span> = <span class='region red'>termios</span>;</pre></td></tr><tr><td class='line-number'><a name='L346' href='#L346'><pre>346</pre></a></td><td class='skipped-line'></td><td class='code'><pre>        // `cfmakeraw` に任せることで OS ごとの差分を吸収して Raw モードへ移行する。</pre></td></tr><tr><td class='line-number'><a name='L347' href='#L347'><pre>347</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>unsafe {</span></pre></td></tr><tr><td class='line-number'><a name='L348' href='#L348'><pre>348</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            </span><span class='region red'>cfmakeraw</span><span class='region red'>(&amp;mut raw as *mut _);</span></pre></td></tr><tr><td class='line-number'><a name='L349' href='#L349'><pre>349</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        }</span></pre></td></tr><tr><td class='line-number'><a name='L350' href='#L350'><pre>350</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        if <span class='region red'>unsafe { </span><span class='region red'>tcsetattr</span><span class='region red'>(</span><span class='region red'>fd</span><span class='region red'>, TCSANOW, &amp;raw as *const _) } != 0</span> {</pre></td></tr><tr><td class='line-number'><a name='L351' href='#L351'><pre>351</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>            return <span class='region red'>Err(io::Error::last_os_error())</span>;</pre></td></tr><tr><td class='line-number'><a name='L352' href='#L352'><pre>352</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L353' href='#L353'><pre>353</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>Ok(Self { original: termios })</span></pre></td></tr><tr><td class='line-number'><a name='L354' href='#L354'><pre>354</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L355' href='#L355'><pre>355</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L356' href='#L356'><pre>356</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L357' href='#L357'><pre>357</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L358' href='#L358'><pre>358</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl Drop for RawMode {</pre></td></tr><tr><td class='line-number'><a name='L359' href='#L359'><pre>359</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn drop(&amp;mut self)</span> {</pre></td></tr><tr><td class='line-number'><a name='L360' href='#L360'><pre>360</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        let <span class='region red'>fd</span> = <span class='region red'>0</span>;</pre></td></tr><tr><td class='line-number'><a name='L361' href='#L361'><pre>361</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>unsafe {</span></pre></td></tr><tr><td class='line-number'><a name='L362' href='#L362'><pre>362</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            let _ = </span><span class='region red'>tcsetattr</span><span class='region red'>(</span><span class='region red'>fd</span><span class='region red'>, TCSANOW, &amp;self.original as *const _);</span></pre></td></tr><tr><td class='line-number'><a name='L363' href='#L363'><pre>363</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        }</span></pre></td></tr><tr><td class='line-number'><a name='L364' href='#L364'><pre>364</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L365' href='#L365'><pre>365</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L366' href='#L366'><pre>366</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L367' href='#L367'><pre>367</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L368' href='#L368'><pre>368</pre></a></td><td class='skipped-line'></td><td class='code'><pre>const TCSANOW: i32 = 0;</pre></td></tr><tr><td class='line-number'><a name='L369' href='#L369'><pre>369</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L370' href='#L370'><pre>370</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L371' href='#L371'><pre>371</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[repr(C)]</pre></td></tr><tr><td class='line-number'><a name='L372' href='#L372'><pre>372</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[derive(Clone, Copy)]</pre></td></tr><tr><td class='line-number'><a name='L373' href='#L373'><pre>373</pre></a></td><td class='skipped-line'></td><td class='code'><pre>struct Termios {</pre></td></tr><tr><td class='line-number'><a name='L374' href='#L374'><pre>374</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    c_iflag: u32,</pre></td></tr><tr><td class='line-number'><a name='L375' href='#L375'><pre>375</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    c_oflag: u32,</pre></td></tr><tr><td class='line-number'><a name='L376' href='#L376'><pre>376</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    c_cflag: u32,</pre></td></tr><tr><td class='line-number'><a name='L377' href='#L377'><pre>377</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    c_lflag: u32,</pre></td></tr><tr><td class='line-number'><a name='L378' href='#L378'><pre>378</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    c_line: u8,</pre></td></tr><tr><td class='line-number'><a name='L379' href='#L379'><pre>379</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    c_cc: [u8; NCCS],</pre></td></tr><tr><td class='line-number'><a name='L380' href='#L380'><pre>380</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    c_ispeed: u32,</pre></td></tr><tr><td class='line-number'><a name='L381' href='#L381'><pre>381</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    c_ospeed: u32,</pre></td></tr><tr><td class='line-number'><a name='L382' href='#L382'><pre>382</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L383' href='#L383'><pre>383</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L384' href='#L384'><pre>384</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L385' href='#L385'><pre>385</pre></a></td><td class='skipped-line'></td><td class='code'><pre>impl Default for Termios {</pre></td></tr><tr><td class='line-number'><a name='L386' href='#L386'><pre>386</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>fn default() -&gt; Self</span> {</pre></td></tr><tr><td class='line-number'><a name='L387' href='#L387'><pre>387</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>        <span class='region red'>Self {</span></pre></td></tr><tr><td class='line-number'><a name='L388' href='#L388'><pre>388</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            c_iflag: 0,</span></pre></td></tr><tr><td class='line-number'><a name='L389' href='#L389'><pre>389</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            c_oflag: 0,</span></pre></td></tr><tr><td class='line-number'><a name='L390' href='#L390'><pre>390</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            c_cflag: 0,</span></pre></td></tr><tr><td class='line-number'><a name='L391' href='#L391'><pre>391</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            c_lflag: 0,</span></pre></td></tr><tr><td class='line-number'><a name='L392' href='#L392'><pre>392</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            c_line: 0,</span></pre></td></tr><tr><td class='line-number'><a name='L393' href='#L393'><pre>393</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            c_cc: [0; NCCS],</span></pre></td></tr><tr><td class='line-number'><a name='L394' href='#L394'><pre>394</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            c_ispeed: 0,</span></pre></td></tr><tr><td class='line-number'><a name='L395' href='#L395'><pre>395</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>            c_ospeed: 0,</span></pre></td></tr><tr><td class='line-number'><a name='L396' href='#L396'><pre>396</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre><span class='region red'>        }</span></pre></td></tr><tr><td class='line-number'><a name='L397' href='#L397'><pre>397</pre></a></td><td class='uncovered-line'><pre>0</pre></td><td class='code'><pre>    <span class='region red'>}</span></pre></td></tr><tr><td class='line-number'><a name='L398' href='#L398'><pre>398</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L399' href='#L399'><pre>399</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L400' href='#L400'><pre>400</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L401' href='#L401'><pre>401</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(any(target_os = &quot;linux&quot;, target_os = &quot;android&quot;))]</pre></td></tr><tr><td class='line-number'><a name='L402' href='#L402'><pre>402</pre></a></td><td class='skipped-line'></td><td class='code'><pre>const NCCS: usize = 32;</pre></td></tr><tr><td class='line-number'><a name='L403' href='#L403'><pre>403</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(any(</pre></td></tr><tr><td class='line-number'><a name='L404' href='#L404'><pre>404</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;macos&quot;,</pre></td></tr><tr><td class='line-number'><a name='L405' href='#L405'><pre>405</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;ios&quot;,</pre></td></tr><tr><td class='line-number'><a name='L406' href='#L406'><pre>406</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;freebsd&quot;,</pre></td></tr><tr><td class='line-number'><a name='L407' href='#L407'><pre>407</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;dragonfly&quot;,</pre></td></tr><tr><td class='line-number'><a name='L408' href='#L408'><pre>408</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;netbsd&quot;,</pre></td></tr><tr><td class='line-number'><a name='L409' href='#L409'><pre>409</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;openbsd&quot;,</pre></td></tr><tr><td class='line-number'><a name='L410' href='#L410'><pre>410</pre></a></td><td class='skipped-line'></td><td class='code'><pre>))]</pre></td></tr><tr><td class='line-number'><a name='L411' href='#L411'><pre>411</pre></a></td><td class='skipped-line'></td><td class='code'><pre>const NCCS: usize = 20;</pre></td></tr><tr><td class='line-number'><a name='L412' href='#L412'><pre>412</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(not(any(</pre></td></tr><tr><td class='line-number'><a name='L413' href='#L413'><pre>413</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;linux&quot;,</pre></td></tr><tr><td class='line-number'><a name='L414' href='#L414'><pre>414</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;android&quot;,</pre></td></tr><tr><td class='line-number'><a name='L415' href='#L415'><pre>415</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;macos&quot;,</pre></td></tr><tr><td class='line-number'><a name='L416' href='#L416'><pre>416</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;ios&quot;,</pre></td></tr><tr><td class='line-number'><a name='L417' href='#L417'><pre>417</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;freebsd&quot;,</pre></td></tr><tr><td class='line-number'><a name='L418' href='#L418'><pre>418</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;dragonfly&quot;,</pre></td></tr><tr><td class='line-number'><a name='L419' href='#L419'><pre>419</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;netbsd&quot;,</pre></td></tr><tr><td class='line-number'><a name='L420' href='#L420'><pre>420</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    target_os = &quot;openbsd&quot;,</pre></td></tr><tr><td class='line-number'><a name='L421' href='#L421'><pre>421</pre></a></td><td class='skipped-line'></td><td class='code'><pre>)))]</pre></td></tr><tr><td class='line-number'><a name='L422' href='#L422'><pre>422</pre></a></td><td class='skipped-line'></td><td class='code'><pre>const NCCS: usize = 32;</pre></td></tr><tr><td class='line-number'><a name='L423' href='#L423'><pre>423</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L424' href='#L424'><pre>424</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(unix)]</pre></td></tr><tr><td class='line-number'><a name='L425' href='#L425'><pre>425</pre></a></td><td class='skipped-line'></td><td class='code'><pre>extern &quot;C&quot; {</pre></td></tr><tr><td class='line-number'><a name='L426' href='#L426'><pre>426</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    fn tcgetattr(fd: i32, termios: *mut Termios) -&gt; i32;</pre></td></tr><tr><td class='line-number'><a name='L427' href='#L427'><pre>427</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    fn tcsetattr(fd: i32, optional_actions: i32, termios: *const Termios) -&gt; i32;</pre></td></tr><tr><td class='line-number'><a name='L428' href='#L428'><pre>428</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    fn cfmakeraw(termios: *mut Termios);</pre></td></tr><tr><td class='line-number'><a name='L429' href='#L429'><pre>429</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr><tr><td class='line-number'><a name='L430' href='#L430'><pre>430</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L431' href='#L431'><pre>431</pre></a></td><td class='skipped-line'></td><td class='code'><pre>#[cfg(test)]</pre></td></tr><tr><td class='line-number'><a name='L432' href='#L432'><pre>432</pre></a></td><td class='skipped-line'></td><td class='code'><pre>mod tests {</pre></td></tr><tr><td class='line-number'><a name='L433' href='#L433'><pre>433</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    use super::History;</pre></td></tr><tr><td class='line-number'><a name='L434' href='#L434'><pre>434</pre></a></td><td class='skipped-line'></td><td class='code'><pre></pre></td></tr><tr><td class='line-number'><a name='L435' href='#L435'><pre>435</pre></a></td><td class='skipped-line'></td><td class='code'><pre>    #[test]</pre></td></tr><tr><td class='line-number'><a name='L436' href='#L436'><pre>436</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    fn history_add_deduplicates() {</pre></td></tr><tr><td class='line-number'><a name='L437' href='#L437'><pre>437</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        let mut history = History {</pre></td></tr><tr><td class='line-number'><a name='L438' href='#L438'><pre>438</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            entries: Vec::new(),</pre></td></tr><tr><td class='line-number'><a name='L439' href='#L439'><pre>439</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            path: None,</pre></td></tr><tr><td class='line-number'><a name='L440' href='#L440'><pre>440</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>            max_entries: 5,</pre></td></tr><tr><td class='line-number'><a name='L441' href='#L441'><pre>441</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        };</pre></td></tr><tr><td class='line-number'><a name='L442' href='#L442'><pre>442</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        history.add(&quot;foo&quot;);</pre></td></tr><tr><td class='line-number'><a name='L443' href='#L443'><pre>443</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        history.add(&quot;foo&quot;);</pre></td></tr><tr><td class='line-number'><a name='L444' href='#L444'><pre>444</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        history.add(&quot;bar&quot;);</pre></td></tr><tr><td class='line-number'><a name='L445' href='#L445'><pre>445</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>        assert_eq!(history.entries, vec![&quot;foo&quot;, &quot;bar&quot;]);</pre></td></tr><tr><td class='line-number'><a name='L446' href='#L446'><pre>446</pre></a></td><td class='covered-line'><pre>1</pre></td><td class='code'><pre>    }</pre></td></tr><tr><td class='line-number'><a name='L447' href='#L447'><pre>447</pre></a></td><td class='skipped-line'></td><td class='code'><pre>}</pre></td></tr></table></div></body></html>
target/llvm-cov-target/debug/deps/typelang-54cb835479e93361.d:1:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/typelang-54cb835479e93361.d: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/llvm-cov-target/debug/deps/typelang-54cb835479e93361.d:3:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/libtypelang-54cb835479e93361.rlib: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/llvm-cov-target/debug/deps/typelang-54cb835479e93361.d:5:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/libtypelang-54cb835479e93361.rmeta: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/llvm-cov-target/debug/deps/typelang-54cb835479e93361.d:9:src/errors.rs:
target/debug/deps/error_message_patterns-b6637d9c7cb95894.d:1:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/error_message_patterns-b6637d9c7cb95894.d: tests/error_message_patterns.rs
target/debug/deps/error_message_patterns-b6637d9c7cb95894.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/error_message_patterns-b6637d9c7cb95894: tests/error_message_patterns.rs
target/debug/deps/error_message_patterns-b6637d9c7cb95894.d:5:tests/error_message_patterns.rs:
target/miri/x86_64-unknown-linux-gnu/debug/deps/boundary_lex_parse-496a251655396057:1:{"RunWith":{"args":["--crate-name","boundary_lex_parse","--edition=2021","tests/boundary_lex_parse.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=e464b603d65c9722","-C","extra-filename=-496a251655396057","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[98,111,117,110,100,97,114,121,95,108,101,120,95,112,97,114,115,101]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/doc/typelang/lexer/enum.TokenKind.html:56:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/lexer/enum.TokenKind.html:57:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/debug/deps/error_cases-95d598c91095e7f0.d:1:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/error_cases-95d598c91095e7f0.d: tests/error_cases.rs /home/hsin4/myproject/typelang-hm-rs/examples/basics.tl Cargo.toml
target/debug/deps/error_cases-95d598c91095e7f0.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/liberror_cases-95d598c91095e7f0.rmeta: tests/error_cases.rs /home/hsin4/myproject/typelang-hm-rs/examples/basics.tl Cargo.toml
target/debug/deps/error_cases-95d598c91095e7f0.d:5:tests/error_cases.rs:
target/debug/deps/repl_load_program_errors-c58de800cf07091c.d:1:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/repl_load_program_errors-c58de800cf07091c.d: tests/repl_load_program_errors.rs
target/debug/deps/repl_load_program_errors-c58de800cf07091c.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/repl_load_program_errors-c58de800cf07091c: tests/repl_load_program_errors.rs
target/debug/deps/repl_load_program_errors-c58de800cf07091c.d:5:tests/repl_load_program_errors.rs:
target/debug/deps/error_cases-194afe2576fd5cdd.d:1:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/error_cases-194afe2576fd5cdd.d: tests/error_cases.rs /home/hsin4/myproject/typelang-hm-rs/examples/basics.tl
target/debug/deps/error_cases-194afe2576fd5cdd.d:3:/home/hsin4/myproject/typelang-hm-rs/target/debug/deps/error_cases-194afe2576fd5cdd: tests/error_cases.rs /home/hsin4/myproject/typelang-hm-rs/examples/basics.tl
target/debug/deps/error_cases-194afe2576fd5cdd.d:5:tests/error_cases.rs:
target/miri/x86_64-unknown-linux-gnu/debug/deps/lexer_more-5be1924f62db07f3:1:{"RunWith":{"args":["--crate-name","lexer_more","--edition=2021","tests/lexer_more.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=9fe99a5870c3142b","-C","extra-filename=-5be1924f62db07f3","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[108,101,120,101,114,95,109,111,114,101]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/doc/typelang/lexer/struct.Token.html:19:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/lexer/struct.Token.html:20:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/search-index.js:1:var searchIndex = new Map(JSON.parse('[["typelang",{"t":"CCCCCCCCPPPPPPFPGPPPGPPPPPFFPPPPPPPFPGPNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOONNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNPPPPIPPPFPPPGONNNNNNNNNNHONNNNHNNNNNNNNNNOOOFNNNNNNNHHHHHNOONNNHNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFGPPNNNNNNNNNNONNNNNNNNOHOONNNNNNNNOFNNNNNHNHNNNNNNCHEHFFFFIFPFPFPFPFPFGFFNNHHHHHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOHNNNNNNNNNOOHNNNNNNNNNNNNNONOONNNHOHOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNHO","n":["ast","errors","evaluator","infer","lexer","parser","repl","typesys","Annot","App","Bin","BinOp","BoolLit","CharLit","Constraint","Dec","Expr","FloatLit","Hex","If","IntBase","IntLit","Lambda","LetIn","ListLit","Oct","Program","SigmaType","StringLit","TEApp","TECon","TEFun","TEList","TETuple","TEVar","TopLevel","TupleLit","TypeExpr","Var","borrow","","","","","","","borrow_mut","","","","","","","classname","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","constraints","decls","eq","","","","","","","expr","fmt","","","","","","","","from","","","","","","","into","","","","","","","name","params","signature","to_owned","","","","","","","to_string","try_from","","","","","","","try_into","","","","","","","type","type_id","","","","","","","typevar","arg","base","bindings","body","","cond","else_branch","expr","func","items","","left","name","op","params","right","then_branch","type_expr","value","","","","","ErrorInfo","EvalError","LexerError","ParseError","TypeError","at","","","","","at_with_snippet","","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","code","col","fmt","","","","","","","","","","from","","","","","into","","","","","line","msg","new","","","","","pos","snippet","to_owned","","","","","to_string","","","","","try_from","","","","","try_into","","","","","type_id","","","","","with_snippet","Bool","Char","Closure","Double","Env","Int","List","Prim1","Prim2","","String","Tuple","Value","a","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","eval_expr","f","fmt","","from","","initial_env","into","","to_owned","","try_from","","try_into","","type_id","","body","env","params","InferState","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","infer_expr","infer_type_str","infer_type_str_with_defaulting","initial_class_env","initial_env","into","subst","supply","to_owned","try_from","try_into","type_from_texpr","type_id","ARROW","BIN","CARET","CHAR","COMMA","CONID","DARROW","DBLSTAR","DCOLON","ELSE","EOF","EQ","EQUAL","FALSE","FLOAT","GE","GT","HEX","IF","IN","INT","LAMBDA","LBRACK","LE","LET","LPAREN","LT","MINUS","NE","OCT","PLUS","QMARK","RBRACK","RPAREN","SEMI","SLASH","STAR","STRING","THEN","TRUE","Token","TokenKind","UNDERSCORE","VARID","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","col","eq","","fmt","","from","","into","","kind","lex","line","pos","to_owned","","try_from","","try_into","","type_id","","value","Parser","borrow","borrow_mut","from","into","new","parse_expr","","parse_program","","parse_sigma_type","parse_type","try_from","try_into","type_id","cmd","load_program_into_env","run_repl","","ClassEnv","Constraint","QualType","Scheme","Subst","TApp","","TCon","","TFun","","TTuple","","TVar","","TVarSupply","Type","TypeEnv","UnifyError","add_class","add_instance","apply_defaulting_simple","apply_subst_c","apply_subst_q","apply_subst_s","apply_subst_t","arg","","bind","borrow","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","classes","classname","clone","","","","","","","","","","","","","clone_env","clone_into","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","code","compose","constraints","default","","","entails","env","eq","","","","","","","","","extend","fmt","","","","","","","","","","","","","fresh","from","","","","","","","","","","","","","ftv","func","generalize","hash","","","","","","","","","id","instances","instantiate","into","","","","","","","","","","","","","items","lookup","message","name","new","","","pretty_qual","qual","qualify","ret","t_list","t_string","to_owned","","","","","","","","","","","","","try_from","","","","","","","","","","","","","try_into","","","","","","","","","","","","","type","","type_id","","","","","","","","","","","","","unify","vars"],"q":[[0,"typelang"],[8,"typelang::ast"],[141,"typelang::ast::Expr"],[164,"typelang::errors"],[258,"typelang::evaluator"],[299,"typelang::evaluator::Value"],[302,"typelang::infer"],[323,"typelang::lexer"],[399,"typelang::parser"],[414,"typelang::repl"],[417,"typelang::repl::cmd"],[418,"typelang::typesys"],[657,"alloc::string"],[658,"alloc::vec"],[659,"core::fmt"],[660,"core::option"],[661,"core::result"],[662,"core::any"],[663,"alloc::boxed"],[664,"core::convert"],[665,"core::iter::traits::collect"],[666,"std::collections::hash::map"],[667,"std::collections::hash::set"],[668,"core::hash"],[669,"typelang::repl::loader"]],"i":"````````j0l111`0`101`11110``1n00000`2`2210fA`AbAd65432103654321065432106543210206543210166543210654321065432101116543210665432106543210265432103BhBlBnC`1Cb0Cd5CfChCjCl161548D`DdDhDj`````E`EdEfEhEj314321043210432104321043210444433221100432104321044432104443210432104321043210432104En000`000`000`El1010101010`01010`1010101010Fd00`Ff000000`````000000`0Gh000000000000000000000000000000000000000``00Gf1010101010010101010`00010101010`Gj0000`0`000000``````````Gd`0`0`0`0````Fj0`````HdHf`HhHn32I`6H`FnHbFhGbHj;87:96<543210;;587:96<543210;287:96<543210;87:96<543210;0`421;;287:96<543287:96<543210;187:96<543210;`:`87:96<5438;`87:96<543210;6207210`3`9``87:96<543210;87:96<543210;87:96<543210;5487:96<543210;`3","f":"```````````````````````````````````````{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}000000{fh}{{{b{j}}}j}{{{b{l}}}l}{{{b{n}}}n}{{{b{f}}}f}{{{b{A`}}}A`}{{{b{Ab}}}Ab}{{{b{Ad}}}Ad}{{b{b{dc}}}Af{}}000000{{bAh}Af}000000{A`Aj}{AdAj}{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{n}}{b{n}}}Al}{{{b{f}}{b{f}}}Al}{{{b{A`}}{b{A`}}}Al}{{{b{Ab}}{b{Ab}}}Al}{{{b{Ad}}{b{Ad}}}Al}{Abj}{{{b{j}}{b{dAn}}}B`}0{{{b{l}}{b{dAn}}}B`}{{{b{n}}{b{dAn}}}B`}{{{b{f}}{b{dAn}}}B`}{{{b{A`}}{b{dAn}}}B`}{{{b{Ab}}{b{dAn}}}B`}{{{b{Ad}}{b{dAn}}}B`}{cc{}}000000{{}c{}}000000{Abh}{AbAj}{AbBb}{bc{}}000000{bh}{c{{Bd{e}}}{}{}}000000{{}{{Bd{c}}}{}}000000{A`n}{bBf}000000{fh}{BhBj}{Bll}{BnAj}{C`Bj}{BnBj}{CbBj}0{CdBj}6{CfAj}{ChAj}{CjBj}{Clh}{Cjh}{C`Aj}37{Cdn}{BlCn}{D`Db}{DdDf}{Dhh}{DjAl}`````{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}E`{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}Ed{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}Ef{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}Eh{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}}Ej{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}e}Ed{{Eb{h}}}{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}{Bb{Dn}}{Bb{Dn}}e}Eh{{Eb{h}}}{{Eb{h}}}}{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{E`}}}E`}{{{b{Ed}}}Ed}{{{b{Ef}}}Ef}{{{b{Eh}}}Eh}{{{b{Ej}}}Ej}{{b{b{dc}}}Af{}}0000{{bAh}Af}0000{E`b}{E`Bb}{{{b{E`}}{b{dAn}}}B`}0{{{b{Ed}}{b{dAn}}}B`}0{{{b{Ef}}{b{dAn}}}B`}0{{{b{Eh}}{b{dAn}}}B`}0{{{b{Ej}}{b{dAn}}}B`}0{cc{}}0000{{}c{}}00007{E`h}{{{b{Dl}}c{Bb{Dn}}}E`{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}}Ed{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}}Ef{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}}Eh{{Eb{h}}}}{{{b{Dl}}c{Bb{Dn}}}Ej{{Eb{h}}}}=={bc{}}0000{bh}0000{c{{Bd{e}}}{}{}}0000{{}{{Bd{c}}}{}}0000{bBf}0000{{E`c}E`{{Eb{h}}}}`````````````{ElBb}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{En}}}En}{{{b{El}}}El}{{b{b{dc}}}Af{}}0{{bAh}Af}0{{{b{j}}{b{dF`}}}{{Bd{EnEj}}}}{ElFb}{{{b{En}}{b{dAn}}}B`}{{{b{El}}{b{dAn}}}B`}{cc{}}0{{}F`}{{}c{}}0{bc{}}0{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{bBf}0{FdBj}{FdF`}{FdAj}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ff}}}Ff}{{b{b{dc}}}Af{}}{{bAh}Af}{{{b{Ff}}{b{dAn}}}B`}?{{{b{Fh}}{b{Fj}}{b{dFf}}{b{j}}}{{Bd{{G`{FlFn}}Eh}}}}{{{b{j}}}{{Bd{hEh}}}}{{{b{j}}Al}{{Bd{hEh}}}}{{}Fj}{{}Fh}{{}c{}}{FfFl}{FfGb}{bc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{{{b{n}}}Gd}{bBf}````````````````````````````````````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{dc}}}Af{}}0{{bAh}Af}0{GfDn}{{{b{Gf}}{b{Gf}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{Gf}}{b{dAn}}}B`}{{{b{Gh}}{b{dAn}}}B`}{cc{}}0{{}c{}}0{GfGh}{{{b{Dl}}}{{Bd{{Aj{Gf}}Ed}}}}88{bc{}}0{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{bBf}0{Gfh}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}:9{{{Aj{Gf}}}Gj}{{{b{Dl}}}{{Bd{jEf}}}}{{{b{dGj}}}{{Bd{jEf}}}}{{{b{Dl}}}{{Bd{AdEf}}}}{{{b{dGj}}}{{Bd{AdEf}}}}{{{b{dGj}}}{{Bd{A`Ef}}}}{{{b{dGj}}}{{Bd{nEf}}}}<;:`{{{b{Ad}}{b{dFh}}{b{Fj}}{b{dF`}}}{{Bd{{Aj{h}}h}}}}`{{}Af}```````````````````{{{b{dFj}}cg}Af{{Eb{h}}}{{Eb{h}}}{{Gn{}{{Gl{e}}}}}}{{{b{dFj}}ce}Af{{Eb{h}}}{{Eb{h}}}}{{{b{Fn}}}Fn}{{{b{Fl}}{b{H`}}}H`}{{{b{Fl}}{b{Fn}}}Fn}{{{b{Fl}}{b{Hb}}}Hb}{{{b{Fl}}{b{Gd}}}Gd}{HdBj}{HfBj}{{HhGd}{{Bd{FlHj}}}}{b{{b{c}}}{}}000000000000{{{b{d}}}{{b{dc}}}{}}000000000000{FjHl}{H`h}{{{b{Hh}}}Hh}{{{b{Hn}}}Hn}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{I`}}}I`}{{{b{Gd}}}Gd}{{{b{H`}}}H`}{{{b{Fn}}}Fn}{{{b{Hb}}}Hb}{{{b{Fh}}}Fh}{{{b{Gb}}}Gb}{{{b{Hj}}}Hj}{{{b{Fj}}}Fj}3{{b{b{dc}}}Af{}}000000000000{{bAh}Af}000000000000{Hjb}{{{b{Fl}}{b{Fl}}}Fl}{FnAj}{{}Fh}{{}Gb}{{}Fj}{{{b{Fj}}{b{{Ib{H`}}}}}Al}{FhHl}{{{b{Hh}}{b{Hh}}}Al}{{{b{Hn}}{b{Hn}}}Al}{{{b{Hd}}{b{Hd}}}Al}{{{b{Hf}}{b{Hf}}}Al}{{{b{I`}}{b{I`}}}Al}{{{b{Gd}}{b{Gd}}}Al}{{{b{H`}}{b{H`}}}Al}{{{b{Fn}}{b{Fn}}}Al}{{{b{Hb}}{b{Hb}}}Al}{{{b{dFh}}cHb}Af{{Eb{h}}}}{{{b{Hh}}{b{dAn}}}B`}{{{b{Hn}}{b{dAn}}}B`}{{{b{Hd}}{b{dAn}}}B`}{{{b{Hf}}{b{dAn}}}B`}{{{b{I`}}{b{dAn}}}B`}{{{b{Gd}}{b{dAn}}}B`}{{{b{H`}}{b{dAn}}}B`}{{{b{Fn}}{b{dAn}}}B`}{{{b{Hb}}{b{dAn}}}B`}{{{b{Fh}}{b{dAn}}}B`}{{{b{Gb}}{b{dAn}}}B`}{{{b{Hj}}{b{dAn}}}B`}{{{b{Fj}}{b{dAn}}}B`}{{{b{dGb}}}Hh}{cc{}}000000000000{{{b{Gd}}}{{Id{Cn}}}}{HdBj}{{{b{Fh}}Fn}Hb}{{{b{Hh}}{b{dc}}}AfIf}{{{b{Hn}}{b{dc}}}AfIf}{{{b{Hd}}{b{dc}}}AfIf}{{{b{Hf}}{b{dc}}}AfIf}{{{b{I`}}{b{dc}}}AfIf}{{{b{Gd}}{b{dc}}}AfIf}{{{b{H`}}{b{dc}}}AfIf}{{{b{Fn}}{b{dc}}}AfIf}{{{b{Hb}}{b{dc}}}AfIf}{HhCn}{FjId}{{{b{Hb}}{b{dGb}}}Fn}{{}c{}}000000000000{I`Aj}{{{b{Fh}}{b{Dl}}}{{Bb{{b{Hb}}}}}}{Hjh}{Hnh}{{}Fh}{{}Gb}{{{b{Dl}}c}Hj{{Eb{h}}}}{{{b{Fn}}}h}{HbFn}{{Gd{Aj{H`}}}Fn}{HfBj}{GdGd}{{}Gd}{bc{}}000000000000{c{{Bd{e}}}{}{}}000000000000{{}{{Bd{c}}}{}}000000000000{H`Gd}{FnGd}{bBf}000000000000{{GdGd}{{Bd{FlHj}}}}{HbAj}","D":"Il","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Constraint",8],[5,"String",657],[6,"Expr",8],[6,"IntBase",8],[6,"TypeExpr",8],[5,"SigmaType",8],[5,"TopLevel",8],[5,"Program",8],[1,"unit"],[1,"u8"],[5,"Vec",658],[1,"bool"],[5,"Formatter",659],[8,"Result",659],[6,"Option",660,null,1],[6,"Result",661,null,1],[5,"TypeId",662],[15,"App",141],[5,"Box",663,null,1],[15,"IntLit",141],[15,"LetIn",141],[15,"Lambda",141],[15,"If",141],[15,"Annot",141],[15,"ListLit",141],[15,"TupleLit",141],[15,"BinOp",141],[15,"Var",141],[1,"i64"],[15,"FloatLit",141],[1,"f64"],[15,"CharLit",141],[1,"char"],[15,"StringLit",141],[15,"BoolLit",141],[1,"str"],[1,"usize"],[5,"ErrorInfo",164],[10,"Into",664,null,1],[5,"LexerError",164],[5,"ParseError",164],[5,"TypeError",164],[5,"EvalError",164],[5,"Prim2",258],[6,"Value",258],[8,"Env",258],[1,"fn"],[15,"Closure",299],[5,"InferState",302],[5,"TypeEnv",418],[5,"ClassEnv",418],[8,"Subst",418],[5,"QualType",418],[1,"tuple",null,null,1],[5,"TVarSupply",418],[6,"Type",418],[5,"Token",323],[6,"TokenKind",323],[5,"Parser",399],[17,"Item"],[10,"IntoIterator",665],[5,"Constraint",418],[5,"Scheme",418],[5,"TApp",418],[5,"TFun",418],[5,"TVar",418],[5,"UnifyError",418],[5,"HashMap",666],[5,"TCon",418],[5,"TTuple",418],[1,"slice"],[5,"HashSet",667],[10,"Hasher",668]],"r":[[415,669],[416,417]],"b":[[85,"impl-Debug-for-Expr"],[86,"impl-Display-for-Expr"],[203,"impl-Debug-for-ErrorInfo"],[204,"impl-Display-for-ErrorInfo"],[205,"impl-Debug-for-LexerError"],[206,"impl-Display-for-LexerError"],[207,"impl-Display-for-ParseError"],[208,"impl-Debug-for-ParseError"],[209,"impl-Display-for-TypeError"],[210,"impl-Debug-for-TypeError"],[211,"impl-Display-for-EvalError"],[212,"impl-Debug-for-EvalError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEMCEQAJAFQAbABpAOAAPgAhAQAAJAERADcBBAA9AUEAgwEPAJUBAQCYAQAAmgEEAKEBAACjARQAuQFqADECDgBNAgYAVQI8AA==","P":[[39,"T"],[53,""],[61,"T"],[68,""],[93,"T"],[100,"U"],[107,""],[110,"T"],[117,""],[118,"U,T"],[125,"U"],[132,""],[176,"T"],[186,""],[191,"T"],[196,""],[213,"T"],[218,"U"],[223,""],[232,"T"],[237,""],[242,"U,T"],[247,"U"],[252,""],[272,"T"],[276,""],[278,"T"],[280,""],[286,"T"],[288,""],[289,"U"],[291,"T"],[293,"U,T"],[295,"U"],[297,""],[303,"T"],[305,""],[306,"T"],[307,""],[309,"T"],[310,""],[315,"U"],[316,""],[318,"T"],[319,"U,T"],[320,"U"],[321,""],[367,"T"],[371,""],[373,"T"],[375,""],[382,"T"],[384,"U"],[386,""],[390,"T"],[392,"U,T"],[394,"U"],[396,""],[400,"T"],[403,"U"],[404,""],[411,"U,T"],[412,"U"],[413,""],[447,"T"],[473,""],[489,"T"],[502,""],[547,"T"],[560,""],[563,"__H"],[572,""],[575,"U"],[588,""],[601,"T"],[614,"U,T"],[627,"U"],[640,""]]}],["typelang_repl",{"t":"H","n":["main"],"q":[[0,"typelang_repl"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}]]'));
target/miri/x86_64-unknown-linux-gnu/debug/deps/evaluator_additional-050eb10da42c4a7b:1:{"RunWith":{"args":["--crate-name","evaluator_additional","--edition=2021","tests/evaluator_additional.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=28121a64be46b61c","-C","extra-filename=-050eb10da42c4a7b","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[101,118,97,108,117,97,116,111,114,95,97,100,100,105,116,105,111,110,97,108]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/miri/x86_64-unknown-linux-gnu/debug/deps/examples_types-917636604089030c:1:{"RunWith":{"args":["--crate-name","examples_types","--edition=2021","tests/examples_types.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=d0d07ec3b2ab7b18","-C","extra-filename=-917636604089030c","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[101,120,97,109,112,108,101,115,95,116,121,112,101,115]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/miri/x86_64-unknown-linux-gnu/debug/deps/infer_more-7babd2cb14100d82:1:{"RunWith":{"args":["--crate-name","infer_more","--edition=2021","tests/infer_more.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=149c2f8072c4a157","-C","extra-filename=-7babd2cb14100d82","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[105,110,102,101,114,95,109,111,114,101]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/doc/typelang/lexer/fn.lex.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `lex` fn in crate `typelang`."><title>lex in typelang::lexer - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc fn"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>lexer</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">lexer</a></div><h1>Function <span class="fn">lex</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/lexer.rs.html#94-902">Source</a> </span></div><pre class="rust item-decl"><code>pub fn lex(src: &amp;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.str.html">str</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/vec/struct.Vec.html" title="struct alloc::vec::Vec">Vec</a>&lt;<a class="struct" href="struct.Token.html" title="struct typelang::lexer::Token">Token</a>&gt;, <a class="struct" href="../errors/struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a>&gt;</code></pre></section></div></main></body></html>
target/miri/x86_64-unknown-linux-gnu/debug/deps/integration_basic-be62bfc80feb6415:1:{"RunWith":{"args":["--crate-name","integration_basic","--edition=2021","tests/integration_basic.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=a140d3a65f5bf818","-C","extra-filename=-be62bfc80feb6415","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[105,110,116,101,103,114,97,116,105,111,110,95,98,97,115,105,99]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/miri/x86_64-unknown-linux-gnu/debug/deps/error_cases-8dbea487e6b948e0.d:1:/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/error_cases-8dbea487e6b948e0.d: tests/error_cases.rs /home/hsin4/myproject/typelang-hm-rs/examples/basics.tl
target/miri/x86_64-unknown-linux-gnu/debug/deps/error_cases-8dbea487e6b948e0.d:3:/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/error_cases-8dbea487e6b948e0: tests/error_cases.rs /home/hsin4/myproject/typelang-hm-rs/examples/basics.tl
target/miri/x86_64-unknown-linux-gnu/debug/deps/error_cases-8dbea487e6b948e0.d:5:tests/error_cases.rs:
target/doc/src/typelang/lib.rs.html:13:<a href=#13 id=13 data-nosnippet>13</a><span class="kw">pub mod </span>errors;
target/doc/src/typelang/lib.rs.html:23:<a href=#23 id=23 data-nosnippet>23</a><span class="kw">pub use </span><span class="kw">crate</span>::errors::<span class="kw-2">*</span>;
target/miri/x86_64-unknown-linux-gnu/debug/deps/typelang-f448d339fabe8993.d:1:/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/typelang-f448d339fabe8993.d: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/miri/x86_64-unknown-linux-gnu/debug/deps/typelang-f448d339fabe8993.d:3:/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/typelang-f448d339fabe8993: src/lib.rs src/ast.rs src/errors.rs src/evaluator.rs src/infer.rs src/lexer.rs src/parser.rs src/repl/mod.rs src/repl/cmd.rs src/repl/line_editor.rs src/repl/loader.rs src/repl/printer.rs src/repl/util.rs src/typesys.rs
target/miri/x86_64-unknown-linux-gnu/debug/deps/typelang-f448d339fabe8993.d:7:src/errors.rs:
target/llvm-cov-target/debug/deps/error_message_patterns-a40d44d14dd7adee.d:1:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/error_message_patterns-a40d44d14dd7adee.d: tests/error_message_patterns.rs
target/llvm-cov-target/debug/deps/error_message_patterns-a40d44d14dd7adee.d:3:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/error_message_patterns-a40d44d14dd7adee: tests/error_message_patterns.rs
target/llvm-cov-target/debug/deps/error_message_patterns-a40d44d14dd7adee.d:5:tests/error_message_patterns.rs:
target/miri/x86_64-unknown-linux-gnu/debug/deps/errors_display-0e9e40ea1fc2da97.d:1:/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/errors_display-0e9e40ea1fc2da97.d: tests/errors_display.rs
target/miri/x86_64-unknown-linux-gnu/debug/deps/errors_display-0e9e40ea1fc2da97.d:3:/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/errors_display-0e9e40ea1fc2da97: tests/errors_display.rs
target/miri/x86_64-unknown-linux-gnu/debug/deps/errors_display-0e9e40ea1fc2da97.d:5:tests/errors_display.rs:
target/doc/type.impl/std/collections/hash/map/struct.HashMap.js:2:    var type_impls = Object.fromEntries([["typelang",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1297-1301\">Source</a></span><a href=\"#impl-Clone-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1304\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1309\">Source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1340-1343\">Source</a></span><a href=\"#impl-Debug-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1345\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1351-1353\">Source</a></span><a href=\"#impl-Default-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1357\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>HashMap&lt;K, V, S&gt;</code>, with the <code>Default</code> value for the hasher.</p>\n</div></details></div></details>","Default","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2811-2815\">Source</a></span><a href=\"#impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;'a V</a>)&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2818\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;'a V</a>)&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2823\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, _: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;'a V</a>))</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2828\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(&'a K, &'a V)>","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2789-2792\">Source</a></span><a href=\"#impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3><div class=\"docblock\"><p>Inserts all new key-values from the iterator and replaces values with existing\nkeys with new values returned from the iterator.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2795\">Source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a>&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2800\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2805\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(K, V)>","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5B(K,+V);+N%5D%3E-for-HashMap%3CK,+V%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1395-1397\">Source</a></span><a href=\"#impl-From%3C%5B(K,+V);+N%5D%3E-for-HashMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">N</a>]&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1413\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">N</a>]) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a <code>[(K, V); N]</code> into a <code>HashMap&lt;K, V&gt;</code>.</p>\n<p>If any entries in the array have equal keys,\nall but one of the corresponding values will be dropped.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span>map1 = HashMap::from([(<span class=\"number\">1</span>, <span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"number\">4</span>)]);\n<span class=\"kw\">let </span>map2: HashMap&lt;<span class=\"kw\">_</span>, <span class=\"kw\">_</span>&gt; = [(<span class=\"number\">1</span>, <span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"number\">4</span>)].into();\n<span class=\"macro\">assert_eq!</span>(map1, map2);</code></pre></div>\n</div></details></div></details>","From<[(K, V); N]>","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2770-2773\">Source</a></span><a href=\"#impl-FromIterator%3C(K,+V)%3E-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#2779\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;T&gt;(iter: T) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Constructs a <code>HashMap&lt;K, V&gt;</code> from an iterator of key-value pairs.</p>\n<p>If the iterator produces any pairs with equal keys,\nall but one of the corresponding values will be dropped.</p>\n</div></details></div></details>","FromIterator<(K, V)>","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashMap%3CK,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#246\">Source</a><a href=\"#impl-HashMap%3CK,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#261\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>HashMap</code>.</p>\n<p>The hash map is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map: HashMap&lt;<span class=\"kw-2\">&amp;</span>str, i32&gt; = HashMap::new();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#280\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>HashMap</code> with at least the specified capacity.</p>\n<p>The hash map will be able to hold at least <code>capacity</code> elements without\nreallocating. This method is allowed to allocate for more elements than\n<code>capacity</code>. If <code>capacity</code> is zero, the hash map will not allocate.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map: HashMap&lt;<span class=\"kw-2\">&amp;</span>str, i32&gt; = HashMap::with_capacity(<span class=\"number\">10</span>);</code></pre></div>\n</div></details></div></details>",0,"typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#285\">Source</a><a href=\"#impl-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0, const since 1.85.0\">1.7.0 (const: 1.85.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#312\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>HashMap</code> which will use the given hash builder to hash\nkeys.</p>\n<p>The created map has the default initial capacity.</p>\n<p>Warning: <code>hash_builder</code> is normally randomly generated, and\nis designed to allow HashMaps to be resistant to attacks that\ncause many collisions and very poor performance. Setting it\nmanually using this function can expose a DoS attack vector.</p>\n<p>The <code>hash_builder</code> passed should implement the <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\"><code>BuildHasher</code></a> trait for\nthe <code>HashMap</code> to be useful, see its documentation for details.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n<span class=\"kw\">use </span>std::hash::RandomState;\n\n<span class=\"kw\">let </span>s = RandomState::new();\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::with_hasher(s);\nmap.insert(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0\">1.7.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#343\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, hasher: S) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>HashMap</code> with at least the specified capacity, using\n<code>hasher</code> to hash the keys.</p>\n<p>The hash map will be able to hold at least <code>capacity</code> elements without\nreallocating. This method is allowed to allocate for more elements than\n<code>capacity</code>. If <code>capacity</code> is zero, the hash map will not allocate.</p>\n<p>Warning: <code>hasher</code> is normally randomly generated, and\nis designed to allow HashMaps to be resistant to attacks that\ncause many collisions and very poor performance. Setting it\nmanually using this function can expose a DoS attack vector.</p>\n<p>The <code>hasher</code> passed should implement the <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\"><code>BuildHasher</code></a> trait for\nthe <code>HashMap</code> to be useful, see its documentation for details.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n<span class=\"kw\">use </span>std::hash::RandomState;\n\n<span class=\"kw\">let </span>s = RandomState::new();\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::with_capacity_and_hasher(<span class=\"number\">10</span>, s);\nmap.insert(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#361\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements the map can hold without reallocating.</p>\n<p>This number is a lower bound; the <code>HashMap&lt;K, V&gt;</code> might be able to hold\nmore, but is guaranteed to be able to hold at least this many.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n<span class=\"kw\">let </span>map: HashMap&lt;i32, i32&gt; = HashMap::with_capacity(<span class=\"number\">100</span>);\n<span class=\"macro\">assert!</span>(map.capacity() &gt;= <span class=\"number\">100</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.keys\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#390\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.keys\" class=\"fn\">keys</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.Keys.html\" title=\"struct std::collections::hash::map::Keys\">Keys</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator visiting all keys in arbitrary order.\nThe iterator element type is <code>&amp;'a K</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span>map = HashMap::from([\n    (<span class=\"string\">\"a\"</span>, <span class=\"number\">1</span>),\n    (<span class=\"string\">\"b\"</span>, <span class=\"number\">2</span>),\n    (<span class=\"string\">\"c\"</span>, <span class=\"number\">3</span>),\n]);\n\n<span class=\"kw\">for </span>key <span class=\"kw\">in </span>map.keys() {\n    <span class=\"macro\">println!</span>(<span class=\"string\">\"{key}\"</span>);\n}</code></pre></div>\n<h5 id=\"performance\"><a class=\"doc-anchor\" href=\"#performance\">§</a>Performance</h5>\n<p>In the current implementation, iterating over keys takes O(capacity) time\ninstead of O(len) because it internally visits empty buckets too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_keys\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.54.0\">1.54.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#423\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.into_keys\" class=\"fn\">into_keys</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.IntoKeys.html\" title=\"struct std::collections::hash::map::IntoKeys\">IntoKeys</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator visiting all the keys in arbitrary order.\nThe map cannot be used after calling this.\nThe iterator element type is <code>K</code>.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span>map = HashMap::from([\n    (<span class=\"string\">\"a\"</span>, <span class=\"number\">1</span>),\n    (<span class=\"string\">\"b\"</span>, <span class=\"number\">2</span>),\n    (<span class=\"string\">\"c\"</span>, <span class=\"number\">3</span>),\n]);\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>vec: Vec&lt;<span class=\"kw-2\">&amp;</span>str&gt; = map.into_keys().collect();\n<span class=\"comment\">// The `IntoKeys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\n</span>vec.sort_unstable();\n<span class=\"macro\">assert_eq!</span>(vec, [<span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>]);</code></pre></div>\n<h5 id=\"performance-1\"><a class=\"doc-anchor\" href=\"#performance-1\">§</a>Performance</h5>\n<p>In the current implementation, iterating over keys takes O(capacity) time\ninstead of O(len) because it internally visits empty buckets too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#452\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.values\" class=\"fn\">values</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.Values.html\" title=\"struct std::collections::hash::map::Values\">Values</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator visiting all values in arbitrary order.\nThe iterator element type is <code>&amp;'a V</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span>map = HashMap::from([\n    (<span class=\"string\">\"a\"</span>, <span class=\"number\">1</span>),\n    (<span class=\"string\">\"b\"</span>, <span class=\"number\">2</span>),\n    (<span class=\"string\">\"c\"</span>, <span class=\"number\">3</span>),\n]);\n\n<span class=\"kw\">for </span>val <span class=\"kw\">in </span>map.values() {\n    <span class=\"macro\">println!</span>(<span class=\"string\">\"{val}\"</span>);\n}</code></pre></div>\n<h5 id=\"performance-2\"><a class=\"doc-anchor\" href=\"#performance-2\">§</a>Performance</h5>\n<p>In the current implementation, iterating over values takes O(capacity) time\ninstead of O(len) because it internally visits empty buckets too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.10.0\">1.10.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#485\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.values_mut\" class=\"fn\">values_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.ValuesMut.html\" title=\"struct std::collections::hash::map::ValuesMut\">ValuesMut</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator visiting all values mutably in arbitrary order.\nThe iterator element type is <code>&amp;'a mut V</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::from([\n    (<span class=\"string\">\"a\"</span>, <span class=\"number\">1</span>),\n    (<span class=\"string\">\"b\"</span>, <span class=\"number\">2</span>),\n    (<span class=\"string\">\"c\"</span>, <span class=\"number\">3</span>),\n]);\n\n<span class=\"kw\">for </span>val <span class=\"kw\">in </span>map.values_mut() {\n    <span class=\"kw-2\">*</span>val = <span class=\"kw-2\">*</span>val + <span class=\"number\">10</span>;\n}\n\n<span class=\"kw\">for </span>val <span class=\"kw\">in </span>map.values() {\n    <span class=\"macro\">println!</span>(<span class=\"string\">\"{val}\"</span>);\n}</code></pre></div>\n<h5 id=\"performance-3\"><a class=\"doc-anchor\" href=\"#performance-3\">§</a>Performance</h5>\n<p>In the current implementation, iterating over values takes O(capacity) time\ninstead of O(len) because it internally visits empty buckets too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_values\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.54.0\">1.54.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#518\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.into_values\" class=\"fn\">into_values</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.IntoValues.html\" title=\"struct std::collections::hash::map::IntoValues\">IntoValues</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator visiting all the values in arbitrary order.\nThe map cannot be used after calling this.\nThe iterator element type is <code>V</code>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span>map = HashMap::from([\n    (<span class=\"string\">\"a\"</span>, <span class=\"number\">1</span>),\n    (<span class=\"string\">\"b\"</span>, <span class=\"number\">2</span>),\n    (<span class=\"string\">\"c\"</span>, <span class=\"number\">3</span>),\n]);\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>vec: Vec&lt;i32&gt; = map.into_values().collect();\n<span class=\"comment\">// The `IntoValues` iterator produces values in arbitrary order, so\n// the values must be sorted to test them against a sorted array.\n</span>vec.sort_unstable();\n<span class=\"macro\">assert_eq!</span>(vec, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);</code></pre></div>\n<h5 id=\"performance-4\"><a class=\"doc-anchor\" href=\"#performance-4\">§</a>Performance</h5>\n<p>In the current implementation, iterating over values takes O(capacity) time\ninstead of O(len) because it internally visits empty buckets too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#547\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.Iter.html\" title=\"struct std::collections::hash::map::Iter\">Iter</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator visiting all key-value pairs in arbitrary order.\nThe iterator element type is <code>(&amp;'a K, &amp;'a V)</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span>map = HashMap::from([\n    (<span class=\"string\">\"a\"</span>, <span class=\"number\">1</span>),\n    (<span class=\"string\">\"b\"</span>, <span class=\"number\">2</span>),\n    (<span class=\"string\">\"c\"</span>, <span class=\"number\">3</span>),\n]);\n\n<span class=\"kw\">for </span>(key, val) <span class=\"kw\">in </span>map.iter() {\n    <span class=\"macro\">println!</span>(<span class=\"string\">\"key: {key} val: {val}\"</span>);\n}</code></pre></div>\n<h5 id=\"performance-5\"><a class=\"doc-anchor\" href=\"#performance-5\">§</a>Performance</h5>\n<p>In the current implementation, iterating over map takes O(capacity) time\ninstead of O(len) because it internally visits empty buckets too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#582\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.IterMut.html\" title=\"struct std::collections::hash::map::IterMut\">IterMut</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nThe iterator element type is <code>(&amp;'a K, &amp;'a mut V)</code>.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::from([\n    (<span class=\"string\">\"a\"</span>, <span class=\"number\">1</span>),\n    (<span class=\"string\">\"b\"</span>, <span class=\"number\">2</span>),\n    (<span class=\"string\">\"c\"</span>, <span class=\"number\">3</span>),\n]);\n\n<span class=\"comment\">// Update all values\n</span><span class=\"kw\">for </span>(<span class=\"kw\">_</span>, val) <span class=\"kw\">in </span>map.iter_mut() {\n    <span class=\"kw-2\">*</span>val <span class=\"kw-2\">*</span>= <span class=\"number\">2</span>;\n}\n\n<span class=\"kw\">for </span>(key, val) <span class=\"kw\">in </span><span class=\"kw-2\">&amp;</span>map {\n    <span class=\"macro\">println!</span>(<span class=\"string\">\"key: {key} val: {val}\"</span>);\n}</code></pre></div>\n<h5 id=\"performance-6\"><a class=\"doc-anchor\" href=\"#performance-6\">§</a>Performance</h5>\n<p>In the current implementation, iterating over map takes O(capacity) time\ninstead of O(len) because it internally visits empty buckets too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#599\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements in the map.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = HashMap::new();\n<span class=\"macro\">assert_eq!</span>(a.len(), <span class=\"number\">0</span>);\na.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\n<span class=\"macro\">assert_eq!</span>(a.len(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#617\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the map contains no elements.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = HashMap::new();\n<span class=\"macro\">assert!</span>(a.is_empty());\na.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\n<span class=\"macro\">assert!</span>(!a.is_empty());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#647\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.drain\" class=\"fn\">drain</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.Drain.html\" title=\"struct std::collections::hash::map::Drain\">Drain</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.</p>\n<p>If the returned iterator is dropped before being fully consumed, it\ndrops the remaining key-value pairs. The returned iterator keeps a\nmutable borrow on the map to optimize its implementation.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = HashMap::new();\na.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\na.insert(<span class=\"number\">2</span>, <span class=\"string\">\"b\"</span>);\n\n<span class=\"kw\">for </span>(k, v) <span class=\"kw\">in </span>a.drain().take(<span class=\"number\">1</span>) {\n    <span class=\"macro\">assert!</span>(k == <span class=\"number\">1 </span>|| k == <span class=\"number\">2</span>);\n    <span class=\"macro\">assert!</span>(v == <span class=\"string\">\"a\" </span>|| v == <span class=\"string\">\"b\"</span>);\n}\n\n<span class=\"macro\">assert!</span>(a.is_empty());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_if\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.88.0\">1.88.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#687-689\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.extract_if\" class=\"fn\">extract_if</a>&lt;F&gt;(&amp;mut self, pred: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.ExtractIf.html\" title=\"struct std::collections::hash::map::ExtractIf\">ExtractIf</a>&lt;'_, K, V, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates an iterator which uses a closure to determine if an element (key-value pair) should be removed.</p>\n<p>If the closure returns <code>true</code>, the element is removed from the map and\nyielded. If the closure returns <code>false</code>, or panics, the element remains\nin the map and will not be yielded.</p>\n<p>The iterator also lets you mutate the value of each element in the\nclosure, regardless of whether you choose to keep or remove it.</p>\n<p>If the returned <code>ExtractIf</code> is not exhausted, e.g. because it is dropped without iterating\nor the iteration short-circuits, then the remaining elements will be retained.\nUse <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#method.retain\" title=\"method std::collections::hash::map::HashMap::retain\"><code>retain</code></a> with a negated predicate if you do not need the returned iterator.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Splitting a map into even and odd keys, reusing the original map:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map: HashMap&lt;i32, i32&gt; = (<span class=\"number\">0</span>..<span class=\"number\">8</span>).map(|x| (x, x)).collect();\n<span class=\"kw\">let </span>extracted: HashMap&lt;i32, i32&gt; = map.extract_if(|k, _v| k % <span class=\"number\">2 </span>== <span class=\"number\">0</span>).collect();\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>evens = extracted.keys().copied().collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;();\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>odds = map.keys().copied().collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;();\nevens.sort();\nodds.sort();\n\n<span class=\"macro\">assert_eq!</span>(evens, <span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(odds, <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.18.0\">1.18.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#716-718\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Retains only the elements specified by the predicate.</p>\n<p>In other words, remove all pairs <code>(k, v)</code> for which <code>f(&amp;k, &amp;mut v)</code> returns <code>false</code>.\nThe elements are visited in unsorted (and unspecified) order.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map: HashMap&lt;i32, i32&gt; = (<span class=\"number\">0</span>..<span class=\"number\">8</span>).map(|x| (x, x<span class=\"kw-2\">*</span><span class=\"number\">10</span>)).collect();\nmap.retain(|<span class=\"kw-2\">&amp;</span>k, <span class=\"kw\">_</span>| k % <span class=\"number\">2 </span>== <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(map.len(), <span class=\"number\">4</span>);</code></pre></div>\n<h5 id=\"performance-7\"><a class=\"doc-anchor\" href=\"#performance-7\">§</a>Performance</h5>\n<p>In the current implementation, this operation takes O(capacity) time\ninstead of O(len) because it internally visits empty buckets too.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#738\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = HashMap::new();\na.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\na.clear();\n<span class=\"macro\">assert!</span>(a.is_empty());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hasher\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0\">1.9.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#756\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.hasher\" class=\"fn\">hasher</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;S</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the map’s <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\"><code>BuildHasher</code></a>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n<span class=\"kw\">use </span>std::hash::RandomState;\n\n<span class=\"kw\">let </span>hasher = RandomState::new();\n<span class=\"kw\">let </span>map: HashMap&lt;i32, i32&gt; = HashMap::with_hasher(hasher);\n<span class=\"kw\">let </span>hasher: <span class=\"kw-2\">&amp;</span>RandomState = map.hasher();</code></pre></div>\n</div></details></div></details>",0,"typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashMap%3CK,+V,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#761-764\">Source</a><a href=\"#impl-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#785\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserves capacity for at least <code>additional</code> more elements to be inserted\nin the <code>HashMap</code>. The collection may reserve more space to speculatively\navoid frequent reallocations. After calling <code>reserve</code>,\ncapacity will be greater than or equal to <code>self.len() + additional</code>.\nDoes nothing if capacity is already sufficient.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the new allocation size overflows <a href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map: HashMap&lt;<span class=\"kw-2\">&amp;</span>str, i32&gt; = HashMap::new();\nmap.reserve(<span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reserve\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#811\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.try_reserve\" class=\"fn\">try_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/alloc/collections/struct.TryReserveError.html\" title=\"struct alloc::collections::TryReserveError\">TryReserveError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to reserve capacity for at least <code>additional</code> more elements to be inserted\nin the <code>HashMap</code>. The collection may reserve more space to speculatively\navoid frequent reallocations. After calling <code>try_reserve</code>,\ncapacity will be greater than or equal to <code>self.len() + additional</code> if\nit returns <code>Ok(())</code>.\nDoes nothing if capacity is already sufficient.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>If the capacity overflows, or the allocator reports a failure, then an error\nis returned.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map: HashMap&lt;<span class=\"kw-2\">&amp;</span>str, isize&gt; = HashMap::new();\nmap.try_reserve(<span class=\"number\">10</span>).expect(<span class=\"string\">\"why is the test harness OOMing on a handful of bytes?\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#833\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map: HashMap&lt;i32, i32&gt; = HashMap::with_capacity(<span class=\"number\">100</span>);\nmap.insert(<span class=\"number\">1</span>, <span class=\"number\">2</span>);\nmap.insert(<span class=\"number\">3</span>, <span class=\"number\">4</span>);\n<span class=\"macro\">assert!</span>(map.capacity() &gt;= <span class=\"number\">100</span>);\nmap.shrink_to_fit();\n<span class=\"macro\">assert!</span>(map.capacity() &gt;= <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#859\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.shrink_to\" class=\"fn\">shrink_to</a>(&amp;mut self, min_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shrinks the capacity of the map with a lower limit. It will drop\ndown no lower than the supplied limit while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.</p>\n<p>If the current capacity is less than the lower limit, this is a no-op.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map: HashMap&lt;i32, i32&gt; = HashMap::with_capacity(<span class=\"number\">100</span>);\nmap.insert(<span class=\"number\">1</span>, <span class=\"number\">2</span>);\nmap.insert(<span class=\"number\">3</span>, <span class=\"number\">4</span>);\n<span class=\"macro\">assert!</span>(map.capacity() &gt;= <span class=\"number\">100</span>);\nmap.shrink_to(<span class=\"number\">10</span>);\n<span class=\"macro\">assert!</span>(map.capacity() &gt;= <span class=\"number\">10</span>);\nmap.shrink_to(<span class=\"number\">0</span>);\n<span class=\"macro\">assert!</span>(map.capacity() &gt;= <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.entry\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#883\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.entry\" class=\"fn\">entry</a>(&amp;mut self, key: K) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/enum.Entry.html\" title=\"enum std::collections::hash::map::Entry\">Entry</a>&lt;'_, K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the given key’s corresponding entry in the map for in-place manipulation.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>letters = HashMap::new();\n\n<span class=\"kw\">for </span>ch <span class=\"kw\">in </span><span class=\"string\">\"a short treatise on fungi\"</span>.chars() {\n    letters.entry(ch).and_modify(|counter| <span class=\"kw-2\">*</span>counter += <span class=\"number\">1</span>).or_insert(<span class=\"number\">1</span>);\n}\n\n<span class=\"macro\">assert_eq!</span>(letters[<span class=\"kw-2\">&amp;</span><span class=\"string\">'s'</span>], <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(letters[<span class=\"kw-2\">&amp;</span><span class=\"string\">'t'</span>], <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(letters[<span class=\"kw-2\">&amp;</span><span class=\"string\">'u'</span>], <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(letters.get(<span class=\"kw-2\">&amp;</span><span class=\"string\">'y'</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#905-908\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.get\" class=\"fn\">get</a>&lt;Q&gt;(&amp;self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;V</a>&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value corresponding to the key.</p>\n<p>The key may be any borrowed form of the map’s key type, but\n<a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::new();\nmap.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\n<span class=\"macro\">assert_eq!</span>(map.get(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"string\">\"a\"</span>));\n<span class=\"macro\">assert_eq!</span>(map.get(<span class=\"kw-2\">&amp;</span><span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_key_value\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#963-966\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.get_key_value\" class=\"fn\">get_key_value</a>&lt;Q&gt;(&amp;self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;V</a>)&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the key-value pair corresponding to the supplied key. This is\npotentially useful:</p>\n<ul>\n<li>for key types where non-identical keys can be considered equal;</li>\n<li>for getting the <code>&amp;K</code> stored key value from a borrowed <code>&amp;Q</code> lookup key; or</li>\n<li>for getting a reference to a key with the same lifetime as the collection.</li>\n</ul>\n<p>The supplied key may be any borrowed form of the map’s key type, but\n<a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n<span class=\"kw\">use </span>std::hash::{Hash, Hasher};\n\n<span class=\"attr\">#[derive(Clone, Copy, Debug)]\n</span><span class=\"kw\">struct </span>S {\n    id: u32,\n    name: <span class=\"kw-2\">&amp;</span><span class=\"lifetime\">'static </span>str, <span class=\"comment\">// ignored by equality and hashing operations\n</span>}\n\n<span class=\"kw\">impl </span>PartialEq <span class=\"kw\">for </span>S {\n    <span class=\"kw\">fn </span>eq(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, other: <span class=\"kw-2\">&amp;</span>S) -&gt; bool {\n        <span class=\"self\">self</span>.id == other.id\n    }\n}\n\n<span class=\"kw\">impl </span>Eq <span class=\"kw\">for </span>S {}\n\n<span class=\"kw\">impl </span>Hash <span class=\"kw\">for </span>S {\n    <span class=\"kw\">fn </span>hash&lt;H: Hasher&gt;(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, state: <span class=\"kw-2\">&amp;mut </span>H) {\n        <span class=\"self\">self</span>.id.hash(state);\n    }\n}\n\n<span class=\"kw\">let </span>j_a = S { id: <span class=\"number\">1</span>, name: <span class=\"string\">\"Jessica\" </span>};\n<span class=\"kw\">let </span>j_b = S { id: <span class=\"number\">1</span>, name: <span class=\"string\">\"Jess\" </span>};\n<span class=\"kw\">let </span>p = S { id: <span class=\"number\">2</span>, name: <span class=\"string\">\"Paul\" </span>};\n<span class=\"macro\">assert_eq!</span>(j_a, j_b);\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::new();\nmap.insert(j_a, <span class=\"string\">\"Paris\"</span>);\n<span class=\"macro\">assert_eq!</span>(map.get_key_value(<span class=\"kw-2\">&amp;</span>j_a), <span class=\"prelude-val\">Some</span>((<span class=\"kw-2\">&amp;</span>j_a, <span class=\"kw-2\">&amp;</span><span class=\"string\">\"Paris\"</span>)));\n<span class=\"macro\">assert_eq!</span>(map.get_key_value(<span class=\"kw-2\">&amp;</span>j_b), <span class=\"prelude-val\">Some</span>((<span class=\"kw-2\">&amp;</span>j_a, <span class=\"kw-2\">&amp;</span><span class=\"string\">\"Paris\"</span>))); <span class=\"comment\">// the notable case\n</span><span class=\"macro\">assert_eq!</span>(map.get_key_value(<span class=\"kw-2\">&amp;</span>p), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_disjoint_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.86.0\">1.86.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1042-1048\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.get_disjoint_mut\" class=\"fn\">get_disjoint_mut</a>&lt;Q, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n    ks: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">N</a>],\n) -&gt; [<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut V</a>&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">N</a>]<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to get mutable references to <code>N</code> values in the map at once.</p>\n<p>Returns an array of length <code>N</code> with the results of each query. For soundness, at most one\nmutable reference will be returned to any value. <code>None</code> will be used if the key is missing.</p>\n<p>This method performs a check to ensure there are no duplicate keys, which currently has a time-complexity of O(n^2),\nso be careful when passing many keys.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if any keys are overlapping.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>libraries = HashMap::new();\nlibraries.insert(<span class=\"string\">\"Bodleian Library\"</span>.to_string(), <span class=\"number\">1602</span>);\nlibraries.insert(<span class=\"string\">\"Athenæum\"</span>.to_string(), <span class=\"number\">1807</span>);\nlibraries.insert(<span class=\"string\">\"Herzogin-Anna-Amalia-Bibliothek\"</span>.to_string(), <span class=\"number\">1691</span>);\nlibraries.insert(<span class=\"string\">\"Library of Congress\"</span>.to_string(), <span class=\"number\">1800</span>);\n\n<span class=\"comment\">// Get Athenæum and Bodleian Library\n</span><span class=\"kw\">let </span>[<span class=\"prelude-val\">Some</span>(a), <span class=\"prelude-val\">Some</span>(b)] = libraries.get_disjoint_mut([\n    <span class=\"string\">\"Athenæum\"</span>,\n    <span class=\"string\">\"Bodleian Library\"</span>,\n]) <span class=\"kw\">else </span>{ <span class=\"macro\">panic!</span>() };\n\n<span class=\"comment\">// Assert values of Athenæum and Library of Congress\n</span><span class=\"kw\">let </span>got = libraries.get_disjoint_mut([\n    <span class=\"string\">\"Athenæum\"</span>,\n    <span class=\"string\">\"Library of Congress\"</span>,\n]);\n<span class=\"macro\">assert_eq!</span>(\n    got,\n    [\n        <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">1807</span>),\n        <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">1800</span>),\n    ],\n);\n\n<span class=\"comment\">// Missing keys result in None\n</span><span class=\"kw\">let </span>got = libraries.get_disjoint_mut([\n    <span class=\"string\">\"Athenæum\"</span>,\n    <span class=\"string\">\"New York Public Library\"</span>,\n]);\n<span class=\"macro\">assert_eq!</span>(\n    got,\n    [\n        <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">1807</span>),\n        <span class=\"prelude-val\">None\n    </span>]\n);</code></pre></div>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>libraries = HashMap::new();\nlibraries.insert(<span class=\"string\">\"Athenæum\"</span>.to_string(), <span class=\"number\">1807</span>);\n\n<span class=\"comment\">// Duplicate keys panic!\n</span><span class=\"kw\">let </span>got = libraries.get_disjoint_mut([\n    <span class=\"string\">\"Athenæum\"</span>,\n    <span class=\"string\">\"Athenæum\"</span>,\n]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_disjoint_unchecked_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.86.0\">1.86.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1109-1115\">Source</a></span><h4 class=\"code-header\">pub unsafe fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.get_disjoint_unchecked_mut\" class=\"fn\">get_disjoint_unchecked_mut</a>&lt;Q, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n    ks: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">N</a>],\n) -&gt; [<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut V</a>&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">N</a>]<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to get mutable references to <code>N</code> values in the map at once, without validating that\nthe values are unique.</p>\n<p>Returns an array of length <code>N</code> with the results of each query. <code>None</code> will be used if\nthe key is missing.</p>\n<p>For a safe alternative see <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#method.get_disjoint_mut\" title=\"method std::collections::hash::map::HashMap::get_disjoint_mut\"><code>get_disjoint_mut</code></a>.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Calling this method with overlapping keys is <em><a href=\"https://doc.rust-lang.org/reference/behavior-considered-undefined.html\">undefined behavior</a></em> even if the resulting\nreferences are not used.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>libraries = HashMap::new();\nlibraries.insert(<span class=\"string\">\"Bodleian Library\"</span>.to_string(), <span class=\"number\">1602</span>);\nlibraries.insert(<span class=\"string\">\"Athenæum\"</span>.to_string(), <span class=\"number\">1807</span>);\nlibraries.insert(<span class=\"string\">\"Herzogin-Anna-Amalia-Bibliothek\"</span>.to_string(), <span class=\"number\">1691</span>);\nlibraries.insert(<span class=\"string\">\"Library of Congress\"</span>.to_string(), <span class=\"number\">1800</span>);\n\n<span class=\"comment\">// SAFETY: The keys do not overlap.\n</span><span class=\"kw\">let </span>[<span class=\"prelude-val\">Some</span>(a), <span class=\"prelude-val\">Some</span>(b)] = (<span class=\"kw\">unsafe </span>{ libraries.get_disjoint_unchecked_mut([\n    <span class=\"string\">\"Athenæum\"</span>,\n    <span class=\"string\">\"Bodleian Library\"</span>,\n]) }) <span class=\"kw\">else </span>{ <span class=\"macro\">panic!</span>() };\n\n<span class=\"comment\">// SAFETY: The keys do not overlap.\n</span><span class=\"kw\">let </span>got = <span class=\"kw\">unsafe </span>{ libraries.get_disjoint_unchecked_mut([\n    <span class=\"string\">\"Athenæum\"</span>,\n    <span class=\"string\">\"Library of Congress\"</span>,\n]) };\n<span class=\"macro\">assert_eq!</span>(\n    got,\n    [\n        <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">1807</span>),\n        <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">1800</span>),\n    ],\n);\n\n<span class=\"comment\">// SAFETY: The keys do not overlap.\n</span><span class=\"kw\">let </span>got = <span class=\"kw\">unsafe </span>{ libraries.get_disjoint_unchecked_mut([\n    <span class=\"string\">\"Athenæum\"</span>,\n    <span class=\"string\">\"New York Public Library\"</span>,\n]) };\n<span class=\"comment\">// Missing keys result in None\n</span><span class=\"macro\">assert_eq!</span>(got, [<span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">1807</span>), <span class=\"prelude-val\">None</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1139-1142\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.contains_key\" class=\"fn\">contains_key</a>&lt;Q&gt;(&amp;self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the map contains a value for the specified key.</p>\n<p>The key may be any borrowed form of the map’s key type, but\n<a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::new();\nmap.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\n<span class=\"macro\">assert_eq!</span>(map.contains_key(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(map.contains_key(<span class=\"kw-2\">&amp;</span><span class=\"number\">2</span>), <span class=\"bool-val\">false</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1167-1170\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;Q&gt;(&amp;mut self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut V</a>&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the value corresponding to the key.</p>\n<p>The key may be any borrowed form of the map’s key type, but\n<a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::new();\nmap.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\n<span class=\"kw\">if let </span><span class=\"prelude-val\">Some</span>(x) = map.get_mut(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>) {\n    <span class=\"kw-2\">*</span>x = <span class=\"string\">\"b\"</span>;\n}\n<span class=\"macro\">assert_eq!</span>(map[<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>], <span class=\"string\">\"b\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1203\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, k: K, v: V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;</h4></section></summary><div class=\"docblock\"><p>Inserts a key-value pair into the map.</p>\n<p>If the map did not have this key present, <a href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> is returned.</p>\n<p>If the map did have this key present, the value is updated, and the old\nvalue is returned. The key is not updated, though; this matters for\ntypes that can be <code>==</code> without being identical. See the <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/index.html#insert-and-complex-keys\" title=\"mod std::collections\">module-level\ndocumentation</a> for more.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::new();\n<span class=\"macro\">assert_eq!</span>(map.insert(<span class=\"number\">37</span>, <span class=\"string\">\"a\"</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(map.is_empty(), <span class=\"bool-val\">false</span>);\n\nmap.insert(<span class=\"number\">37</span>, <span class=\"string\">\"b\"</span>);\n<span class=\"macro\">assert_eq!</span>(map.insert(<span class=\"number\">37</span>, <span class=\"string\">\"c\"</span>), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"b\"</span>));\n<span class=\"macro\">assert_eq!</span>(map[<span class=\"kw-2\">&amp;</span><span class=\"number\">37</span>], <span class=\"string\">\"c\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_insert\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1231\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.try_insert\" class=\"fn\">try_insert</a>(\n    &amp;mut self,\n    key: K,\n    value: V,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut V</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.OccupiedError.html\" title=\"struct std::collections::hash::map::OccupiedError\">OccupiedError</a>&lt;'_, K, V&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>map_try_insert</code>)</span></div></span></summary><div class=\"docblock\"><p>Tries to insert a key-value pair into the map, and returns\na mutable reference to the value in the entry.</p>\n<p>If the map already had this key present, nothing is updated, and\nan error containing the occupied entry and the value is returned.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(map_try_insert)]\n\n</span><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::new();\n<span class=\"macro\">assert_eq!</span>(map.try_insert(<span class=\"number\">37</span>, <span class=\"string\">\"a\"</span>).unwrap(), <span class=\"kw-2\">&amp;</span><span class=\"string\">\"a\"</span>);\n\n<span class=\"kw\">let </span>err = map.try_insert(<span class=\"number\">37</span>, <span class=\"string\">\"b\"</span>).unwrap_err();\n<span class=\"macro\">assert_eq!</span>(err.entry.key(), <span class=\"kw-2\">&amp;</span><span class=\"number\">37</span>);\n<span class=\"macro\">assert_eq!</span>(err.entry.get(), <span class=\"kw-2\">&amp;</span><span class=\"string\">\"a\"</span>);\n<span class=\"macro\">assert_eq!</span>(err.value, <span class=\"string\">\"b\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1258-1261\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;mut self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes a key from the map, returning the value at the key if the key\nwas previously in the map.</p>\n<p>The key may be any borrowed form of the map’s key type, but\n<a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::new();\nmap.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\n<span class=\"macro\">assert_eq!</span>(map.remove(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"a\"</span>));\n<span class=\"macro\">assert_eq!</span>(map.remove(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_entry\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1287-1290\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html#tymethod.remove_entry\" class=\"fn\">remove_entry</a>&lt;Q&gt;(&amp;mut self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a>&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes a key from the map, returning the stored key and value if the\nkey was previously in the map.</p>\n<p>The key may be any borrowed form of the map’s key type, but\n<a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>map = HashMap::new();\nmap.insert(<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>);\n<span class=\"macro\">assert_eq!</span>(map.remove_entry(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>((<span class=\"number\">1</span>, <span class=\"string\">\"a\"</span>)));\n<span class=\"macro\">assert_eq!</span>(map.remove(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details></div></details>",0,"typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C%26Q%3E-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1363-1367\">Source</a></span><a href=\"#impl-Index%3C%26Q%3E-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, Q, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1377\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;V</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value corresponding to the supplied key.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the key is not present in the <code>HashMap</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1369\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = V</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details></div></details>","Index<&Q>","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1906\">Source</a></span><a href=\"#impl-IntoIterator-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1930\">Source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.IntoIter.html\" title=\"struct std::collections::hash::map::IntoIter\">IntoIter</a>&lt;K, V&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::collections::HashMap;\n\n<span class=\"kw\">let </span>map = HashMap::from([\n    (<span class=\"string\">\"a\"</span>, <span class=\"number\">1</span>),\n    (<span class=\"string\">\"b\"</span>, <span class=\"number\">2</span>),\n    (<span class=\"string\">\"c\"</span>, <span class=\"number\">3</span>),\n]);\n\n<span class=\"comment\">// Not possible with .iter()\n</span><span class=\"kw\">let </span>vec: Vec&lt;(<span class=\"kw-2\">&amp;</span>str, i32)&gt; = map.into_iter().collect();</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1907\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(K, V)</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1908\">Source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.IntoIter.html\" title=\"struct std::collections::hash::map::IntoIter\">IntoIter</a>&lt;K, V&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","typelang::evaluator::Env","typelang::typesys::Subst"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1315-1319\">Source</a></span><a href=\"#impl-PartialEq-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1321\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","typelang::evaluator::Env","typelang::typesys::Subst"],["<section id=\"impl-Eq-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/collections/hash/map.rs.html#1331-1335\">Source</a></span><a href=\"#impl-Eq-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","typelang::evaluator::Env","typelang::typesys::Subst"],["<section id=\"impl-UnwindSafe-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/std/panic.rs.html#279-283\">Source</a></span><a href=\"#impl-UnwindSafe-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;K, V, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a>,</div></h3></section>","UnwindSafe","typelang::evaluator::Env","typelang::typesys::Subst"]]]]);
target/miri/x86_64-unknown-linux-gnu/debug/deps/error_message_patterns-1f67e38df9548de5:1:{"RunWith":{"args":["--crate-name","error_message_patterns","--edition=2021","tests/error_message_patterns.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=0b871d449829c6b5","-C","extra-filename=-1f67e38df9548de5","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[101,114,114,111,114,95,109,101,115,115,97,103,101,95,112,97,116,116,101,114,110,115]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/doc/src/typelang/errors.rs.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="Source of the Rust file `src/errors.rs`."><title>errors.rs - source</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="../../static.files/src-script-813739b1.js"></script><script defer src="../../src-files.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc src"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="sidebar"><div class="src-sidebar-title"><h2>Files</h2></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><h1><div class="sub-heading">typelang/</div>errors.rs</h1><rustdoc-toolbar></rustdoc-toolbar></div><div class="example-wrap digits-3"><pre class="rust"><code><a href=#1 id=1 data-nosnippet>1</a><span class="doccomment">//! エラー型の定義（共通フォーマット: \[CODE\] メッセージ @line:col / @pos）。
target/doc/src/typelang/errors.rs.html:3:<a href=#3 id=3 data-nosnippet>3</a></span><span class="kw">use </span>std::error::Error <span class="kw">as </span>StdError;
target/doc/typelang/sidebar-items.js:1:window.SIDEBAR_ITEMS = {"mod":["ast","errors","evaluator","infer","lexer","parser","repl","typesys"]};
target/llvm-cov-target/debug/deps/repl_load_program_errors-b9f8b82633740dca.d:1:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/repl_load_program_errors-b9f8b82633740dca.d: tests/repl_load_program_errors.rs
target/llvm-cov-target/debug/deps/repl_load_program_errors-b9f8b82633740dca.d:3:/home/hsin4/myproject/typelang-hm-rs/target/llvm-cov-target/debug/deps/repl_load_program_errors-b9f8b82633740dca: tests/repl_load_program_errors.rs
target/llvm-cov-target/debug/deps/repl_load_program_errors-b9f8b82633740dca.d:5:tests/repl_load_program_errors.rs:
target/doc/typelang/parser/fn.parse_expr.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `parse_expr` fn in crate `typelang`."><title>parse_expr in typelang::parser - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc fn"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>parser</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">parser</a></div><h1>Function <span class="fn">parse_expr</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/parser.rs.html#592-607">Source</a> </span></div><pre class="rust item-decl"><code>pub fn parse_expr(src: &amp;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.str.html">str</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="enum" href="../ast/enum.Expr.html" title="enum typelang::ast::Expr">Expr</a>, <a class="struct" href="../errors/struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a>&gt;</code></pre></section></div></main></body></html>
target/doc/src/typelang/infer.rs.html:12:<a href=#12 id=12 data-nosnippet>12</a><span class="kw">use </span><span class="kw">crate</span>::errors::TypeError;
target/miri/x86_64-unknown-linux-gnu/debug/deps/parser_additional-4382f28324ee4144:1:{"RunWith":{"args":["--crate-name","parser_additional","--edition=2021","tests/parser_additional.rs","--error-format=json","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--diagnostic-width=138","--emit=dep-info,link","-C","embed-bitcode=no","-C","debuginfo=2","--test","--check-cfg","cfg(docsrs,test)","--check-cfg","cfg(feature, values())","-C","metadata=733d43b8ef4b4b9f","-C","extra-filename=-4382f28324ee4144","--out-dir","/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","--target","x86_64-unknown-linux-gnu","-C","incremental=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/incremental","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps","-L","dependency=/home/hsin4/myproject/typelang-hm-rs/target/miri/debug/deps","--extern","typelang=/home/hsin4/myproject/typelang-hm-rs/target/miri/x86_64-unknown-linux-gnu/debug/deps/libtypelang-fde088029821c05e.rlib"],"env":[[{"Unix":[67,65,82,71,79]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,66,73,78,95,69,88,69,95,116,121,112,101,108,97,110,103,45,114,101,112,108]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,100,101,98,117,103,47,116,121,112,101,108,97,110,103,45,114,101,112,108]}],[{"Unix":[67,65,82,71,79,95,67,82,65,84,69,95,78,65,77,69]},{"Unix":[112,97,114,115,101,114,95,97,100,100,105,116,105,111,110,97,108]}],[{"Unix":[67,65,82,71,79,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111]}],[{"Unix":[67,65,82,71,79,95,77,65,75,69,70,76,65,71,83]},{"Unix":[45,106,32,45,45,106,111,98,115,101,114,118,101,114,45,102,100,115,61,54,44,55,32,45,45,106,111,98,115,101,114,118,101,114,45,97,117,116,104,61,54,44,55]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,77,65,78,73,70,69,83,84,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,67,97,114,103,111,46,116,111,109,108]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,65,85,84,72,79,82,83]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,68,69,83,67,82,73,80,84,73,79,78]},{"Unix":[65,32,116,105,110,121,32,72,105,110,100,108,101,121,226,128,147,77,105,108,110,101,114,45,98,97,115,101,100,32,102,117,110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,101,32,102,111,114,32,108,101,97,114,110,105,110,103,32,97,110,100,32,118,97,108,105,100,97,116,105,111,110,32,40,82,117,115,116,41,46]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,72,79,77,69,80,65,71,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69]},{"Unix":[77,73,84]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,76,73,67,69,78,83,69,95,70,73,76,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,78,65,77,69]},{"Unix":[116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,65,68,77,69]},{"Unix":[82,69,65,68,77,69,46,109,100]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,69,80,79,83,73,84,79,82,89]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,82,85,83,84,95,86,69,82,83,73,79,78]},{"Unix":[49,46,55,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78]},{"Unix":[48,46,49,46,48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,65,74,79,82]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,77,73,78,79,82]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,65,84,67,72]},{"Unix":[48]}],[{"Unix":[67,65,82,71,79,95,80,75,71,95,86,69,82,83,73,79,78,95,80,82,69]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,80,82,73,77,65,82,89,95,80,65,67,75,65,71,69]},{"Unix":[49]}],[{"Unix":[67,65,82,71,79,95,83,66,79,77,95,80,65,84,72]},{"Unix":[]}],[{"Unix":[67,65,82,71,79,95,84,65,82,71,69,84,95,84,77,80,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,116,109,112]}],[{"Unix":[67,85,82,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[68,66,85,83,95,83,69,83,83,73,79,78,95,66,85,83,95,65,68,68,82,69,83,83]},{"Unix":[117,110,105,120,58,112,97,116,104,61,47,114,117,110,47,117,115,101,114,47,49,48,48,48,47,98,117,115]}],[{"Unix":[68,73,83,80,76,65,89]},{"Unix":[58,48]}],[{"Unix":[71,78,85,77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52]}],[{"Unix":[72,79,83,84,84,89,80,69]},{"Unix":[120,56,54,95,54,52]}],[{"Unix":[76,65,78,71]},{"Unix":[106,97,95,74,80,46,85,84,70,45,56]}],[{"Unix":[76,68,95,76,73,66,82,65,82,89,95,80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115,47,116,97,114,103,101,116,47,109,105,114,105,47,100,101,98,117,103,47,100,101,112,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,108,105,98]}],[{"Unix":[76,69,83,83,67,76,79,83,69]},{"Unix":[47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115,32,37,115]}],[{"Unix":[76,69,83,83,79,80,69,78]},{"Unix":[124,32,47,117,115,114,47,98,105,110,47,108,101,115,115,112,105,112,101,32,37,115]}],[{"Unix":[76,79,71,78,65,77,69]},{"Unix":[104,115,105,110,52]}],[{"Unix":[76,83,95,67,79,76,79,82,83]},{"Unix":[114,115,61,48,58,100,105,61,48,49,59,51,52,58,108,110,61,48,49,59,51,54,58,109,104,61,48,48,58,112,105,61,52,48,59,51,51,58,115,111,61,48,49,59,51,53,58,100,111,61,48,49,59,51,53,58,98,100,61,52,48,59,51,51,59,48,49,58,99,100,61,52,48,59,51,51,59,48,49,58,111,114,61,52,48,59,51,49,59,48,49,58,109,105,61,48,48,58,115,117,61,51,55,59,52,49,58,115,103,61,51,48,59,52,51,58,99,97,61,48,48,58,116,119,61,51,48,59,52,50,58,111,119,61,51,52,59,52,50,58,115,116,61,51,55,59,52,52,58,101,120,61,48,49,59,51,50,58,42,46,116,97,114,61,48,49,59,51,49,58,42,46,116,103,122,61,48,49,59,51,49,58,42,46,97,114,99,61,48,49,59,51,49,58,42,46,97,114,106,61,48,49,59,51,49,58,42,46,116,97,122,61,48,49,59,51,49,58,42,46,108,104,97,61,48,49,59,51,49,58,42,46,108,122,52,61,48,49,59,51,49,58,42,46,108,122,104,61,48,49,59,51,49,58,42,46,108,122,109,97,61,48,49,59,51,49,58,42,46,116,108,122,61,48,49,59,51,49,58,42,46,116,120,122,61,48,49,59,51,49,58,42,46,116,122,111,61,48,49,59,51,49,58,42,46,116,55,122,61,48,49,59,51,49,58,42,46,122,105,112,61,48,49,59,51,49,58,42,46,122,61,48,49,59,51,49,58,42,46,100,122,61,48,49,59,51,49,58,42,46,103,122,61,48,49,59,51,49,58,42,46,108,114,122,61,48,49,59,51,49,58,42,46,108,122,61,48,49,59,51,49,58,42,46,108,122,111,61,48,49,59,51,49,58,42,46,120,122,61,48,49,59,51,49,58,42,46,122,115,116,61,48,49,59,51,49,58,42,46,116,122,115,116,61,48,49,59,51,49,58,42,46,98,122,50,61,48,49,59,51,49,58,42,46,98,122,61,48,49,59,51,49,58,42,46,116,98,122,61,48,49,59,51,49,58,42,46,116,98,122,50,61,48,49,59,51,49,58,42,46,116,122,61,48,49,59,51,49,58,42,46,100,101,98,61,48,49,59,51,49,58,42,46,114,112,109,61,48,49,59,51,49,58,42,46,106,97,114,61,48,49,59,51,49,58,42,46,119,97,114,61,48,49,59,51,49,58,42,46,101,97,114,61,48,49,59,51,49,58,42,46,115,97,114,61,48,49,59,51,49,58,42,46,114,97,114,61,48,49,59,51,49,58,42,46,97,108,122,61,48,49,59,51,49,58,42,46,97,99,101,61,48,49,59,51,49,58,42,46,122,111,111,61,48,49,59,51,49,58,42,46,99,112,105,111,61,48,49,59,51,49,58,42,46,55,122,61,48,49,59,51,49,58,42,46,114,122,61,48,49,59,51,49,58,42,46,99,97,98,61,48,49,59,51,49,58,42,46,119,105,109,61,48,49,59,51,49,58,42,46,115,119,109,61,48,49,59,51,49,58,42,46,100,119,109,61,48,49,59,51,49,58,42,46,101,115,100,61,48,49,59,51,49,58,42,46,97,118,105,102,61,48,49,59,51,53,58,42,46,106,112,103,61,48,49,59,51,53,58,42,46,106,112,101,103,61,48,49,59,51,53,58,42,46,109,106,112,103,61,48,49,59,51,53,58,42,46,109,106,112,101,103,61,48,49,59,51,53,58,42,46,103,105,102,61,48,49,59,51,53,58,42,46,98,109,112,61,48,49,59,51,53,58,42,46,112,98,109,61,48,49,59,51,53,58,42,46,112,103,109,61,48,49,59,51,53,58,42,46,112,112,109,61,48,49,59,51,53,58,42,46,116,103,97,61,48,49,59,51,53,58,42,46,120,98,109,61,48,49,59,51,53,58,42,46,120,112,109,61,48,49,59,51,53,58,42,46,116,105,102,61,48,49,59,51,53,58,42,46,116,105,102,102,61,48,49,59,51,53,58,42,46,112,110,103,61,48,49,59,51,53,58,42,46,115,118,103,61,48,49,59,51,53,58,42,46,115,118,103,122,61,48,49,59,51,53,58,42,46,109,110,103,61,48,49,59,51,53,58,42,46,112,99,120,61,48,49,59,51,53,58,42,46,109,111,118,61,48,49,59,51,53,58,42,46,109,112,103,61,48,49,59,51,53,58,42,46,109,112,101,103,61,48,49,59,51,53,58,42,46,109,50,118,61,48,49,59,51,53,58,42,46,109,107,118,61,48,49,59,51,53,58,42,46,119,101,98,109,61,48,49,59,51,53,58,42,46,119,101,98,112,61,48,49,59,51,53,58,42,46,111,103,109,61,48,49,59,51,53,58,42,46,109,112,52,61,48,49,59,51,53,58,42,46,109,52,118,61,48,49,59,51,53,58,42,46,109,112,52,118,61,48,49,59,51,53,58,42,46,118,111,98,61,48,49,59,51,53,58,42,46,113,116,61,48,49,59,51,53,58,42,46,110,117,118,61,48,49,59,51,53,58,42,46,119,109,118,61,48,49,59,51,53,58,42,46,97,115,102,61,48,49,59,51,53,58,42,46,114,109,61,48,49,59,51,53,58,42,46,114,109,118,98,61,48,49,59,51,53,58,42,46,102,108,99,61,48,49,59,51,53,58,42,46,97,118,105,61,48,49,59,51,53,58,42,46,102,108,105,61,48,49,59,51,53,58,42,46,102,108,118,61,48,49,59,51,53,58,42,46,103,108,61,48,49,59,51,53,58,42,46,100,108,61,48,49,59,51,53,58,42,46,120,99,102,61,48,49,59,51,53,58,42,46,120,119,100,61,48,49,59,51,53,58,42,46,121,117,118,61,48,49,59,51,53,58,42,46,99,103,109,61,48,49,59,51,53,58,42,46,101,109,102,61,48,49,59,51,53,58,42,46,111,103,118,61,48,49,59,51,53,58,42,46,111,103,120,61,48,49,59,51,53,58,42,46,97,97,99,61,48,48,59,51,54,58,42,46,97,117,61,48,48,59,51,54,58,42,46,102,108,97,99,61,48,48,59,51,54,58,42,46,109,52,97,61,48,48,59,51,54,58,42,46,109,105,100,61,48,48,59,51,54,58,42,46,109,105,100,105,61,48,48,59,51,54,58,42,46,109,107,97,61,48,48,59,51,54,58,42,46,109,112,51,61,48,48,59,51,54,58,42,46,109,112,99,61,48,48,59,51,54,58,42,46,111,103,103,61,48,48,59,51,54,58,42,46,114,97,61,48,48,59,51,54,58,42,46,119,97,118,61,48,48,59,51,54,58,42,46,111,103,97,61,48,48,59,51,54,58,42,46,111,112,117,115,61,48,48,59,51,54,58,42,46,115,112,120,61,48,48,59,51,54,58,42,46,120,115,112,102,61,48,48,59,51,54,58,42,126,61,48,48,59,57,48,58,42,35,61,48,48,59,57,48,58,42,46,98,97,107,61,48,48,59,57,48,58,42,46,99,114,100,111,119,110,108,111,97,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,100,105,115,116,61,48,48,59,57,48,58,42,46,100,112,107,103,45,110,101,119,61,48,48,59,57,48,58,42,46,100,112,107,103,45,111,108,100,61,48,48,59,57,48,58,42,46,100,112,107,103,45,116,109,112,61,48,48,59,57,48,58,42,46,111,108,100,61,48,48,59,57,48,58,42,46,111,114,105,103,61,48,48,59,57,48,58,42,46,112,97,114,116,61,48,48,59,57,48,58,42,46,114,101,106,61,48,48,59,57,48,58,42,46,114,112,109,110,101,119,61,48,48,59,57,48,58,42,46,114,112,109,111,114,105,103,61,48,48,59,57,48,58,42,46,114,112,109,115,97,118,101,61,48,48,59,57,48,58,42,46,115,119,112,61,48,48,59,57,48,58,42,46,116,109,112,61,48,48,59,57,48,58,42,46,117,99,102,45,100,105,115,116,61,48,48,59,57,48,58,42,46,117,99,102,45,110,101,119,61,48,48,59,57,48,58,42,46,117,99,102,45,111,108,100,61,48,48,59,57,48,58]}],[{"Unix":[77,65,75,69,70,73,76,69,95,76,73,83,84]},{"Unix":[77,97,107,101,102,105,108,101]}],[{"Unix":[77,65,75,69,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,65,75,69,76,69,86,69,76]},{"Unix":[49]}],[{"Unix":[77,65,75,69,95,84,69,82,77,69,82,82]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,65,75,69,95,84,69,82,77,79,85,84]},{"Unix":[47,100,101,118,47,112,116,115,47,48]}],[{"Unix":[77,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[77,73,82,73,95,66,69,95,82,85,83,84,67]},{"Unix":[104,111,115,116]}],[{"Unix":[77,73,82,73,95,76,79,67,65,76,95,67,82,65,84,69,83]},{"Unix":[116,121,112,101,108,97,110,103,95,104,109,95,114,115]}],[{"Unix":[77,73,82,73,95,83,89,83,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,99,104,101,47,109,105,114,105]}],[{"Unix":[78,65,77,69]},{"Unix":[84,104,105,110,107,67,101,110,116,114,101]}],[{"Unix":[78,86,77,95,66,73,78]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110]}],[{"Unix":[78,86,77,95,67,68,95,70,76,65,71,83]},{"Unix":[]}],[{"Unix":[78,86,77,95,68,73,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109]}],[{"Unix":[78,86,77,95,73,78,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,105,110,99,108,117,100,101,47,110,111,100,101]}],[{"Unix":[79,76,68,80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116]}],[{"Unix":[79,82,73,71,73,78,95,82,69,70]},{"Unix":[111,114,105,103,105,110,47,109,97,105,110]}],[{"Unix":[80,65,84,72]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,98,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,103,104,99,117,112,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,108,111,99,97,108,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,115,104,105,109,115,58,47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118,47,98,105,110,58,47,104,111,109,101,47,104,115,105,110,52,47,46,110,118,109,47,118,101,114,115,105,111,110,115,47,110,111,100,101,47,118,50,50,46,49,57,46,48,47,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,115,98,105,110,58,47,117,115,114,47,108,111,99,97,108,47,98,105,110,58,47,117,115,114,47,115,98,105,110,58,47,117,115,114,47,98,105,110,58,47,115,98,105,110,58,47,98,105,110,58,47,117,115,114,47,103,97,109,101,115,58,47,117,115,114,47,108,111,99,97,108,47,103,97,109,101,115,58,47,117,115,114,47,108,105,98,47,119,115,108,47,108,105,98,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,115,121,115,116,101,109,51,50,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,98,101,109,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,87,105,110,100,111,119,115,80,111,119,101,114,83,104,101,108,108,47,118,49,46,48,47,58,47,109,110,116,47,99,47,87,105,110,100,111,119,115,47,83,121,115,116,101,109,51,50,47,79,112,101,110,83,83,72,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,49,53,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,77,105,99,114,111,115,111,102,116,32,83,81,76,32,83,101,114,118,101,114,47,67,108,105,101,110,116,32,83,68,75,47,79,68,66,67,47,49,55,48,47,84,111,111,108,115,47,66,105,110,110,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,100,111,116,110,101,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,71,105,116,47,99,109,100,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,110,111,100,101,106,115,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,32,40,120,56,54,41,47,87,105,110,100,111,119,115,32,75,105,116,115,47,49,48,47,87,105,110,100,111,119,115,32,80,101,114,102,111,114,109,97,110,99,101,32,84,111,111,108,107,105,116,47,58,47,109,110,116,47,99,47,80,114,111,103,114,97,109,32,70,105,108,101,115,47,80,111,119,101,114,83,104,101,108,108,47,55,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,83,99,114,105,112,116,115,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,80,121,116,104,111,110,51,49,51,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,80,121,116,104,111,110,47,76,97,117,110,99,104,101,114,47,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,100,111,119,115,65,112,112,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,77,105,99,114,111,115,111,102,116,47,87,105,110,71,101,116,47,76,105,110,107,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,76,111,99,97,108,47,80,114,111,103,114,97,109,115,47,77,105,99,114,111,115,111,102,116,32,86,83,32,67,111,100,101,47,98,105,110,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,46,100,111,116,110,101,116,47,116,111,111,108,115,58,47,109,110,116,47,99,47,85,115,101,114,115,47,104,115,105,110,52,47,65,112,112,68,97,116,97,47,82,111,97,109,105,110,103,47,110,112,109,58,47,115,110,97,112,47,98,105,110]}],[{"Unix":[80,85,76,83,69,95,83,69,82,86,69,82]},{"Unix":[117,110,105,120,58,47,109,110,116,47,119,115,108,103,47,80,117,108,115,101,83,101,114,118,101,114]}],[{"Unix":[80,87,68]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]}],[{"Unix":[80,89,69,78,86,95,82,79,79,84]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,112,121,101,110,118]}],[{"Unix":[80,89,69,78,86,95,83,72,69,76,76]},{"Unix":[98,97,115,104]}],[{"Unix":[82,85,83,84,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,109,105,114,105]}],[{"Unix":[82,85,83,84,67,95,87,82,65,80,80,69,82]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,68,79,67]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112,47,116,111,111,108,99,104,97,105,110,115,47,110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117,47,98,105,110,47,99,97,114,103,111,45,109,105,114,105]}],[{"Unix":[82,85,83,84,85,80,95,72,79,77,69]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,114,117,115,116,117,112]}],[{"Unix":[82,85,83,84,85,80,95,84,79,79,76,67,72,65,73,78]},{"Unix":[110,105,103,104,116,108,121,45,120,56,54,95,54,52,45,117,110,107,110,111,119,110,45,108,105,110,117,120,45,103,110,117]}],[{"Unix":[82,85,83,84,95,82,69,67,85,82,83,73,79,78,95,67,79,85,78,84]},{"Unix":[50]}],[{"Unix":[83,72,69,76,76]},{"Unix":[47,98,105,110,47,98,97,115,104]}],[{"Unix":[83,72,76,86,76]},{"Unix":[49]}],[{"Unix":[83,83,76,95,67,69,82,84,95,68,73,82]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,115]}],[{"Unix":[83,83,76,95,67,69,82,84,95,70,73,76,69]},{"Unix":[47,117,115,114,47,108,105,98,47,115,115,108,47,99,101,114,116,46,112,101,109]}],[{"Unix":[84,69,82,77]},{"Unix":[120,116,101,114,109,45,50,53,54,99,111,108,111,114]}],[{"Unix":[85,83,69,82]},{"Unix":[104,115,105,110,52]}],[{"Unix":[87,65,89,76,65,78,68,95,68,73,83,80,76,65,89]},{"Unix":[119,97,121,108,97,110,100,45,48]}],[{"Unix":[87,83,76,50,95,71,85,73,95,65,80,80,83,95,69,78,65,66,76,69,68]},{"Unix":[49]}],[{"Unix":[87,83,76,69,78,86]},{"Unix":[]}],[{"Unix":[87,83,76,95,68,73,83,84,82,79,95,78,65,77,69]},{"Unix":[85,98,117,110,116,117]}],[{"Unix":[87,83,76,95,73,78,84,69,82,79,80]},{"Unix":[47,114,117,110,47,87,83,76,47,49,54,49,50,95,105,110,116,101,114,111,112]}],[{"Unix":[88,68,71,95,68,65,84,65,95,68,73,82,83]},{"Unix":[47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,58,47,117,115,114,47,115,104,97,114,101,58,47,118,97,114,47,108,105,98,47,115,110,97,112,100,47,100,101,115,107,116,111,112]}],[{"Unix":[88,68,71,95,82,85,78,84,73,77,69,95,68,73,82]},{"Unix":[47,114,117,110,47,117,115,101,114,47,49,48,48,48,47]}],[{"Unix":[95]},{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,46,99,97,114,103,111,47,98,105,110,47,99,97,114,103,111]}]],"current_dir":{"Unix":[47,104,111,109,101,47,104,115,105,110,52,47,109,121,112,114,111,106,101,99,116,47,116,121,112,101,108,97,110,103,45,104,109,45,114,115]},"stdin":[]}}
target/doc/typelang/parser/fn.parse_program.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `parse_program` fn in crate `typelang`."><title>parse_program in typelang::parser - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc fn"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>parser</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">parser</a></div><h1>Function <span class="fn">parse_program</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/parser.rs.html#588-591">Source</a> </span></div><pre class="rust item-decl"><code>pub fn parse_program(src: &amp;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.str.html">str</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="struct" href="../ast/struct.Program.html" title="struct typelang::ast::Program">Program</a>, <a class="struct" href="../errors/struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a>&gt;</code></pre></section></div></main></body></html>
target/doc/typelang/infer/fn.infer_expr.html:6:) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;(<a class="type" href="../typesys/type.Subst.html" title="type typelang::typesys::Subst">Subst</a>, <a class="struct" href="../typesys/struct.QualType.html" title="struct typelang::typesys::QualType">QualType</a>), <a class="struct" href="../errors/struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a>&gt;</code></pre></section></div></main></body></html>
target/doc/src/typelang/lexer.rs.html:11:<a href=#11 id=11 data-nosnippet>11</a></span><span class="kw">use </span><span class="kw">crate</span>::errors::LexerError;
target/doc/typelang/parser/struct.Parser.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `Parser` struct in crate `typelang`."><title>Parser in typelang::parser - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc struct"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><section id="rustdoc-toc"><h2 class="location"><a href="#">Parser</a></h2><h3><a href="#implementations">Methods</a></h3><ul class="block method"><li><a href="#method.new" title="new">new</a></li><li><a href="#method.parse_expr" title="parse_expr">parse_expr</a></li><li><a href="#method.parse_program" title="parse_program">parse_program</a></li><li><a href="#method.parse_sigma_type" title="parse_sigma_type">parse_sigma_type</a></li><li><a href="#method.parse_type" title="parse_type">parse_type</a></li></ul><h3><a href="#synthetic-implementations">Auto Trait Implementations</a></h3><ul class="block synthetic-implementation"><li><a href="#impl-Freeze-for-Parser" title="Freeze">Freeze</a></li><li><a href="#impl-RefUnwindSafe-for-Parser" title="RefUnwindSafe">RefUnwindSafe</a></li><li><a href="#impl-Send-for-Parser" title="Send">Send</a></li><li><a href="#impl-Sync-for-Parser" title="Sync">Sync</a></li><li><a href="#impl-Unpin-for-Parser" title="Unpin">Unpin</a></li><li><a href="#impl-UnwindSafe-for-Parser" title="UnwindSafe">UnwindSafe</a></li></ul><h3><a href="#blanket-implementations">Blanket Implementations</a></h3><ul class="block blanket-implementation"><li><a href="#impl-Any-for-T" title="Any">Any</a></li><li><a href="#impl-Borrow%3CT%3E-for-T" title="Borrow&#60;T&#62;">Borrow&#60;T&#62;</a></li><li><a href="#impl-BorrowMut%3CT%3E-for-T" title="BorrowMut&#60;T&#62;">BorrowMut&#60;T&#62;</a></li><li><a href="#impl-From%3CT%3E-for-T" title="From&#60;T&#62;">From&#60;T&#62;</a></li><li><a href="#impl-Into%3CU%3E-for-T" title="Into&#60;U&#62;">Into&#60;U&#62;</a></li><li><a href="#impl-TryFrom%3CU%3E-for-T" title="TryFrom&#60;U&#62;">TryFrom&#60;U&#62;</a></li><li><a href="#impl-TryInto%3CU%3E-for-T" title="TryInto&#60;U&#62;">TryInto&#60;U&#62;</a></li></ul></section><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>parser</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">parser</a></div><h1>Struct <span class="struct">Parser</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/parser.rs.html#16-19">Source</a> </span></div><pre class="rust item-decl"><code>pub struct Parser { <span class="comment">/* private fields */</span> }</code></pre><h2 id="implementations" class="section-header">Implementations<a href="#implementations" class="anchor">§</a></h2><div id="implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-Parser" class="impl"><a class="src rightside" href="../../src/typelang/parser.rs.html#21-530">Source</a><a href="#impl-Parser" class="anchor">§</a><h3 class="code-header">impl <a class="struct" href="struct.Parser.html" title="struct typelang::parser::Parser">Parser</a></h3></section></summary><div class="impl-items"><section id="method.new" class="method"><a class="src rightside" href="../../src/typelang/parser.rs.html#22-24">Source</a><h4 class="code-header">pub fn <a href="#method.new" class="fn">new</a>(tokens: <a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/vec/struct.Vec.html" title="struct alloc::vec::Vec">Vec</a>&lt;<a class="struct" href="../lexer/struct.Token.html" title="struct typelang::lexer::Token">Token</a>&gt;) -&gt; Self</h4></section><details class="toggle method-toggle" open><summary><section id="method.parse_program" class="method"><a class="src rightside" href="../../src/typelang/parser.rs.html#69-102">Source</a><h4 class="code-header">pub fn <a href="#method.parse_program" class="fn">parse_program</a>(&amp;mut self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="struct" href="../ast/struct.Program.html" title="struct typelang::ast::Program">Program</a>, <a class="struct" href="../errors/struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a>&gt;</h4></section></summary><div class="docblock"><p>program := { toplevel }</p>
target/doc/typelang/parser/struct.Parser.html:10:</div></details><details class="toggle method-toggle" open><summary><section id="method.parse_expr" class="method"><a class="src rightside" href="../../src/typelang/parser.rs.html#119-130">Source</a><h4 class="code-header">pub fn <a href="#method.parse_expr" class="fn">parse_expr</a>(&amp;mut self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="enum" href="../ast/enum.Expr.html" title="enum typelang::ast::Expr">Expr</a>, <a class="struct" href="../errors/struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a>&gt;</h4></section></summary><div class="docblock"><p>expr := (lambda | let_in | if | infix_cmp) [‘::’ type]</p>
target/doc/typelang/parser/struct.Parser.html:16:</div></details><section id="method.parse_sigma_type" class="method"><a class="src rightside" href="../../src/typelang/parser.rs.html#408-425">Source</a><h4 class="code-header">pub fn <a href="#method.parse_sigma_type" class="fn">parse_sigma_type</a>(&amp;mut self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="struct" href="../ast/struct.SigmaType.html" title="struct typelang::ast::SigmaType">SigmaType</a>, <a class="struct" href="../errors/struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a>&gt;</h4></section><section id="method.parse_type" class="method"><a class="src rightside" href="../../src/typelang/parser.rs.html#468-476">Source</a><h4 class="code-header">pub fn <a href="#method.parse_type" class="fn">parse_type</a>(&amp;mut self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="enum" href="../ast/enum.TypeExpr.html" title="enum typelang::ast::TypeExpr">TypeExpr</a>, <a class="struct" href="../errors/struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a>&gt;</h4></section></div></details></div><h2 id="synthetic-implementations" class="section-header">Auto Trait Implementations<a href="#synthetic-implementations" class="anchor">§</a></h2><div id="synthetic-implementations-list"><section id="impl-Freeze-for-Parser" class="impl"><a href="#impl-Freeze-for-Parser" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html" title="trait core::marker::Freeze">Freeze</a> for <a class="struct" href="struct.Parser.html" title="struct typelang::parser::Parser">Parser</a></h3></section><section id="impl-RefUnwindSafe-for-Parser" class="impl"><a href="#impl-RefUnwindSafe-for-Parser" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html" title="trait core::panic::unwind_safe::RefUnwindSafe">RefUnwindSafe</a> for <a class="struct" href="struct.Parser.html" title="struct typelang::parser::Parser">Parser</a></h3></section><section id="impl-Send-for-Parser" class="impl"><a href="#impl-Send-for-Parser" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html" title="trait core::marker::Send">Send</a> for <a class="struct" href="struct.Parser.html" title="struct typelang::parser::Parser">Parser</a></h3></section><section id="impl-Sync-for-Parser" class="impl"><a href="#impl-Sync-for-Parser" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html" title="trait core::marker::Sync">Sync</a> for <a class="struct" href="struct.Parser.html" title="struct typelang::parser::Parser">Parser</a></h3></section><section id="impl-Unpin-for-Parser" class="impl"><a href="#impl-Unpin-for-Parser" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html" title="trait core::marker::Unpin">Unpin</a> for <a class="struct" href="struct.Parser.html" title="struct typelang::parser::Parser">Parser</a></h3></section><section id="impl-UnwindSafe-for-Parser" class="impl"><a href="#impl-UnwindSafe-for-Parser" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html" title="trait core::panic::unwind_safe::UnwindSafe">UnwindSafe</a> for <a class="struct" href="struct.Parser.html" title="struct typelang::parser::Parser">Parser</a></h3></section></div><h2 id="blanket-implementations" class="section-header">Blanket Implementations<a href="#blanket-implementations" class="anchor">§</a></h2><div id="blanket-implementations-list"><details class="toggle implementors-toggle"><summary><section id="impl-Any-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/any.rs.html#138">Source</a><a href="#impl-Any-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html" title="trait core::any::Any">Any</a> for T<div class="where">where
target/doc/typelang/parser/struct.Parser.html:25:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/parser/struct.Parser.html:26:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/src/typelang/repl/line_editor.rs.html:343:<a href=#343 id=343 data-nosnippet>343</a>            <span class="kw">return </span><span class="prelude-val">Err</span>(io::Error::last_os_error());
target/doc/src/typelang/repl/line_editor.rs.html:351:<a href=#351 id=351 data-nosnippet>351</a>            <span class="kw">return </span><span class="prelude-val">Err</span>(io::Error::last_os_error());
target/doc/src/typelang/repl/cmd.rs.html:791:<a href=#791 id=791 data-nosnippet>791</a>    </span><span class="kw">fn </span>handle_load_error_and_reload_without_history() {
target/doc/src/typelang/parser.rs.html:13:<a href=#13 id=13 data-nosnippet>13</a><span class="kw">use </span><span class="kw">crate</span>::errors::ParseError;
target/doc/src/typelang/parser.rs.html:589:<a href=#589 id=589 data-nosnippet>589</a>    <span class="kw">let </span>ts = lex(src).map_err(|e| ParseError::new(<span class="string">"PAR100"</span>, <span class="macro">format!</span>(<span class="string">"lex error: {}"</span>, e), <span class="prelude-val">None</span>))<span class="question-mark">?</span>;
target/doc/src/typelang/parser.rs.html:593:<a href=#593 id=593 data-nosnippet>593</a>    <span class="kw">let </span>ts = lex(src).map_err(|e| ParseError::new(<span class="string">"PAR100"</span>, <span class="macro">format!</span>(<span class="string">"lex error: {}"</span>, e), <span class="prelude-val">None</span>))<span class="question-mark">?</span>;
target/doc/typelang/infer/fn.infer_type_str_with_defaulting.html:4:) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html" title="struct alloc::string::String">String</a>, <a class="struct" href="../errors/struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a>&gt;</code></pre></section></div></main></body></html>
target/doc/src/typelang/evaluator.rs.html:14:<a href=#14 id=14 data-nosnippet>14</a><span class="kw">use </span><span class="kw">crate</span>::errors::EvalError;
target/doc/typelang/errors/struct.TypeError.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `TypeError` struct in crate `typelang`."><title>TypeError in typelang::errors - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc struct"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><section id="rustdoc-toc"><h2 class="location"><a href="#">Type<wbr>Error</a></h2><h3><a href="#fields">Tuple Fields</a></h3><ul class="block structfield"><li><a href="#structfield.0" title="0">0</a></li></ul><h3><a href="#implementations">Methods</a></h3><ul class="block method"><li><a href="#method.at" title="at">at</a></li><li><a href="#method.at_with_snippet" title="at_with_snippet">at_with_snippet</a></li><li><a href="#method.new" title="new">new</a></li></ul><h3><a href="#trait-implementations">Trait Implementations</a></h3><ul class="block trait-implementation"><li><a href="#impl-Clone-for-TypeError" title="Clone">Clone</a></li><li><a href="#impl-Debug-for-TypeError" title="Debug">Debug</a></li><li><a href="#impl-Display-for-TypeError" title="Display">Display</a></li><li><a href="#impl-Error-for-TypeError" title="Error">Error</a></li></ul><h3><a href="#synthetic-implementations">Auto Trait Implementations</a></h3><ul class="block synthetic-implementation"><li><a href="#impl-Freeze-for-TypeError" title="Freeze">Freeze</a></li><li><a href="#impl-RefUnwindSafe-for-TypeError" title="RefUnwindSafe">RefUnwindSafe</a></li><li><a href="#impl-Send-for-TypeError" title="Send">Send</a></li><li><a href="#impl-Sync-for-TypeError" title="Sync">Sync</a></li><li><a href="#impl-Unpin-for-TypeError" title="Unpin">Unpin</a></li><li><a href="#impl-UnwindSafe-for-TypeError" title="UnwindSafe">UnwindSafe</a></li></ul><h3><a href="#blanket-implementations">Blanket Implementations</a></h3><ul class="block blanket-implementation"><li><a href="#impl-Any-for-T" title="Any">Any</a></li><li><a href="#impl-Borrow%3CT%3E-for-T" title="Borrow&#60;T&#62;">Borrow&#60;T&#62;</a></li><li><a href="#impl-BorrowMut%3CT%3E-for-T" title="BorrowMut&#60;T&#62;">BorrowMut&#60;T&#62;</a></li><li><a href="#impl-CloneToUninit-for-T" title="CloneToUninit">CloneToUninit</a></li><li><a href="#impl-From%3CT%3E-for-T" title="From&#60;T&#62;">From&#60;T&#62;</a></li><li><a href="#impl-Into%3CU%3E-for-T" title="Into&#60;U&#62;">Into&#60;U&#62;</a></li><li><a href="#impl-ToOwned-for-T" title="ToOwned">ToOwned</a></li><li><a href="#impl-ToString-for-T" title="ToString">ToString</a></li><li><a href="#impl-TryFrom%3CU%3E-for-T" title="TryFrom&#60;U&#62;">TryFrom&#60;U&#62;</a></li><li><a href="#impl-TryInto%3CU%3E-for-T" title="TryInto&#60;U&#62;">TryInto&#60;U&#62;</a></li></ul></section><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>errors</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">errors</a></div><h1>Struct <span class="struct">TypeError</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/errors.rs.html#122">Source</a> </span></div><pre class="rust item-decl"><code>pub struct TypeError(pub <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a>);</code></pre><h2 id="fields" class="fields section-header">Tuple Fields<a href="#fields" class="anchor">§</a></h2><span id="structfield.0" class="structfield section-header"><a href="#structfield.0" class="anchor field">§</a><code>0: <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></code></span><h2 id="implementations" class="section-header">Implementations<a href="#implementations" class="anchor">§</a></h2><div id="implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-TypeError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#123-146">Source</a><a href="#impl-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section></summary><div class="impl-items"><section id="method.new" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#124-126">Source</a><h4 class="code-header">pub fn <a href="#method.new" class="fn">new</a>(
target/doc/typelang/errors/struct.TypeError.html:5:) -&gt; Self</h4></section><section id="method.at" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#127-135">Source</a><h4 class="code-header">pub fn <a href="#method.at" class="fn">at</a>(
target/doc/typelang/errors/struct.TypeError.html:11:) -&gt; Self</h4></section><section id="method.at_with_snippet" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#136-145">Source</a><h4 class="code-header">pub fn <a href="#method.at_with_snippet" class="fn">at_with_snippet</a>(
target/doc/typelang/errors/struct.TypeError.html:18:) -&gt; Self</h4></section></div></details></div><h2 id="trait-implementations" class="section-header">Trait Implementations<a href="#trait-implementations" class="anchor">§</a></h2><div id="trait-implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-Clone-for-TypeError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#121">Source</a><a href="#impl-Clone-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html" title="trait core::clone::Clone">Clone</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.clone" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#121">Source</a><a href="#method.clone" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone" class="fn">clone</a>(&amp;self) -&gt; <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.clone_from" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215">Source</a></span><a href="#method.clone_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from" class="fn">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Debug-for-TypeError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#121">Source</a><a href="#impl-Debug-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html" title="trait core::fmt::Debug">Debug</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#121">Source</a><a href="#method.fmt" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Display-for-TypeError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#179-183">Source</a><a href="#impl-Display-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html" title="trait core::fmt::Display">Display</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt-1" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#180-182">Source</a><a href="#method.fmt-1" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Error-for-TypeError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#184">Source</a><a href="#impl-Error-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.source" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.30.0">1.30.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#105">Source</a></span><a href="#method.source" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.source" class="fn">source</a>(&amp;self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;&amp;(dyn <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.source">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.description" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#131">Source</a></span><a href="#method.description" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.description" class="fn">description</a>(&amp;self) -&gt; &amp;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.str.html">str</a></h4></section></summary><span class="item-info"><div class="stab deprecated"><span class="emoji">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.description">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.cause" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#141">Source</a></span><a href="#method.cause" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.cause" class="fn">cause</a>(&amp;self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;&amp;dyn <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a>&gt;</h4></section></summary><span class="item-info"><div class="stab deprecated"><span class="emoji">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class="toggle method-toggle" open><summary><section id="method.provide" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#204">Source</a><a href="#method.provide" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.provide" class="fn">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/error/struct.Request.html" title="struct core::error::Request">Request</a>&lt;'a&gt;)</h4></section></summary><span class="item-info"><div class="stab unstable"><span class="emoji">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.provide">Read more</a></div></details></div></details></div><h2 id="synthetic-implementations" class="section-header">Auto Trait Implementations<a href="#synthetic-implementations" class="anchor">§</a></h2><div id="synthetic-implementations-list"><section id="impl-Freeze-for-TypeError" class="impl"><a href="#impl-Freeze-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html" title="trait core::marker::Freeze">Freeze</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section><section id="impl-RefUnwindSafe-for-TypeError" class="impl"><a href="#impl-RefUnwindSafe-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html" title="trait core::panic::unwind_safe::RefUnwindSafe">RefUnwindSafe</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section><section id="impl-Send-for-TypeError" class="impl"><a href="#impl-Send-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html" title="trait core::marker::Send">Send</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section><section id="impl-Sync-for-TypeError" class="impl"><a href="#impl-Sync-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html" title="trait core::marker::Sync">Sync</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section><section id="impl-Unpin-for-TypeError" class="impl"><a href="#impl-Unpin-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html" title="trait core::marker::Unpin">Unpin</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section><section id="impl-UnwindSafe-for-TypeError" class="impl"><a href="#impl-UnwindSafe-for-TypeError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html" title="trait core::panic::unwind_safe::UnwindSafe">UnwindSafe</a> for <a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a></h3></section></div><h2 id="blanket-implementations" class="section-header">Blanket Implementations<a href="#blanket-implementations" class="anchor">§</a></h2><div id="blanket-implementations-list"><details class="toggle implementors-toggle"><summary><section id="impl-Any-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/any.rs.html#138">Source</a><a href="#impl-Any-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html" title="trait core::any::Any">Any</a> for T<div class="where">where
target/doc/typelang/errors/struct.TypeError.html:30:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/errors/struct.TypeError.html:31:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/errors/struct.ParseError.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `ParseError` struct in crate `typelang`."><title>ParseError in typelang::errors - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc struct"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><section id="rustdoc-toc"><h2 class="location"><a href="#">Parse<wbr>Error</a></h2><h3><a href="#fields">Tuple Fields</a></h3><ul class="block structfield"><li><a href="#structfield.0" title="0">0</a></li></ul><h3><a href="#implementations">Methods</a></h3><ul class="block method"><li><a href="#method.at" title="at">at</a></li><li><a href="#method.new" title="new">new</a></li></ul><h3><a href="#trait-implementations">Trait Implementations</a></h3><ul class="block trait-implementation"><li><a href="#impl-Clone-for-ParseError" title="Clone">Clone</a></li><li><a href="#impl-Debug-for-ParseError" title="Debug">Debug</a></li><li><a href="#impl-Display-for-ParseError" title="Display">Display</a></li><li><a href="#impl-Error-for-ParseError" title="Error">Error</a></li></ul><h3><a href="#synthetic-implementations">Auto Trait Implementations</a></h3><ul class="block synthetic-implementation"><li><a href="#impl-Freeze-for-ParseError" title="Freeze">Freeze</a></li><li><a href="#impl-RefUnwindSafe-for-ParseError" title="RefUnwindSafe">RefUnwindSafe</a></li><li><a href="#impl-Send-for-ParseError" title="Send">Send</a></li><li><a href="#impl-Sync-for-ParseError" title="Sync">Sync</a></li><li><a href="#impl-Unpin-for-ParseError" title="Unpin">Unpin</a></li><li><a href="#impl-UnwindSafe-for-ParseError" title="UnwindSafe">UnwindSafe</a></li></ul><h3><a href="#blanket-implementations">Blanket Implementations</a></h3><ul class="block blanket-implementation"><li><a href="#impl-Any-for-T" title="Any">Any</a></li><li><a href="#impl-Borrow%3CT%3E-for-T" title="Borrow&#60;T&#62;">Borrow&#60;T&#62;</a></li><li><a href="#impl-BorrowMut%3CT%3E-for-T" title="BorrowMut&#60;T&#62;">BorrowMut&#60;T&#62;</a></li><li><a href="#impl-CloneToUninit-for-T" title="CloneToUninit">CloneToUninit</a></li><li><a href="#impl-From%3CT%3E-for-T" title="From&#60;T&#62;">From&#60;T&#62;</a></li><li><a href="#impl-Into%3CU%3E-for-T" title="Into&#60;U&#62;">Into&#60;U&#62;</a></li><li><a href="#impl-ToOwned-for-T" title="ToOwned">ToOwned</a></li><li><a href="#impl-ToString-for-T" title="ToString">ToString</a></li><li><a href="#impl-TryFrom%3CU%3E-for-T" title="TryFrom&#60;U&#62;">TryFrom&#60;U&#62;</a></li><li><a href="#impl-TryInto%3CU%3E-for-T" title="TryInto&#60;U&#62;">TryInto&#60;U&#62;</a></li></ul></section><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>errors</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">errors</a></div><h1>Struct <span class="struct">ParseError</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/errors.rs.html#105">Source</a> </span></div><pre class="rust item-decl"><code>pub struct ParseError(pub <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a>);</code></pre><h2 id="fields" class="fields section-header">Tuple Fields<a href="#fields" class="anchor">§</a></h2><span id="structfield.0" class="structfield section-header"><a href="#structfield.0" class="anchor field">§</a><code>0: <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></code></span><h2 id="implementations" class="section-header">Implementations<a href="#implementations" class="anchor">§</a></h2><div id="implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-ParseError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#106-119">Source</a><a href="#impl-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section></summary><div class="impl-items"><section id="method.new" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#107-109">Source</a><h4 class="code-header">pub fn <a href="#method.new" class="fn">new</a>(
target/doc/typelang/errors/struct.ParseError.html:5:) -&gt; Self</h4></section><section id="method.at" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#110-118">Source</a><h4 class="code-header">pub fn <a href="#method.at" class="fn">at</a>(
target/doc/typelang/errors/struct.ParseError.html:11:) -&gt; Self</h4></section></div></details></div><h2 id="trait-implementations" class="section-header">Trait Implementations<a href="#trait-implementations" class="anchor">§</a></h2><div id="trait-implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-Clone-for-ParseError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#104">Source</a><a href="#impl-Clone-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html" title="trait core::clone::Clone">Clone</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.clone" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#104">Source</a><a href="#method.clone" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone" class="fn">clone</a>(&amp;self) -&gt; <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.clone_from" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215">Source</a></span><a href="#method.clone_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from" class="fn">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Debug-for-ParseError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#104">Source</a><a href="#impl-Debug-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html" title="trait core::fmt::Debug">Debug</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#104">Source</a><a href="#method.fmt" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Display-for-ParseError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#172-176">Source</a><a href="#impl-Display-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html" title="trait core::fmt::Display">Display</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt-1" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#173-175">Source</a><a href="#method.fmt-1" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Error-for-ParseError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#177">Source</a><a href="#impl-Error-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.source" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.30.0">1.30.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#105">Source</a></span><a href="#method.source" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.source" class="fn">source</a>(&amp;self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;&amp;(dyn <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.source">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.description" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#131">Source</a></span><a href="#method.description" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.description" class="fn">description</a>(&amp;self) -&gt; &amp;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.str.html">str</a></h4></section></summary><span class="item-info"><div class="stab deprecated"><span class="emoji">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.description">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.cause" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#141">Source</a></span><a href="#method.cause" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.cause" class="fn">cause</a>(&amp;self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;&amp;dyn <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a>&gt;</h4></section></summary><span class="item-info"><div class="stab deprecated"><span class="emoji">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class="toggle method-toggle" open><summary><section id="method.provide" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#204">Source</a><a href="#method.provide" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.provide" class="fn">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/error/struct.Request.html" title="struct core::error::Request">Request</a>&lt;'a&gt;)</h4></section></summary><span class="item-info"><div class="stab unstable"><span class="emoji">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.provide">Read more</a></div></details></div></details></div><h2 id="synthetic-implementations" class="section-header">Auto Trait Implementations<a href="#synthetic-implementations" class="anchor">§</a></h2><div id="synthetic-implementations-list"><section id="impl-Freeze-for-ParseError" class="impl"><a href="#impl-Freeze-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html" title="trait core::marker::Freeze">Freeze</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section><section id="impl-RefUnwindSafe-for-ParseError" class="impl"><a href="#impl-RefUnwindSafe-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html" title="trait core::panic::unwind_safe::RefUnwindSafe">RefUnwindSafe</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section><section id="impl-Send-for-ParseError" class="impl"><a href="#impl-Send-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html" title="trait core::marker::Send">Send</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section><section id="impl-Sync-for-ParseError" class="impl"><a href="#impl-Sync-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html" title="trait core::marker::Sync">Sync</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section><section id="impl-Unpin-for-ParseError" class="impl"><a href="#impl-Unpin-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html" title="trait core::marker::Unpin">Unpin</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section><section id="impl-UnwindSafe-for-ParseError" class="impl"><a href="#impl-UnwindSafe-for-ParseError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html" title="trait core::panic::unwind_safe::UnwindSafe">UnwindSafe</a> for <a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">ParseError</a></h3></section></div><h2 id="blanket-implementations" class="section-header">Blanket Implementations<a href="#blanket-implementations" class="anchor">§</a></h2><div id="blanket-implementations-list"><details class="toggle implementors-toggle"><summary><section id="impl-Any-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/any.rs.html#138">Source</a><a href="#impl-Any-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html" title="trait core::any::Any">Any</a> for T<div class="where">where
target/doc/typelang/errors/struct.ParseError.html:23:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/errors/struct.ParseError.html:24:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/errors/struct.EvalError.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `EvalError` struct in crate `typelang`."><title>EvalError in typelang::errors - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc struct"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><section id="rustdoc-toc"><h2 class="location"><a href="#">Eval<wbr>Error</a></h2><h3><a href="#fields">Tuple Fields</a></h3><ul class="block structfield"><li><a href="#structfield.0" title="0">0</a></li></ul><h3><a href="#implementations">Methods</a></h3><ul class="block method"><li><a href="#method.at" title="at">at</a></li><li><a href="#method.new" title="new">new</a></li></ul><h3><a href="#trait-implementations">Trait Implementations</a></h3><ul class="block trait-implementation"><li><a href="#impl-Clone-for-EvalError" title="Clone">Clone</a></li><li><a href="#impl-Debug-for-EvalError" title="Debug">Debug</a></li><li><a href="#impl-Display-for-EvalError" title="Display">Display</a></li><li><a href="#impl-Error-for-EvalError" title="Error">Error</a></li></ul><h3><a href="#synthetic-implementations">Auto Trait Implementations</a></h3><ul class="block synthetic-implementation"><li><a href="#impl-Freeze-for-EvalError" title="Freeze">Freeze</a></li><li><a href="#impl-RefUnwindSafe-for-EvalError" title="RefUnwindSafe">RefUnwindSafe</a></li><li><a href="#impl-Send-for-EvalError" title="Send">Send</a></li><li><a href="#impl-Sync-for-EvalError" title="Sync">Sync</a></li><li><a href="#impl-Unpin-for-EvalError" title="Unpin">Unpin</a></li><li><a href="#impl-UnwindSafe-for-EvalError" title="UnwindSafe">UnwindSafe</a></li></ul><h3><a href="#blanket-implementations">Blanket Implementations</a></h3><ul class="block blanket-implementation"><li><a href="#impl-Any-for-T" title="Any">Any</a></li><li><a href="#impl-Borrow%3CT%3E-for-T" title="Borrow&#60;T&#62;">Borrow&#60;T&#62;</a></li><li><a href="#impl-BorrowMut%3CT%3E-for-T" title="BorrowMut&#60;T&#62;">BorrowMut&#60;T&#62;</a></li><li><a href="#impl-CloneToUninit-for-T" title="CloneToUninit">CloneToUninit</a></li><li><a href="#impl-From%3CT%3E-for-T" title="From&#60;T&#62;">From&#60;T&#62;</a></li><li><a href="#impl-Into%3CU%3E-for-T" title="Into&#60;U&#62;">Into&#60;U&#62;</a></li><li><a href="#impl-ToOwned-for-T" title="ToOwned">ToOwned</a></li><li><a href="#impl-ToString-for-T" title="ToString">ToString</a></li><li><a href="#impl-TryFrom%3CU%3E-for-T" title="TryFrom&#60;U&#62;">TryFrom&#60;U&#62;</a></li><li><a href="#impl-TryInto%3CU%3E-for-T" title="TryInto&#60;U&#62;">TryInto&#60;U&#62;</a></li></ul></section><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>errors</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">errors</a></div><h1>Struct <span class="struct">EvalError</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/errors.rs.html#149">Source</a> </span></div><pre class="rust item-decl"><code>pub struct EvalError(pub <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a>);</code></pre><h2 id="fields" class="fields section-header">Tuple Fields<a href="#fields" class="anchor">§</a></h2><span id="structfield.0" class="structfield section-header"><a href="#structfield.0" class="anchor field">§</a><code>0: <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></code></span><h2 id="implementations" class="section-header">Implementations<a href="#implementations" class="anchor">§</a></h2><div id="implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-EvalError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#150-163">Source</a><a href="#impl-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section></summary><div class="impl-items"><section id="method.new" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#151-153">Source</a><h4 class="code-header">pub fn <a href="#method.new" class="fn">new</a>(
target/doc/typelang/errors/struct.EvalError.html:5:) -&gt; Self</h4></section><section id="method.at" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#154-162">Source</a><h4 class="code-header">pub fn <a href="#method.at" class="fn">at</a>(
target/doc/typelang/errors/struct.EvalError.html:11:) -&gt; Self</h4></section></div></details></div><h2 id="trait-implementations" class="section-header">Trait Implementations<a href="#trait-implementations" class="anchor">§</a></h2><div id="trait-implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-Clone-for-EvalError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#148">Source</a><a href="#impl-Clone-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html" title="trait core::clone::Clone">Clone</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.clone" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#148">Source</a><a href="#method.clone" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone" class="fn">clone</a>(&amp;self) -&gt; <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.clone_from" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215">Source</a></span><a href="#method.clone_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from" class="fn">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Debug-for-EvalError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#148">Source</a><a href="#impl-Debug-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html" title="trait core::fmt::Debug">Debug</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#148">Source</a><a href="#method.fmt" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Display-for-EvalError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#186-190">Source</a><a href="#impl-Display-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html" title="trait core::fmt::Display">Display</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt-1" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#187-189">Source</a><a href="#method.fmt-1" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Error-for-EvalError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#191">Source</a><a href="#impl-Error-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.source" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.30.0">1.30.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#105">Source</a></span><a href="#method.source" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.source" class="fn">source</a>(&amp;self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;&amp;(dyn <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.source">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.description" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#131">Source</a></span><a href="#method.description" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.description" class="fn">description</a>(&amp;self) -&gt; &amp;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.str.html">str</a></h4></section></summary><span class="item-info"><div class="stab deprecated"><span class="emoji">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.description">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.cause" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#141">Source</a></span><a href="#method.cause" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.cause" class="fn">cause</a>(&amp;self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;&amp;dyn <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a>&gt;</h4></section></summary><span class="item-info"><div class="stab deprecated"><span class="emoji">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class="toggle method-toggle" open><summary><section id="method.provide" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#204">Source</a><a href="#method.provide" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.provide" class="fn">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/error/struct.Request.html" title="struct core::error::Request">Request</a>&lt;'a&gt;)</h4></section></summary><span class="item-info"><div class="stab unstable"><span class="emoji">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.provide">Read more</a></div></details></div></details></div><h2 id="synthetic-implementations" class="section-header">Auto Trait Implementations<a href="#synthetic-implementations" class="anchor">§</a></h2><div id="synthetic-implementations-list"><section id="impl-Freeze-for-EvalError" class="impl"><a href="#impl-Freeze-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html" title="trait core::marker::Freeze">Freeze</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section><section id="impl-RefUnwindSafe-for-EvalError" class="impl"><a href="#impl-RefUnwindSafe-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html" title="trait core::panic::unwind_safe::RefUnwindSafe">RefUnwindSafe</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section><section id="impl-Send-for-EvalError" class="impl"><a href="#impl-Send-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html" title="trait core::marker::Send">Send</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section><section id="impl-Sync-for-EvalError" class="impl"><a href="#impl-Sync-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html" title="trait core::marker::Sync">Sync</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section><section id="impl-Unpin-for-EvalError" class="impl"><a href="#impl-Unpin-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html" title="trait core::marker::Unpin">Unpin</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section><section id="impl-UnwindSafe-for-EvalError" class="impl"><a href="#impl-UnwindSafe-for-EvalError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html" title="trait core::panic::unwind_safe::UnwindSafe">UnwindSafe</a> for <a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a></h3></section></div><h2 id="blanket-implementations" class="section-header">Blanket Implementations<a href="#blanket-implementations" class="anchor">§</a></h2><div id="blanket-implementations-list"><details class="toggle implementors-toggle"><summary><section id="impl-Any-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/any.rs.html#138">Source</a><a href="#impl-Any-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html" title="trait core::any::Any">Any</a> for T<div class="where">where
target/doc/typelang/errors/struct.EvalError.html:23:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/errors/struct.EvalError.html:24:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/errors/index.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="エラー型の定義（共通フォーマット: [CODE] メッセージ @line:col / @pos）。"><title>typelang::errors - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="../sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc mod"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><section id="rustdoc-toc"><h2 class="location"><a href="#">Module errors</a></h2><h3><a href="#structs">Module Items</a></h3><ul class="block"><li><a href="#structs" title="Structs">Structs</a></li></ul></section><div id="rustdoc-modnav"><h2 class="in-crate"><a href="../index.html">In crate typelang</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a></div><h1>Module <span>errors</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/errors.rs.html#1-191">Source</a> </span></div><details class="toggle top-doc" open><summary class="hideme"><span>Expand description</span></summary><div class="docblock"><p>エラー型の定義（共通フォーマット: [CODE] メッセージ @line:col / @pos）。</p>
target/doc/typelang/errors/index.html:2:</div></details><h2 id="structs" class="section-header">Structs<a href="#structs" class="anchor">§</a></h2><dl class="item-table"><dt><a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">Error<wbr>Info</a></dt><dt><a class="struct" href="struct.EvalError.html" title="struct typelang::errors::EvalError">Eval<wbr>Error</a></dt><dt><a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">Lexer<wbr>Error</a></dt><dt><a class="struct" href="struct.ParseError.html" title="struct typelang::errors::ParseError">Parse<wbr>Error</a></dt><dt><a class="struct" href="struct.TypeError.html" title="struct typelang::errors::TypeError">Type<wbr>Error</a></dt></dl></section></div></main></body></html>
target/doc/trait.impl/core/clone/trait.Clone.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>"]]]]);
target/doc/typelang/infer/struct.InferState.html:15:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/infer/struct.InferState.html:16:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/errors/struct.ErrorInfo.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `ErrorInfo` struct in crate `typelang`."><title>ErrorInfo in typelang::errors - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc struct"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><section id="rustdoc-toc"><h2 class="location"><a href="#">Error<wbr>Info</a></h2><h3><a href="#fields">Fields</a></h3><ul class="block structfield"><li><a href="#structfield.code" title="code">code</a></li><li><a href="#structfield.col" title="col">col</a></li><li><a href="#structfield.line" title="line">line</a></li><li><a href="#structfield.msg" title="msg">msg</a></li><li><a href="#structfield.pos" title="pos">pos</a></li><li><a href="#structfield.snippet" title="snippet">snippet</a></li></ul><h3><a href="#implementations">Methods</a></h3><ul class="block method"><li><a href="#method.at" title="at">at</a></li><li><a href="#method.new" title="new">new</a></li><li><a href="#method.with_snippet" title="with_snippet">with_snippet</a></li></ul><h3><a href="#trait-implementations">Trait Implementations</a></h3><ul class="block trait-implementation"><li><a href="#impl-Clone-for-ErrorInfo" title="Clone">Clone</a></li><li><a href="#impl-Debug-for-ErrorInfo" title="Debug">Debug</a></li><li><a href="#impl-Display-for-ErrorInfo" title="Display">Display</a></li></ul><h3><a href="#synthetic-implementations">Auto Trait Implementations</a></h3><ul class="block synthetic-implementation"><li><a href="#impl-Freeze-for-ErrorInfo" title="Freeze">Freeze</a></li><li><a href="#impl-RefUnwindSafe-for-ErrorInfo" title="RefUnwindSafe">RefUnwindSafe</a></li><li><a href="#impl-Send-for-ErrorInfo" title="Send">Send</a></li><li><a href="#impl-Sync-for-ErrorInfo" title="Sync">Sync</a></li><li><a href="#impl-Unpin-for-ErrorInfo" title="Unpin">Unpin</a></li><li><a href="#impl-UnwindSafe-for-ErrorInfo" title="UnwindSafe">UnwindSafe</a></li></ul><h3><a href="#blanket-implementations">Blanket Implementations</a></h3><ul class="block blanket-implementation"><li><a href="#impl-Any-for-T" title="Any">Any</a></li><li><a href="#impl-Borrow%3CT%3E-for-T" title="Borrow&#60;T&#62;">Borrow&#60;T&#62;</a></li><li><a href="#impl-BorrowMut%3CT%3E-for-T" title="BorrowMut&#60;T&#62;">BorrowMut&#60;T&#62;</a></li><li><a href="#impl-CloneToUninit-for-T" title="CloneToUninit">CloneToUninit</a></li><li><a href="#impl-From%3CT%3E-for-T" title="From&#60;T&#62;">From&#60;T&#62;</a></li><li><a href="#impl-Into%3CU%3E-for-T" title="Into&#60;U&#62;">Into&#60;U&#62;</a></li><li><a href="#impl-ToOwned-for-T" title="ToOwned">ToOwned</a></li><li><a href="#impl-ToString-for-T" title="ToString">ToString</a></li><li><a href="#impl-TryFrom%3CU%3E-for-T" title="TryFrom&#60;U&#62;">TryFrom&#60;U&#62;</a></li><li><a href="#impl-TryInto%3CU%3E-for-T" title="TryInto&#60;U&#62;">TryInto&#60;U&#62;</a></li></ul></section><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>errors</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">errors</a></div><h1>Struct <span class="struct">ErrorInfo</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/errors.rs.html#7-14">Source</a> </span></div><pre class="rust item-decl"><code>pub struct ErrorInfo {
target/doc/typelang/errors/struct.ErrorInfo.html:8:}</code></pre><h2 id="fields" class="fields section-header">Fields<a href="#fields" class="anchor">§</a></h2><span id="structfield.code" class="structfield section-header"><a href="#structfield.code" class="anchor field">§</a><code>code: &amp;'static <a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.str.html">str</a></code></span><span id="structfield.msg" class="structfield section-header"><a href="#structfield.msg" class="anchor field">§</a><code>msg: <a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html" title="struct alloc::string::String">String</a></code></span><span id="structfield.pos" class="structfield section-header"><a href="#structfield.pos" class="anchor field">§</a><code>pos: <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.usize.html">usize</a>&gt;</code></span><span id="structfield.line" class="structfield section-header"><a href="#structfield.line" class="anchor field">§</a><code>line: <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.usize.html">usize</a>&gt;</code></span><span id="structfield.col" class="structfield section-header"><a href="#structfield.col" class="anchor field">§</a><code>col: <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.usize.html">usize</a>&gt;</code></span><span id="structfield.snippet" class="structfield section-header"><a href="#structfield.snippet" class="anchor field">§</a><code>snippet: <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html" title="struct alloc::string::String">String</a>&gt;</code></span><h2 id="implementations" class="section-header">Implementations<a href="#implementations" class="anchor">§</a></h2><div id="implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-ErrorInfo" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#16-47">Source</a><a href="#impl-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section></summary><div class="impl-items"><section id="method.new" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#17-26">Source</a><h4 class="code-header">pub fn <a href="#method.new" class="fn">new</a>(
target/doc/typelang/errors/struct.ErrorInfo.html:12:) -&gt; Self</h4></section><section id="method.at" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#27-42">Source</a><h4 class="code-header">pub fn <a href="#method.at" class="fn">at</a>(
target/doc/typelang/errors/struct.ErrorInfo.html:18:) -&gt; Self</h4></section><section id="method.with_snippet" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#43-46">Source</a><h4 class="code-header">pub fn <a href="#method.with_snippet" class="fn">with_snippet</a>(self, snippet: impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html" title="struct alloc::string::String">String</a>&gt;) -&gt; Self</h4></section></div></details></div><h2 id="trait-implementations" class="section-header">Trait Implementations<a href="#trait-implementations" class="anchor">§</a></h2><div id="trait-implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-Clone-for-ErrorInfo" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#6">Source</a><a href="#impl-Clone-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html" title="trait core::clone::Clone">Clone</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.clone" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#6">Source</a><a href="#method.clone" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone" class="fn">clone</a>(&amp;self) -&gt; <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.clone_from" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215">Source</a></span><a href="#method.clone_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from" class="fn">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Debug-for-ErrorInfo" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#6">Source</a><a href="#impl-Debug-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html" title="trait core::fmt::Debug">Debug</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#6">Source</a><a href="#method.fmt" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Display-for-ErrorInfo" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#49-75">Source</a><a href="#impl-Display-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html" title="trait core::fmt::Display">Display</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt-1" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#50-74">Source</a><a href="#method.fmt-1" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt">Read more</a></div></details></div></details></div><h2 id="synthetic-implementations" class="section-header">Auto Trait Implementations<a href="#synthetic-implementations" class="anchor">§</a></h2><div id="synthetic-implementations-list"><section id="impl-Freeze-for-ErrorInfo" class="impl"><a href="#impl-Freeze-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html" title="trait core::marker::Freeze">Freeze</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section><section id="impl-RefUnwindSafe-for-ErrorInfo" class="impl"><a href="#impl-RefUnwindSafe-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html" title="trait core::panic::unwind_safe::RefUnwindSafe">RefUnwindSafe</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section><section id="impl-Send-for-ErrorInfo" class="impl"><a href="#impl-Send-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html" title="trait core::marker::Send">Send</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section><section id="impl-Sync-for-ErrorInfo" class="impl"><a href="#impl-Sync-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html" title="trait core::marker::Sync">Sync</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section><section id="impl-Unpin-for-ErrorInfo" class="impl"><a href="#impl-Unpin-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html" title="trait core::marker::Unpin">Unpin</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section><section id="impl-UnwindSafe-for-ErrorInfo" class="impl"><a href="#impl-UnwindSafe-for-ErrorInfo" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html" title="trait core::panic::unwind_safe::UnwindSafe">UnwindSafe</a> for <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></h3></section></div><h2 id="blanket-implementations" class="section-header">Blanket Implementations<a href="#blanket-implementations" class="anchor">§</a></h2><div id="blanket-implementations-list"><details class="toggle implementors-toggle"><summary><section id="impl-Any-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/any.rs.html#138">Source</a><a href="#impl-Any-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html" title="trait core::any::Any">Any</a> for T<div class="where">where
target/doc/typelang/errors/struct.ErrorInfo.html:30:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/errors/struct.ErrorInfo.html:31:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/infer/fn.infer_type_str.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `infer_type_str` fn in crate `typelang`."><title>infer_type_str in typelang::infer - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc fn"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>infer</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">infer</a></div><h1>Function <span class="fn">infer_type_str</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/infer.rs.html#670-679">Source</a> </span></div><pre class="rust item-decl"><code>pub fn infer_type_str(expr: &amp;<a class="enum" href="../ast/enum.Expr.html" title="enum typelang::ast::Expr">Expr</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html" title="struct alloc::string::String">String</a>, <a class="struct" href="../errors/struct.TypeError.html" title="struct typelang::errors::TypeError">TypeError</a>&gt;</code></pre></section></div></main></body></html>
target/doc/typelang/errors/struct.LexerError.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `LexerError` struct in crate `typelang`."><title>LexerError in typelang::errors - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc struct"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><section id="rustdoc-toc"><h2 class="location"><a href="#">Lexer<wbr>Error</a></h2><h3><a href="#fields">Tuple Fields</a></h3><ul class="block structfield"><li><a href="#structfield.0" title="0">0</a></li></ul><h3><a href="#implementations">Methods</a></h3><ul class="block method"><li><a href="#method.at" title="at">at</a></li><li><a href="#method.at_with_snippet" title="at_with_snippet">at_with_snippet</a></li><li><a href="#method.new" title="new">new</a></li></ul><h3><a href="#trait-implementations">Trait Implementations</a></h3><ul class="block trait-implementation"><li><a href="#impl-Clone-for-LexerError" title="Clone">Clone</a></li><li><a href="#impl-Debug-for-LexerError" title="Debug">Debug</a></li><li><a href="#impl-Display-for-LexerError" title="Display">Display</a></li><li><a href="#impl-Error-for-LexerError" title="Error">Error</a></li></ul><h3><a href="#synthetic-implementations">Auto Trait Implementations</a></h3><ul class="block synthetic-implementation"><li><a href="#impl-Freeze-for-LexerError" title="Freeze">Freeze</a></li><li><a href="#impl-RefUnwindSafe-for-LexerError" title="RefUnwindSafe">RefUnwindSafe</a></li><li><a href="#impl-Send-for-LexerError" title="Send">Send</a></li><li><a href="#impl-Sync-for-LexerError" title="Sync">Sync</a></li><li><a href="#impl-Unpin-for-LexerError" title="Unpin">Unpin</a></li><li><a href="#impl-UnwindSafe-for-LexerError" title="UnwindSafe">UnwindSafe</a></li></ul><h3><a href="#blanket-implementations">Blanket Implementations</a></h3><ul class="block blanket-implementation"><li><a href="#impl-Any-for-T" title="Any">Any</a></li><li><a href="#impl-Borrow%3CT%3E-for-T" title="Borrow&#60;T&#62;">Borrow&#60;T&#62;</a></li><li><a href="#impl-BorrowMut%3CT%3E-for-T" title="BorrowMut&#60;T&#62;">BorrowMut&#60;T&#62;</a></li><li><a href="#impl-CloneToUninit-for-T" title="CloneToUninit">CloneToUninit</a></li><li><a href="#impl-From%3CT%3E-for-T" title="From&#60;T&#62;">From&#60;T&#62;</a></li><li><a href="#impl-Into%3CU%3E-for-T" title="Into&#60;U&#62;">Into&#60;U&#62;</a></li><li><a href="#impl-ToOwned-for-T" title="ToOwned">ToOwned</a></li><li><a href="#impl-ToString-for-T" title="ToString">ToString</a></li><li><a href="#impl-TryFrom%3CU%3E-for-T" title="TryFrom&#60;U&#62;">TryFrom&#60;U&#62;</a></li><li><a href="#impl-TryInto%3CU%3E-for-T" title="TryInto&#60;U&#62;">TryInto&#60;U&#62;</a></li></ul></section><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>errors</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">errors</a></div><h1>Struct <span class="struct">LexerError</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/errors.rs.html#78">Source</a> </span></div><pre class="rust item-decl"><code>pub struct LexerError(pub <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a>);</code></pre><h2 id="fields" class="fields section-header">Tuple Fields<a href="#fields" class="anchor">§</a></h2><span id="structfield.0" class="structfield section-header"><a href="#structfield.0" class="anchor field">§</a><code>0: <a class="struct" href="struct.ErrorInfo.html" title="struct typelang::errors::ErrorInfo">ErrorInfo</a></code></span><h2 id="implementations" class="section-header">Implementations<a href="#implementations" class="anchor">§</a></h2><div id="implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-LexerError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#79-102">Source</a><a href="#impl-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section></summary><div class="impl-items"><section id="method.new" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#80-82">Source</a><h4 class="code-header">pub fn <a href="#method.new" class="fn">new</a>(
target/doc/typelang/errors/struct.LexerError.html:5:) -&gt; Self</h4></section><section id="method.at" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#83-91">Source</a><h4 class="code-header">pub fn <a href="#method.at" class="fn">at</a>(
target/doc/typelang/errors/struct.LexerError.html:11:) -&gt; Self</h4></section><section id="method.at_with_snippet" class="method"><a class="src rightside" href="../../src/typelang/errors.rs.html#92-101">Source</a><h4 class="code-header">pub fn <a href="#method.at_with_snippet" class="fn">at_with_snippet</a>(
target/doc/typelang/errors/struct.LexerError.html:18:) -&gt; Self</h4></section></div></details></div><h2 id="trait-implementations" class="section-header">Trait Implementations<a href="#trait-implementations" class="anchor">§</a></h2><div id="trait-implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-Clone-for-LexerError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#77">Source</a><a href="#impl-Clone-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html" title="trait core::clone::Clone">Clone</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.clone" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#77">Source</a><a href="#method.clone" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone" class="fn">clone</a>(&amp;self) -&gt; <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.clone_from" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215">Source</a></span><a href="#method.clone_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from" class="fn">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Debug-for-LexerError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#77">Source</a><a href="#impl-Debug-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html" title="trait core::fmt::Debug">Debug</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#77">Source</a><a href="#method.fmt" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Display-for-LexerError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#165-169">Source</a><a href="#impl-Display-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html" title="trait core::fmt::Display">Display</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt-1" class="method trait-impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#166-168">Source</a><a href="#method.fmt-1" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html#tymethod.fmt">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Error-for-LexerError" class="impl"><a class="src rightside" href="../../src/typelang/errors.rs.html#170">Source</a><a href="#impl-Error-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.source" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.30.0">1.30.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#105">Source</a></span><a href="#method.source" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.source" class="fn">source</a>(&amp;self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;&amp;(dyn <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.source">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.description" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#131">Source</a></span><a href="#method.description" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.description" class="fn">description</a>(&amp;self) -&gt; &amp;<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.str.html">str</a></h4></section></summary><span class="item-info"><div class="stab deprecated"><span class="emoji">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.description">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.cause" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#141">Source</a></span><a href="#method.cause" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.cause" class="fn">cause</a>(&amp;self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;&amp;dyn <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html" title="trait core::error::Error">Error</a>&gt;</h4></section></summary><span class="item-info"><div class="stab deprecated"><span class="emoji">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class="toggle method-toggle" open><summary><section id="method.provide" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/error.rs.html#204">Source</a><a href="#method.provide" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.provide" class="fn">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/error/struct.Request.html" title="struct core::error::Request">Request</a>&lt;'a&gt;)</h4></section></summary><span class="item-info"><div class="stab unstable"><span class="emoji">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href="https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html#method.provide">Read more</a></div></details></div></details></div><h2 id="synthetic-implementations" class="section-header">Auto Trait Implementations<a href="#synthetic-implementations" class="anchor">§</a></h2><div id="synthetic-implementations-list"><section id="impl-Freeze-for-LexerError" class="impl"><a href="#impl-Freeze-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html" title="trait core::marker::Freeze">Freeze</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section><section id="impl-RefUnwindSafe-for-LexerError" class="impl"><a href="#impl-RefUnwindSafe-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html" title="trait core::panic::unwind_safe::RefUnwindSafe">RefUnwindSafe</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section><section id="impl-Send-for-LexerError" class="impl"><a href="#impl-Send-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html" title="trait core::marker::Send">Send</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section><section id="impl-Sync-for-LexerError" class="impl"><a href="#impl-Sync-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html" title="trait core::marker::Sync">Sync</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section><section id="impl-Unpin-for-LexerError" class="impl"><a href="#impl-Unpin-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html" title="trait core::marker::Unpin">Unpin</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section><section id="impl-UnwindSafe-for-LexerError" class="impl"><a href="#impl-UnwindSafe-for-LexerError" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html" title="trait core::panic::unwind_safe::UnwindSafe">UnwindSafe</a> for <a class="struct" href="struct.LexerError.html" title="struct typelang::errors::LexerError">LexerError</a></h3></section></div><h2 id="blanket-implementations" class="section-header">Blanket Implementations<a href="#blanket-implementations" class="anchor">§</a></h2><div id="blanket-implementations-list"><details class="toggle implementors-toggle"><summary><section id="impl-Any-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/any.rs.html#138">Source</a><a href="#impl-Any-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html" title="trait core::any::Any">Any</a> for T<div class="where">where
target/doc/typelang/errors/struct.LexerError.html:30:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/errors/struct.LexerError.html:31:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/ast/struct.Constraint.html:16:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/ast/struct.Constraint.html:17:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/src-files.js:1:createSrcSidebar('[["typelang",["",[["repl",[],["cmd.rs","line_editor.rs","loader.rs","mod.rs","printer.rs","util.rs"]]],["ast.rs","errors.rs","evaluator.rs","infer.rs","lexer.rs","lib.rs","parser.rs","typesys.rs"]]],["typelang_repl",["",[],["typelang.rs"]]]]');
target/doc/typelang/evaluator/fn.eval_expr.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="API documentation for the Rust `eval_expr` fn in crate `typelang`."><title>eval_expr in typelang::evaluator - Rust</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../../" data-static-root-path="../../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../../static.files/storage-4e99c027.js"></script><script defer src="sidebar-items.js"></script><script defer src="../../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../../static.files/favicon-044be391.svg"></head><body class="rustdoc fn"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><div id="rustdoc-modnav"><h2><a href="index.html">In typelang::<wbr>evaluator</a></h2></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><div class="main-heading"><div class="rustdoc-breadcrumbs"><a href="../index.html">typelang</a>::<wbr><a href="index.html">evaluator</a></div><h1>Function <span class="fn">eval_expr</span><button id="copy-path" title="Copy item path to clipboard">Copy item path</button></h1><rustdoc-toolbar></rustdoc-toolbar><span class="sub-heading"><a class="src" href="../../src/typelang/evaluator.rs.html#357-438">Source</a> </span></div><pre class="rust item-decl"><code>pub fn eval_expr(e: &amp;<a class="enum" href="../ast/enum.Expr.html" title="enum typelang::ast::Expr">Expr</a>, env: &amp;mut <a class="type" href="type.Env.html" title="type typelang::evaluator::Env">Env</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>, <a class="struct" href="../errors/struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a>&gt;</code></pre></section></div></main></body></html>
target/doc/trait.impl/core/marker/trait.UnsafeUnpin.js:2:    var implementors = Object.fromEntries([["typelang",[["impl UnsafeUnpin for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>",1,["typelang::ast::Expr"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>",1,["typelang::ast::IntBase"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>",1,["typelang::ast::TypeExpr"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>",1,["typelang::evaluator::Value"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>",1,["typelang::lexer::TokenKind"]],["impl UnsafeUnpin for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>",1,["typelang::typesys::Type"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>",1,["typelang::ast::Constraint"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>",1,["typelang::ast::Program"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>",1,["typelang::ast::SigmaType"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>",1,["typelang::ast::TopLevel"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>",1,["typelang::errors::ErrorInfo"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>",1,["typelang::errors::EvalError"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>",1,["typelang::errors::LexerError"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>",1,["typelang::errors::ParseError"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>",1,["typelang::errors::TypeError"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>",1,["typelang::evaluator::Prim2"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>",1,["typelang::infer::InferState"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>",1,["typelang::lexer::Token"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/parser/struct.Parser.html\" title=\"struct typelang::parser::Parser\">Parser</a>",1,["typelang::parser::Parser"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>",1,["typelang::typesys::ClassEnv"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>",1,["typelang::typesys::Constraint"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>",1,["typelang::typesys::QualType"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>",1,["typelang::typesys::Scheme"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>",1,["typelang::typesys::TApp"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>",1,["typelang::typesys::TCon"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>",1,["typelang::typesys::TFun"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>",1,["typelang::typesys::TTuple"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>",1,["typelang::typesys::TVar"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>",1,["typelang::typesys::TVarSupply"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>",1,["typelang::typesys::TypeEnv"]],["impl UnsafeUnpin for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>",1,["typelang::typesys::UnifyError"]]]]]);
target/doc/trait.impl/core/marker/trait.Freeze.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>",1,["typelang::ast::Expr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>",1,["typelang::ast::IntBase"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>",1,["typelang::ast::TypeExpr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>",1,["typelang::evaluator::Value"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>",1,["typelang::lexer::TokenKind"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>",1,["typelang::typesys::Type"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>",1,["typelang::ast::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>",1,["typelang::ast::Program"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>",1,["typelang::ast::SigmaType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>",1,["typelang::ast::TopLevel"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>",1,["typelang::errors::ErrorInfo"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>",1,["typelang::errors::EvalError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>",1,["typelang::errors::LexerError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>",1,["typelang::errors::ParseError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>",1,["typelang::errors::TypeError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>",1,["typelang::evaluator::Prim2"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>",1,["typelang::infer::InferState"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>",1,["typelang::lexer::Token"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/parser/struct.Parser.html\" title=\"struct typelang::parser::Parser\">Parser</a>",1,["typelang::parser::Parser"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>",1,["typelang::typesys::ClassEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>",1,["typelang::typesys::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>",1,["typelang::typesys::QualType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>",1,["typelang::typesys::Scheme"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>",1,["typelang::typesys::TApp"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>",1,["typelang::typesys::TCon"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>",1,["typelang::typesys::TFun"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>",1,["typelang::typesys::TTuple"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>",1,["typelang::typesys::TVar"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>",1,["typelang::typesys::TVarSupply"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>",1,["typelang::typesys::TypeEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>",1,["typelang::typesys::UnifyError"]]]]]);
target/doc/trait.impl/core/marker/trait.Send.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>",1,["typelang::ast::Expr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>",1,["typelang::ast::IntBase"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>",1,["typelang::ast::TypeExpr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>",1,["typelang::evaluator::Value"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>",1,["typelang::lexer::TokenKind"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>",1,["typelang::typesys::Type"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>",1,["typelang::ast::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>",1,["typelang::ast::Program"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>",1,["typelang::ast::SigmaType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>",1,["typelang::ast::TopLevel"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>",1,["typelang::errors::ErrorInfo"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>",1,["typelang::errors::EvalError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>",1,["typelang::errors::LexerError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>",1,["typelang::errors::ParseError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>",1,["typelang::errors::TypeError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>",1,["typelang::evaluator::Prim2"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>",1,["typelang::infer::InferState"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>",1,["typelang::lexer::Token"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/parser/struct.Parser.html\" title=\"struct typelang::parser::Parser\">Parser</a>",1,["typelang::parser::Parser"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>",1,["typelang::typesys::ClassEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>",1,["typelang::typesys::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>",1,["typelang::typesys::QualType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>",1,["typelang::typesys::Scheme"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>",1,["typelang::typesys::TApp"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>",1,["typelang::typesys::TCon"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>",1,["typelang::typesys::TFun"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>",1,["typelang::typesys::TTuple"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>",1,["typelang::typesys::TVar"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>",1,["typelang::typesys::TVarSupply"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>",1,["typelang::typesys::TypeEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>",1,["typelang::typesys::UnifyError"]]]]]);
target/doc/trait.impl/core/marker/trait.Sync.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>",1,["typelang::ast::Expr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>",1,["typelang::ast::IntBase"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>",1,["typelang::ast::TypeExpr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>",1,["typelang::evaluator::Value"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>",1,["typelang::lexer::TokenKind"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>",1,["typelang::typesys::Type"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>",1,["typelang::ast::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>",1,["typelang::ast::Program"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>",1,["typelang::ast::SigmaType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>",1,["typelang::ast::TopLevel"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>",1,["typelang::errors::ErrorInfo"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>",1,["typelang::errors::EvalError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>",1,["typelang::errors::LexerError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>",1,["typelang::errors::ParseError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>",1,["typelang::errors::TypeError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>",1,["typelang::evaluator::Prim2"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>",1,["typelang::infer::InferState"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>",1,["typelang::lexer::Token"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/parser/struct.Parser.html\" title=\"struct typelang::parser::Parser\">Parser</a>",1,["typelang::parser::Parser"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>",1,["typelang::typesys::ClassEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>",1,["typelang::typesys::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>",1,["typelang::typesys::QualType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>",1,["typelang::typesys::Scheme"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>",1,["typelang::typesys::TApp"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>",1,["typelang::typesys::TCon"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>",1,["typelang::typesys::TFun"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>",1,["typelang::typesys::TTuple"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>",1,["typelang::typesys::TVar"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>",1,["typelang::typesys::TVarSupply"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>",1,["typelang::typesys::TypeEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>",1,["typelang::typesys::UnifyError"]]]]]);
target/doc/trait.impl/core/marker/trait.Unpin.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>",1,["typelang::ast::Expr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>",1,["typelang::ast::IntBase"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>",1,["typelang::ast::TypeExpr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>",1,["typelang::evaluator::Value"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>",1,["typelang::lexer::TokenKind"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>",1,["typelang::typesys::Type"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>",1,["typelang::ast::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>",1,["typelang::ast::Program"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>",1,["typelang::ast::SigmaType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>",1,["typelang::ast::TopLevel"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>",1,["typelang::errors::ErrorInfo"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>",1,["typelang::errors::EvalError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>",1,["typelang::errors::LexerError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>",1,["typelang::errors::ParseError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>",1,["typelang::errors::TypeError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>",1,["typelang::evaluator::Prim2"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>",1,["typelang::infer::InferState"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>",1,["typelang::lexer::Token"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/parser/struct.Parser.html\" title=\"struct typelang::parser::Parser\">Parser</a>",1,["typelang::parser::Parser"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>",1,["typelang::typesys::ClassEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>",1,["typelang::typesys::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>",1,["typelang::typesys::QualType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>",1,["typelang::typesys::Scheme"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>",1,["typelang::typesys::TApp"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>",1,["typelang::typesys::TCon"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>",1,["typelang::typesys::TFun"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>",1,["typelang::typesys::TTuple"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>",1,["typelang::typesys::TVar"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>",1,["typelang::typesys::TVarSupply"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>",1,["typelang::typesys::TypeEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>",1,["typelang::typesys::UnifyError"]]]]]);
target/doc/typelang/index.html:13:</div></details><h2 id="reexports" class="section-header">Re-exports<a href="#reexports" class="anchor">§</a></h2><dl class="item-table reexports"><dt><code>pub use crate::<a class="mod" href="ast/index.html" title="mod typelang::ast">ast</a>::*;</code></dt><dt><code>pub use crate::<a class="mod" href="errors/index.html" title="mod typelang::errors">errors</a>::*;</code></dt><dt><code>pub use crate::<a class="mod" href="parser/index.html" title="mod typelang::parser">parser</a>::*;</code></dt></dl><h2 id="modules" class="section-header">Modules<a href="#modules" class="anchor">§</a></h2><dl class="item-table"><dt><a class="mod" href="ast/index.html" title="mod typelang::ast">ast</a></dt><dd>抽象構文木（AST）</dd><dt><a class="mod" href="errors/index.html" title="mod typelang::errors">errors</a></dt><dd>エラー型の定義（共通フォーマット: [CODE] メッセージ @line:col / @pos）。</dd><dt><a class="mod" href="evaluator/index.html" title="mod typelang::evaluator">evaluator</a></dt><dd>評価器（evaluator）</dd><dt><a class="mod" href="infer/index.html" title="mod typelang::infer">infer</a></dt><dd>型推論（infer）</dd><dt><a class="mod" href="lexer/index.html" title="mod typelang::lexer">lexer</a></dt><dd>字句解析（lexer）</dd><dt><a class="mod" href="parser/index.html" title="mod typelang::parser">parser</a></dt><dd>構文解析（parser）</dd><dt><a class="mod" href="repl/index.html" title="mod typelang::repl">repl</a></dt><dd>REPL（対話環境）モジュール</dd><dt><a class="mod" href="typesys/index.html" title="mod typelang::typesys">typesys</a></dt><dd>型システム（typesys）</dd></dl></section></div></main></body></html>
target/doc/typelang/evaluator/enum.Value.html:14:    Prim1(<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.fn.html">fn</a>(<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>, <a class="struct" href="../errors/struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a>&gt;),
target/doc/typelang/evaluator/enum.Value.html:16:}</code></pre><h2 id="variants" class="variants section-header">Variants<a href="#variants" class="anchor">§</a></h2><div class="variants"><section id="variant.Int" class="variant"><a href="#variant.Int" class="anchor">§</a><h3 class="code-header">Int(<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.i64.html">i64</a>)</h3></section><section id="variant.Double" class="variant"><a href="#variant.Double" class="anchor">§</a><h3 class="code-header">Double(<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.f64.html">f64</a>)</h3></section><section id="variant.Bool" class="variant"><a href="#variant.Bool" class="anchor">§</a><h3 class="code-header">Bool(<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.bool.html">bool</a>)</h3></section><section id="variant.Char" class="variant"><a href="#variant.Char" class="anchor">§</a><h3 class="code-header">Char(<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.char.html">char</a>)</h3></section><section id="variant.String" class="variant"><a href="#variant.String" class="anchor">§</a><h3 class="code-header">String(<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html" title="struct alloc::string::String">String</a>)</h3></section><section id="variant.List" class="variant"><a href="#variant.List" class="anchor">§</a><h3 class="code-header">List(<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/vec/struct.Vec.html" title="struct alloc::vec::Vec">Vec</a>&lt;<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>&gt;)</h3></section><section id="variant.Tuple" class="variant"><a href="#variant.Tuple" class="anchor">§</a><h3 class="code-header">Tuple(<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/vec/struct.Vec.html" title="struct alloc::vec::Vec">Vec</a>&lt;<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>&gt;)</h3></section><section id="variant.Closure" class="variant"><a href="#variant.Closure" class="anchor">§</a><h3 class="code-header">Closure</h3></section><div class="sub-variant" id="variant.Closure.fields"><h4>Fields</h4><div class="sub-variant-field"><span id="variant.Closure.field.params" class="section-header"><a href="#variant.Closure.field.params" class="anchor field">§</a><code>params: <a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/vec/struct.Vec.html" title="struct alloc::vec::Vec">Vec</a>&lt;<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html" title="struct alloc::string::String">String</a>&gt;</code></span></div><div class="sub-variant-field"><span id="variant.Closure.field.body" class="section-header"><a href="#variant.Closure.field.body" class="anchor field">§</a><code>body: <a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/boxed/struct.Box.html" title="struct alloc::boxed::Box">Box</a>&lt;<a class="enum" href="../ast/enum.Expr.html" title="enum typelang::ast::Expr">Expr</a>&gt;</code></span></div><div class="sub-variant-field"><span id="variant.Closure.field.env" class="section-header"><a href="#variant.Closure.field.env" class="anchor field">§</a><code>env: <a class="type" href="type.Env.html" title="type typelang::evaluator::Env">Env</a></code></span></div></div><section id="variant.Prim1" class="variant"><a href="#variant.Prim1" class="anchor">§</a><h3 class="code-header">Prim1(<a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.fn.html">fn</a>(<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>, <a class="struct" href="../errors/struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a>&gt;)</h3></section><section id="variant.Prim2" class="variant"><a href="#variant.Prim2" class="anchor">§</a><h3 class="code-header">Prim2(<a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a>)</h3></section></div><h2 id="trait-implementations" class="section-header">Trait Implementations<a href="#trait-implementations" class="anchor">§</a></h2><div id="trait-implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-Clone-for-Value" class="impl"><a class="src rightside" href="../../src/typelang/evaluator.rs.html#16">Source</a><a href="#impl-Clone-for-Value" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html" title="trait core::clone::Clone">Clone</a> for <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.clone" class="method trait-impl"><a class="src rightside" href="../../src/typelang/evaluator.rs.html#16">Source</a><a href="#method.clone" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone" class="fn">clone</a>(&amp;self) -&gt; <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.clone_from" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215">Source</a></span><a href="#method.clone_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from" class="fn">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Debug-for-Value" class="impl"><a class="src rightside" href="../../src/typelang/evaluator.rs.html#16">Source</a><a href="#impl-Debug-for-Value" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html" title="trait core::fmt::Debug">Debug</a> for <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt" class="method trait-impl"><a class="src rightside" href="../../src/typelang/evaluator.rs.html#16">Source</a><a href="#method.fmt" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt">Read more</a></div></details></div></details></div><h2 id="synthetic-implementations" class="section-header">Auto Trait Implementations<a href="#synthetic-implementations" class="anchor">§</a></h2><div id="synthetic-implementations-list"><section id="impl-Freeze-for-Value" class="impl"><a href="#impl-Freeze-for-Value" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html" title="trait core::marker::Freeze">Freeze</a> for <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h3></section><section id="impl-RefUnwindSafe-for-Value" class="impl"><a href="#impl-RefUnwindSafe-for-Value" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html" title="trait core::panic::unwind_safe::RefUnwindSafe">RefUnwindSafe</a> for <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h3></section><section id="impl-Send-for-Value" class="impl"><a href="#impl-Send-for-Value" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html" title="trait core::marker::Send">Send</a> for <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h3></section><section id="impl-Sync-for-Value" class="impl"><a href="#impl-Sync-for-Value" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html" title="trait core::marker::Sync">Sync</a> for <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h3></section><section id="impl-Unpin-for-Value" class="impl"><a href="#impl-Unpin-for-Value" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html" title="trait core::marker::Unpin">Unpin</a> for <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h3></section><section id="impl-UnwindSafe-for-Value" class="impl"><a href="#impl-UnwindSafe-for-Value" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html" title="trait core::panic::unwind_safe::UnwindSafe">UnwindSafe</a> for <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a></h3></section></div><h2 id="blanket-implementations" class="section-header">Blanket Implementations<a href="#blanket-implementations" class="anchor">§</a></h2><div id="blanket-implementations-list"><details class="toggle implementors-toggle"><summary><section id="impl-Any-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/any.rs.html#138">Source</a><a href="#impl-Any-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html" title="trait core::any::Any">Any</a> for T<div class="where">where
target/doc/typelang/evaluator/enum.Value.html:27:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/evaluator/enum.Value.html:28:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/trait.impl/core/error/trait.Error.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>"]]]]);
target/doc/typelang/ast/enum.TypeExpr.html:20:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/ast/enum.TypeExpr.html:21:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/trait.impl/core/fmt/trait.Debug.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>"]]]]);
target/doc/typelang/evaluator/struct.Prim2.html:2:    pub f: <a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.fn.html">fn</a>(<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>, <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>, <a class="struct" href="../errors/struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a>&gt;,
target/doc/typelang/evaluator/struct.Prim2.html:4:}</code></pre><h2 id="fields" class="fields section-header">Fields<a href="#fields" class="anchor">§</a></h2><span id="structfield.f" class="structfield section-header"><a href="#structfield.f" class="anchor field">§</a><code>f: <a class="primitive" href="https://doc.rust-lang.org/1.89.0/std/primitive.fn.html">fn</a>(<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>, <a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>, <a class="struct" href="../errors/struct.EvalError.html" title="struct typelang::errors::EvalError">EvalError</a>&gt;</code></span><span id="structfield.a" class="structfield section-header"><a href="#structfield.a" class="anchor field">§</a><code>a: <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html" title="enum core::option::Option">Option</a>&lt;<a class="struct" href="https://doc.rust-lang.org/1.89.0/alloc/boxed/struct.Box.html" title="struct alloc::boxed::Box">Box</a>&lt;<a class="enum" href="enum.Value.html" title="enum typelang::evaluator::Value">Value</a>&gt;&gt;</code></span><h2 id="trait-implementations" class="section-header">Trait Implementations<a href="#trait-implementations" class="anchor">§</a></h2><div id="trait-implementations-list"><details class="toggle implementors-toggle" open><summary><section id="impl-Clone-for-Prim2" class="impl"><a class="src rightside" href="../../src/typelang/evaluator.rs.html#34">Source</a><a href="#impl-Clone-for-Prim2" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html" title="trait core::clone::Clone">Clone</a> for <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.clone" class="method trait-impl"><a class="src rightside" href="../../src/typelang/evaluator.rs.html#34">Source</a><a href="#method.clone" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone" class="fn">clone</a>(&amp;self) -&gt; <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone">Read more</a></div></details><details class="toggle method-toggle" open><summary><section id="method.clone_from" class="method trait-impl"><span class="rightside"><span class="since" title="Stable since Rust version 1.0.0">1.0.0</span> · <a class="src" href="https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215">Source</a></span><a href="#method.clone_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from" class="fn">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href="https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from">Read more</a></div></details></div></details><details class="toggle implementors-toggle" open><summary><section id="impl-Debug-for-Prim2" class="impl"><a class="src rightside" href="../../src/typelang/evaluator.rs.html#34">Source</a><a href="#impl-Debug-for-Prim2" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html" title="trait core::fmt::Debug">Debug</a> for <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h3></section></summary><div class="impl-items"><details class="toggle method-toggle" open><summary><section id="method.fmt" class="method trait-impl"><a class="src rightside" href="../../src/typelang/evaluator.rs.html#34">Source</a><a href="#method.fmt" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt" class="fn">fmt</a>(&amp;self, f: &amp;mut <a class="struct" href="https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html" title="struct core::fmt::Formatter">Formatter</a>&lt;'_&gt;) -&gt; <a class="type" href="https://doc.rust-lang.org/1.89.0/core/fmt/type.Result.html" title="type core::fmt::Result">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href="https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt">Read more</a></div></details></div></details></div><h2 id="synthetic-implementations" class="section-header">Auto Trait Implementations<a href="#synthetic-implementations" class="anchor">§</a></h2><div id="synthetic-implementations-list"><section id="impl-Freeze-for-Prim2" class="impl"><a href="#impl-Freeze-for-Prim2" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Freeze.html" title="trait core::marker::Freeze">Freeze</a> for <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h3></section><section id="impl-RefUnwindSafe-for-Prim2" class="impl"><a href="#impl-RefUnwindSafe-for-Prim2" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html" title="trait core::panic::unwind_safe::RefUnwindSafe">RefUnwindSafe</a> for <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h3></section><section id="impl-Send-for-Prim2" class="impl"><a href="#impl-Send-for-Prim2" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html" title="trait core::marker::Send">Send</a> for <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h3></section><section id="impl-Sync-for-Prim2" class="impl"><a href="#impl-Sync-for-Prim2" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html" title="trait core::marker::Sync">Sync</a> for <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h3></section><section id="impl-Unpin-for-Prim2" class="impl"><a href="#impl-Unpin-for-Prim2" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/marker/trait.Unpin.html" title="trait core::marker::Unpin">Unpin</a> for <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h3></section><section id="impl-UnwindSafe-for-Prim2" class="impl"><a href="#impl-UnwindSafe-for-Prim2" class="anchor">§</a><h3 class="code-header">impl <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html" title="trait core::panic::unwind_safe::UnwindSafe">UnwindSafe</a> for <a class="struct" href="struct.Prim2.html" title="struct typelang::evaluator::Prim2">Prim2</a></h3></section></div><h2 id="blanket-implementations" class="section-header">Blanket Implementations<a href="#blanket-implementations" class="anchor">§</a></h2><div id="blanket-implementations-list"><details class="toggle implementors-toggle"><summary><section id="impl-Any-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/any.rs.html#138">Source</a><a href="#impl-Any-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html" title="trait core::any::Any">Any</a> for T<div class="where">where
target/doc/typelang/evaluator/struct.Prim2.html:15:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/evaluator/struct.Prim2.html:16:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/ast/struct.SigmaType.html:16:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/ast/struct.SigmaType.html:17:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/ast/enum.IntBase.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/ast/enum.IntBase.html:19:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/ast/enum.Expr.html:66:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/ast/enum.Expr.html:67:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/ast/struct.TopLevel.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/ast/struct.TopLevel.html:19:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/ast/struct.Program.html:15:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/ast/struct.Program.html:16:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/all.html:1:<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="rustdoc"><meta name="description" content="List of all items in this crate"><title>List of all items in this crate</title><script>if(window.location.protocol!=="file:")document.head.insertAdjacentHTML("beforeend","SourceSerif4-Regular-6b053e98.ttf.woff2,FiraSans-Italic-81dc35de.woff2,FiraSans-Regular-0fe48ade.woff2,FiraSans-MediumItalic-ccf7e434.woff2,FiraSans-Medium-e1aa3f0a.woff2,SourceCodePro-Regular-8badfe75.ttf.woff2,SourceCodePro-Semibold-aa29a496.ttf.woff2".split(",").map(f=>`<link rel="preload" as="font" type="font/woff2" crossorigin href="../static.files/${f}">`).join(""))</script><link rel="stylesheet" href="../static.files/normalize-9960930a.css"><link rel="stylesheet" href="../static.files/rustdoc-84e720fa.css"><meta name="rustdoc-vars" data-root-path="../" data-static-root-path="../static.files/" data-current-crate="typelang" data-themes="" data-resource-suffix="" data-rustdoc-version="1.89.0 (29483883e 2025-08-04)" data-channel="1.89.0" data-search-js="search-92309212.js" data-settings-js="settings-5514c975.js" ><script src="../static.files/storage-4e99c027.js"></script><script defer src="../static.files/main-fd3af306.js"></script><noscript><link rel="stylesheet" href="../static.files/noscript-32bb7600.css"></noscript><link rel="alternate icon" type="image/png" href="../static.files/favicon-32x32-6580c154.png"><link rel="icon" type="image/svg+xml" href="../static.files/favicon-044be391.svg"></head><body class="rustdoc mod sys"><!--[if lte IE 11]><div class="warning">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class="mobile-topbar"><button class="sidebar-menu-toggle" title="show sidebar"></button></nav><nav class="sidebar"><div class="sidebar-crate"><h2><a href="../typelang/index.html">typelang</a><span class="version">0.1.0</span></h2></div><div class="sidebar-elems"><section id="rustdoc-toc"><h3><a href="#structs">Crate Items</a></h3><ul class="block"><li><a href="#structs" title="Structs">Structs</a></li><li><a href="#enums" title="Enums">Enums</a></li><li><a href="#functions" title="Functions">Functions</a></li><li><a href="#types" title="Type Aliases">Type Aliases</a></li></ul></section><div id="rustdoc-modnav"></div></div></nav><div class="sidebar-resizer" title="Drag to resize sidebar"></div><main><div class="width-limiter"><rustdoc-search></rustdoc-search><section id="main-content" class="content"><h1>List of all items</h1><h3 id="structs">Structs</h3><ul class="all-items"><li><a href="ast/struct.Constraint.html">ast::Constraint</a></li><li><a href="ast/struct.Program.html">ast::Program</a></li><li><a href="ast/struct.SigmaType.html">ast::SigmaType</a></li><li><a href="ast/struct.TopLevel.html">ast::TopLevel</a></li><li><a href="errors/struct.ErrorInfo.html">errors::ErrorInfo</a></li><li><a href="errors/struct.EvalError.html">errors::EvalError</a></li><li><a href="errors/struct.LexerError.html">errors::LexerError</a></li><li><a href="errors/struct.ParseError.html">errors::ParseError</a></li><li><a href="errors/struct.TypeError.html">errors::TypeError</a></li><li><a href="evaluator/struct.Prim2.html">evaluator::Prim2</a></li><li><a href="infer/struct.InferState.html">infer::InferState</a></li><li><a href="lexer/struct.Token.html">lexer::Token</a></li><li><a href="parser/struct.Parser.html">parser::Parser</a></li><li><a href="typesys/struct.ClassEnv.html">typesys::ClassEnv</a></li><li><a href="typesys/struct.Constraint.html">typesys::Constraint</a></li><li><a href="typesys/struct.QualType.html">typesys::QualType</a></li><li><a href="typesys/struct.Scheme.html">typesys::Scheme</a></li><li><a href="typesys/struct.TApp.html">typesys::TApp</a></li><li><a href="typesys/struct.TCon.html">typesys::TCon</a></li><li><a href="typesys/struct.TFun.html">typesys::TFun</a></li><li><a href="typesys/struct.TTuple.html">typesys::TTuple</a></li><li><a href="typesys/struct.TVar.html">typesys::TVar</a></li><li><a href="typesys/struct.TVarSupply.html">typesys::TVarSupply</a></li><li><a href="typesys/struct.TypeEnv.html">typesys::TypeEnv</a></li><li><a href="typesys/struct.UnifyError.html">typesys::UnifyError</a></li></ul><h3 id="enums">Enums</h3><ul class="all-items"><li><a href="ast/enum.Expr.html">ast::Expr</a></li><li><a href="ast/enum.IntBase.html">ast::IntBase</a></li><li><a href="ast/enum.TypeExpr.html">ast::TypeExpr</a></li><li><a href="evaluator/enum.Value.html">evaluator::Value</a></li><li><a href="lexer/enum.TokenKind.html">lexer::TokenKind</a></li><li><a href="typesys/enum.Type.html">typesys::Type</a></li></ul><h3 id="functions">Functions</h3><ul class="all-items"><li><a href="evaluator/fn.eval_expr.html">evaluator::eval_expr</a></li><li><a href="evaluator/fn.initial_env.html">evaluator::initial_env</a></li><li><a href="infer/fn.infer_expr.html">infer::infer_expr</a></li><li><a href="infer/fn.infer_type_str.html">infer::infer_type_str</a></li><li><a href="infer/fn.infer_type_str_with_defaulting.html">infer::infer_type_str_with_defaulting</a></li><li><a href="infer/fn.initial_class_env.html">infer::initial_class_env</a></li><li><a href="infer/fn.initial_env.html">infer::initial_env</a></li><li><a href="infer/fn.type_from_texpr.html">infer::type_from_texpr</a></li><li><a href="lexer/fn.lex.html">lexer::lex</a></li><li><a href="parser/fn.parse_expr.html">parser::parse_expr</a></li><li><a href="parser/fn.parse_program.html">parser::parse_program</a></li><li><a href="repl/cmd/fn.run_repl.html">repl::cmd::run_repl</a></li><li><a href="repl/fn.load_program_into_env.html">repl::load_program_into_env</a></li><li><a href="typesys/fn.apply_defaulting_simple.html">typesys::apply_defaulting_simple</a></li><li><a href="typesys/fn.apply_subst_c.html">typesys::apply_subst_c</a></li><li><a href="typesys/fn.apply_subst_q.html">typesys::apply_subst_q</a></li><li><a href="typesys/fn.apply_subst_s.html">typesys::apply_subst_s</a></li><li><a href="typesys/fn.apply_subst_t.html">typesys::apply_subst_t</a></li><li><a href="typesys/fn.bind.html">typesys::bind</a></li><li><a href="typesys/fn.compose.html">typesys::compose</a></li><li><a href="typesys/fn.ftv.html">typesys::ftv</a></li><li><a href="typesys/fn.generalize.html">typesys::generalize</a></li><li><a href="typesys/fn.instantiate.html">typesys::instantiate</a></li><li><a href="typesys/fn.pretty_qual.html">typesys::pretty_qual</a></li><li><a href="typesys/fn.qualify.html">typesys::qualify</a></li><li><a href="typesys/fn.t_list.html">typesys::t_list</a></li><li><a href="typesys/fn.t_string.html">typesys::t_string</a></li><li><a href="typesys/fn.unify.html">typesys::unify</a></li></ul><h3 id="types">Type Aliases</h3><ul class="all-items"><li><a href="evaluator/type.Env.html">evaluator::Env</a></li><li><a href="typesys/type.Subst.html">typesys::Subst</a></li></ul></section></div></main></body></html>
target/doc/typelang/typesys/struct.ClassEnv.html:23:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.ClassEnv.html:24:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.Constraint.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.Constraint.html:19:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.TVarSupply.html:12:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.TVarSupply.html:13:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.TCon.html:17:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.TCon.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/trait.impl/core/fmt/trait.Display.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>"]]]]);
target/doc/trait.impl/core/panic/unwind_safe/trait.UnwindSafe.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>",1,["typelang::ast::Expr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>",1,["typelang::ast::IntBase"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>",1,["typelang::ast::TypeExpr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>",1,["typelang::evaluator::Value"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>",1,["typelang::lexer::TokenKind"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>",1,["typelang::typesys::Type"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>",1,["typelang::ast::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>",1,["typelang::ast::Program"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>",1,["typelang::ast::SigmaType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>",1,["typelang::ast::TopLevel"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>",1,["typelang::errors::ErrorInfo"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>",1,["typelang::errors::EvalError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>",1,["typelang::errors::LexerError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>",1,["typelang::errors::ParseError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>",1,["typelang::errors::TypeError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>",1,["typelang::evaluator::Prim2"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>",1,["typelang::infer::InferState"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>",1,["typelang::lexer::Token"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/parser/struct.Parser.html\" title=\"struct typelang::parser::Parser\">Parser</a>",1,["typelang::parser::Parser"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>",1,["typelang::typesys::ClassEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>",1,["typelang::typesys::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>",1,["typelang::typesys::QualType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>",1,["typelang::typesys::Scheme"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>",1,["typelang::typesys::TApp"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>",1,["typelang::typesys::TCon"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>",1,["typelang::typesys::TFun"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>",1,["typelang::typesys::TTuple"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>",1,["typelang::typesys::TVar"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>",1,["typelang::typesys::TVarSupply"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>",1,["typelang::typesys::TypeEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.UnwindSafe.html\" title=\"trait core::panic::unwind_safe::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>",1,["typelang::typesys::UnifyError"]]]]]);
target/doc/trait.impl/core/panic/unwind_safe/trait.RefUnwindSafe.js:2:    var implementors = Object.fromEntries([["typelang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"typelang/ast/enum.Expr.html\" title=\"enum typelang::ast::Expr\">Expr</a>",1,["typelang::ast::Expr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"typelang/ast/enum.IntBase.html\" title=\"enum typelang::ast::IntBase\">IntBase</a>",1,["typelang::ast::IntBase"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"typelang/ast/enum.TypeExpr.html\" title=\"enum typelang::ast::TypeExpr\">TypeExpr</a>",1,["typelang::ast::TypeExpr"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"typelang/evaluator/enum.Value.html\" title=\"enum typelang::evaluator::Value\">Value</a>",1,["typelang::evaluator::Value"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"typelang/lexer/enum.TokenKind.html\" title=\"enum typelang::lexer::TokenKind\">TokenKind</a>",1,["typelang::lexer::TokenKind"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"typelang/typesys/enum.Type.html\" title=\"enum typelang::typesys::Type\">Type</a>",1,["typelang::typesys::Type"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/ast/struct.Constraint.html\" title=\"struct typelang::ast::Constraint\">Constraint</a>",1,["typelang::ast::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/ast/struct.Program.html\" title=\"struct typelang::ast::Program\">Program</a>",1,["typelang::ast::Program"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/ast/struct.SigmaType.html\" title=\"struct typelang::ast::SigmaType\">SigmaType</a>",1,["typelang::ast::SigmaType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/ast/struct.TopLevel.html\" title=\"struct typelang::ast::TopLevel\">TopLevel</a>",1,["typelang::ast::TopLevel"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.ErrorInfo.html\" title=\"struct typelang::errors::ErrorInfo\">ErrorInfo</a>",1,["typelang::errors::ErrorInfo"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.EvalError.html\" title=\"struct typelang::errors::EvalError\">EvalError</a>",1,["typelang::errors::EvalError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.LexerError.html\" title=\"struct typelang::errors::LexerError\">LexerError</a>",1,["typelang::errors::LexerError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.ParseError.html\" title=\"struct typelang::errors::ParseError\">ParseError</a>",1,["typelang::errors::ParseError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/errors/struct.TypeError.html\" title=\"struct typelang::errors::TypeError\">TypeError</a>",1,["typelang::errors::TypeError"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/evaluator/struct.Prim2.html\" title=\"struct typelang::evaluator::Prim2\">Prim2</a>",1,["typelang::evaluator::Prim2"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/infer/struct.InferState.html\" title=\"struct typelang::infer::InferState\">InferState</a>",1,["typelang::infer::InferState"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/lexer/struct.Token.html\" title=\"struct typelang::lexer::Token\">Token</a>",1,["typelang::lexer::Token"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/parser/struct.Parser.html\" title=\"struct typelang::parser::Parser\">Parser</a>",1,["typelang::parser::Parser"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.ClassEnv.html\" title=\"struct typelang::typesys::ClassEnv\">ClassEnv</a>",1,["typelang::typesys::ClassEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Constraint.html\" title=\"struct typelang::typesys::Constraint\">Constraint</a>",1,["typelang::typesys::Constraint"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.QualType.html\" title=\"struct typelang::typesys::QualType\">QualType</a>",1,["typelang::typesys::QualType"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.Scheme.html\" title=\"struct typelang::typesys::Scheme\">Scheme</a>",1,["typelang::typesys::Scheme"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TApp.html\" title=\"struct typelang::typesys::TApp\">TApp</a>",1,["typelang::typesys::TApp"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TCon.html\" title=\"struct typelang::typesys::TCon\">TCon</a>",1,["typelang::typesys::TCon"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TFun.html\" title=\"struct typelang::typesys::TFun\">TFun</a>",1,["typelang::typesys::TFun"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TTuple.html\" title=\"struct typelang::typesys::TTuple\">TTuple</a>",1,["typelang::typesys::TTuple"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVar.html\" title=\"struct typelang::typesys::TVar\">TVar</a>",1,["typelang::typesys::TVar"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TVarSupply.html\" title=\"struct typelang::typesys::TVarSupply\">TVarSupply</a>",1,["typelang::typesys::TVarSupply"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.TypeEnv.html\" title=\"struct typelang::typesys::TypeEnv\">TypeEnv</a>",1,["typelang::typesys::TypeEnv"]],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"typelang/typesys/struct.UnifyError.html\" title=\"struct typelang::typesys::UnifyError\">UnifyError</a>",1,["typelang::typesys::UnifyError"]]]]]);
target/doc/typelang/typesys/struct.Scheme.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.Scheme.html:19:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/enum.Type.html:21:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/enum.Type.html:22:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.TTuple.html:17:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.TTuple.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.TFun.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.TFun.html:19:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.QualType.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.QualType.html:19:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.TypeEnv.html:14:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.TypeEnv.html:15:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.UnifyError.html:15:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.UnifyError.html:16:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.TVar.html:17:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.TVar.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
target/doc/typelang/typesys/struct.TApp.html:18:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.Into.html" title="trait core::convert::Into">Into</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error-1" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#817">Source</a><a href="#associatedtype.Error-1" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" class="associatedtype">Error</a> = <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/convert/enum.Infallible.html" title="enum core::convert::Infallible">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_from" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#820">Source</a><a href="#method.try_from" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#tymethod.try_from" class="fn">try_from</a>(value: U) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;T, &lt;T as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;U&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details><details class="toggle implementors-toggle"><summary><section id="impl-TryInto%3CU%3E-for-T" class="impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#798-800">Source</a><a href="#impl-TryInto%3CU%3E-for-T" class="anchor">§</a><h3 class="code-header">impl&lt;T, U&gt; <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html" title="trait core::convert::TryInto">TryInto</a>&lt;U&gt; for T<div class="where">where
target/doc/typelang/typesys/struct.TApp.html:19:    U: <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class="impl-items"><details class="toggle" open><summary><section id="associatedtype.Error" class="associatedtype trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#802">Source</a><a href="#associatedtype.Error" class="anchor">§</a><h4 class="code-header">type <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#associatedtype.Error" class="associatedtype">Error</a> = &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class="toggle method-toggle" open><summary><section id="method.try_into" class="method trait-impl"><a class="src rightside" href="https://doc.rust-lang.org/1.89.0/src/core/convert/mod.rs.html#805">Source</a><a href="#method.try_into" class="anchor">§</a><h4 class="code-header">fn <a href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryInto.html#tymethod.try_into" class="fn">try_into</a>(self) -&gt; <a class="enum" href="https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html" title="enum core::result::Result">Result</a>&lt;U, &lt;U as <a class="trait" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html" title="trait core::convert::TryFrom">TryFrom</a>&lt;T&gt;&gt;::<a class="associatedtype" href="https://doc.rust-lang.org/1.89.0/core/convert/trait.TryFrom.html#associatedtype.Error" title="type core::convert::TryFrom::Error">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details></div></section></div></main></body></html>
